<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Sagar's Blog - tutorial</title><link href="https://sagargiri.com/" rel="alternate"></link><link href="https://sagargiri.com/feeds/tutorial.atom.xml" rel="self"></link><id>https://sagargiri.com/</id><updated>2020-12-31T15:33:00+09:00</updated><subtitle>&lt;pre&gt;$ cd /pub &amp;&amp; more beer&lt;/pre&gt;</subtitle><entry><title>Instrument your Java Code with Micrometer, Prometheus, and Grafana.</title><link href="https://sagargiri.com/java-instrumentation-with-micrometer" rel="alternate"></link><published>2020-12-31T15:33:00+09:00</published><updated>2020-12-31T15:33:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2020-12-31:/java-instrumentation-with-micrometer</id><summary type="html">&lt;p&gt;In this blog tutorial, let's instrument your Java SE code with Prometheus using Micrometer&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Micrometer provides a simple facade over the instrumentation clients for the most popular monitoring systems, allowing you to instrument your JVM-based application code without vendor lock-in. Think SLF4J, but for metrics. - https://micrometer.io/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm assuming you have some Java code, and you'd like to instrument it (measure how well it's performing, what is the heap space in current state, are there any exceptions. etc)&lt;/p&gt;
&lt;p&gt;With this 3 steps, you'll be up and running in no time.&lt;/p&gt;
&lt;h1&gt;Step 1: Setup the development environment&lt;/h1&gt;
&lt;p&gt;Here I am using &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; and &lt;a href="https://docs.docker.com/compose/"&gt;Docker compose&lt;/a&gt; to set up the environment for simplicity purposes. If you do not have these in your machine, I highly recommend you to install it so that you can follow along.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The full source code is available here: https://github.com/girisagar46/prome-java&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;First and foremost, I will set &lt;a href="https://prometheus.io/"&gt;Prometheus&lt;/a&gt; and &lt;a href="https://grafana.com/"&gt;Grafana&lt;/a&gt; in my &lt;code&gt;docker-compose.yml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;docker-compose.yml&lt;/code&gt; file looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3.8&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;prometheus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prom&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;prometheus&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;container_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prometheus&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;monitoring&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;prometheus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yml&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;prometheus&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;prometheus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yml&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;prometheus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--config.file=/etc/prometheus/prometheus.yml&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--storage.tsdb.path=/data&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;9090:9090&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;restart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;always&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;datasources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;datasources&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dashboards&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dashboard&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3000:3000&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;restart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;always&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GF_SECURITY_ADMIN_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GF_SECURITY_ADMIN_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GF_USERS_ALLOW_SIGN_UP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Since we're mounting &lt;code&gt;/monitoring/prometheus.yml&lt;/code&gt; into prometheus service, let's create the directory &lt;code&gt;monitoring&lt;/code&gt; and create a file &lt;code&gt;prometheus.yml&lt;/code&gt; inside the &lt;code&gt;monitoring&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;The contents of the &lt;code&gt;prometheus.yml&lt;/code&gt; looks like this:&lt;/p&gt;
&lt;script src="https://gist.github.com/girisagar46/3f2327a403eb37f6b5cac0bf07aa592a.js"&gt;&lt;/script&gt;

&lt;p&gt;Once the &lt;code&gt;docker-compose.yml&lt;/code&gt; is ready, start the services with &lt;code&gt;docker-compose up&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And when the services are up, visit &lt;a href="http://localhost:9090/"&gt;http://localhost:9090/&lt;/a&gt;. You'll see something like this:
&lt;img alt="Prometheus UI" src="../images/java-micrometer/prometheus-ui.png"&gt;&lt;/p&gt;
&lt;p&gt;And if you navigate to &lt;a href="http://localhost:9090/targets"&gt;http://localhost:9090/targets&lt;/a&gt; (&lt;code&gt;Status&lt;/code&gt; dropdown -&amp;gt; &lt;code&gt;Targets&lt;/code&gt;), you'll see something like this:
&lt;img alt="Prometheus UI" src="../images/java-micrometer/prometheus-targets.png"&gt;&lt;/p&gt;
&lt;p&gt;As you can see there's an error message that says:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;Get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://host.docker.internal:8080/metrics&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;dial&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;tcp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;192&lt;/span&gt;.&lt;span class="mi"&gt;168&lt;/span&gt;.&lt;span class="mi"&gt;65&lt;/span&gt;.&lt;span class="mi"&gt;2&lt;/span&gt;:&lt;span class="mi"&gt;8080&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;connect&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;connection&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;refused&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;because our Java application is not running at the moment. We'll fix this a little letter.&lt;/p&gt;
&lt;p&gt;If you visit &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt;, you'll see the Grafana login page:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Grafana Login" src="../images/java-micrometer/grafana-login.png"&gt;&lt;/p&gt;
&lt;p&gt;Use the default username: &lt;code&gt;admin&lt;/code&gt; and password &lt;code&gt;admin&lt;/code&gt; to get inside the Grafana dashboard. When asked to change password, skip it as it's just a local development environment. Obviously in production, this has to be more sure by enabling the login by Gmail or any other OAUTH mechanism.&lt;/p&gt;
&lt;p&gt;Now you need to add Prometheus data source so that our Grafana can get the piece of the metrics we're exposing.
To add the datasource directly go to &lt;a href="http://localhost:3000/datasources"&gt;http://localhost:3000/datasources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then click on &lt;strong&gt;Add data source&lt;/strong&gt; button and fill up the form as shown in the screenshot below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="grafana-datasource.png" src="../images/java-micrometer/grafana-datasource.png"&gt;&lt;/p&gt;
&lt;h1&gt;Step 2: Expose metrics from your Java application&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Create &lt;code&gt;MetricService&lt;/code&gt; class which will provide the singleton instance of &lt;code&gt;PrometheusMeterRegistry&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;script src="https://gist.github.com/girisagar46/9ffa46b7f251301576a7df9bd4e59c00.js"&gt;&lt;/script&gt;

&lt;ol&gt;
&lt;li&gt;Create HTTP metric endpoint where prometheus can go to scrape the metrics. As you can see in the &lt;code&gt;prometheus.yml&lt;/code&gt; file we've defined &lt;code&gt;metrics_path: "/metrics"&lt;/code&gt;. So, let's create HTTP endpoint. I'll add this in the &lt;code&gt;Actuator.java&lt;/code&gt; file:&lt;/li&gt;
&lt;/ol&gt;
&lt;script src="https://gist.github.com/girisagar46/2684a5443274bf19890a5c5224e4e2fc.js"&gt;&lt;/script&gt;

&lt;ol&gt;
&lt;li&gt;Create the Main class (the entry point to our application)&lt;/li&gt;
&lt;/ol&gt;
&lt;script src="https://gist.github.com/girisagar46/8a79f2433a238ab60dad71aec5235c12.js"&gt;&lt;/script&gt;

&lt;p&gt;At this point, the source code directory looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="project-structure.png" src="../images/java-micrometer/project-structure.png"&gt;&lt;/p&gt;
&lt;p&gt;Now if you run your application (Execute Main.java) and go to &lt;a href="http://localhost:8080/metrics"&gt;http://localhost:8080/metrics&lt;/a&gt;, you'll see following output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;...
&lt;span class="gh"&gt;#&lt;/span&gt; HELP jvm_gc_live_data_size_bytes Size of long-lived heap memory pool after reclamation
&lt;span class="gh"&gt;#&lt;/span&gt; TYPE jvm_gc_live_data_size_bytes gauge
jvm_gc_live_data_size_bytes 0.0
&lt;span class="gh"&gt;#&lt;/span&gt; HELP jvm_buffer_count_buffers An estimate of the number of buffers in the pool
&lt;span class="gh"&gt;#&lt;/span&gt; TYPE jvm_buffer_count_buffers gauge
jvm_buffer_count_buffers{id=&amp;quot;mapped - &amp;#39;non-volatile memory&amp;#39;&amp;quot;,} 0.0
jvm_buffer_count_buffers{id=&amp;quot;mapped&amp;quot;,} 0.0
jvm_buffer_count_buffers{id=&amp;quot;direct&amp;quot;,} 2.0
&lt;span class="gh"&gt;#&lt;/span&gt; HELP jvm_memory_used_bytes The amount of used memory
&lt;span class="gh"&gt;#&lt;/span&gt; TYPE jvm_memory_used_bytes gauge
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which means your Java application is exposing metrics for the Prometheus to grab.&lt;/p&gt;
&lt;h1&gt;Step 3: Visualize the exposed metrics in Grafana&lt;/h1&gt;
&lt;p&gt;Since, we're only exposing JVM metrics for now let's see those exposed metrics on Grafana through a sweet dashboard.&lt;/p&gt;
&lt;p&gt;Let's import the &lt;a href="https://grafana.com/grafana/dashboards/4701"&gt;Micrometer grafana official dashboard&lt;/a&gt;. The ID of the grafana dashboard is &lt;code&gt;4701&lt;/code&gt;. So, let's import the dashboard to Grafana.&lt;/p&gt;
&lt;p&gt;Click on the &lt;strong&gt;Import&lt;/strong&gt; button which is shown in the screenshot below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="dashboard-import.png" src="../images/java-micrometer/dashboard-import.png"&gt;&lt;/p&gt;
&lt;p&gt;Type &lt;code&gt;4701&lt;/code&gt; in the input field &lt;code&gt;Import via grafana.com&lt;/code&gt; and click &lt;strong&gt;Load&lt;/strong&gt; button.&lt;/p&gt;
&lt;p&gt;&lt;img alt="import-4701.png" src="../images/java-micrometer/import-4701.png"&gt;&lt;/p&gt;
&lt;p&gt;Once, you click load, you'll see this page. Follow the 3 steps shown in the screenshot.&lt;/p&gt;
&lt;p&gt;&lt;img alt="import-dashboard.png" src="../images/java-micrometer/import-dashboard.png"&gt;&lt;/p&gt;
&lt;p&gt;Now your dashboard is imported, change the date range to view recent data.&lt;/p&gt;
&lt;p&gt;&lt;img alt="dashboard-range.png" src="../images/java-micrometer/dashboard-range.png"&gt;&lt;/p&gt;
&lt;p&gt;Congratulations!! your dashboard is fully functional and ready to use.&lt;/p&gt;
&lt;p&gt;&lt;img alt="full-dashboard.png" src="../images/java-micrometer/full-dashboard.png"&gt;&lt;/p&gt;
&lt;p&gt;You can play with Prometheus and Grafana as much as you like because everything is running in local. Try creating some alerts, Prometheus rules, write some PROMQL and expose some other metrics with Micrometer.&lt;/p&gt;
&lt;p&gt;If you want to take this to production, you can do it in various ways. Using K8s, using 3rd party service, hosting your own, using AWS managed service, etc. There are plethora of options, and you can choose any depending on your cost and requirements.&lt;/p&gt;
&lt;h1&gt;Going further&lt;/h1&gt;
&lt;p&gt;Now the basic setup is done, the metrics world does not stop here. It's a vast ocean. Here are some further additional resources which will help you to go forward.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://micrometer.io/docs/concepts"&gt;https://micrometer.io/docs/concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://prometheus.io/docs/prometheus/latest/getting_started/"&gt;https://prometheus.io/docs/prometheus/latest/getting_started/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://prometheus.io/docs/prometheus/latest/querying/basics/"&gt;https://prometheus.io/docs/prometheus/latest/querying/basics/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hTjHuoWxsks"&gt;Video: PromQL for Mere Mortals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=nJMRmhbY5hY"&gt;Video: The 4 Types Of Prometheus Metrics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.robustperception.io/blog"&gt;https://www.robustperception.io/blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://grafana.com/tutorials/"&gt;https://grafana.com/tutorials/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prometheus/client_java"&gt;https://github.com/prometheus/client_java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/PrometheusMonitoring"&gt;https://www.reddit.com/r/PrometheusMonitoring&lt;/a&gt; -&amp;gt; Reddit community&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/grafana"&gt;https://www.reddit.com/r/grafana&lt;/a&gt; -&amp;gt; Reddit community&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slofile.com/slack/micrometer-metrics"&gt;https://slofile.com/slack/micrometer-metrics&lt;/a&gt; -&amp;gt; Official Slack channel for Micrometer (Join and ask any questions related to Prometheus, Grafana and Micrometer)&lt;/li&gt;
&lt;/ol&gt;</content><category term="tutorial"></category><category term="tutorial"></category><category term="java"></category><category term="micrometer"></category><category term="prometheus"></category></entry><entry><title>Build AWS CodePipeline CI/CD for your Django Application</title><link href="https://sagargiri.com/build-aws-codepipeline-for-cicd" rel="alternate"></link><published>2019-02-15T22:50:00+09:00</published><updated>2019-02-15T22:50:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2019-02-15:/build-aws-codepipeline-for-cicd</id><summary type="html">&lt;p&gt;In this article, you'll learn how to setup AWS CodePipeline for Continuous Integration and Continuous Delivery (CI/CD) pipeline for your Django Application.&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Assumption: For this tutorial, I am assuming you already have an EC2 instance where you've configured and deploy a Django application.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In &lt;a href="https://girisagar46.github.io/from-bitbucket-pipeline-to-aws-codecommit"&gt;previous tutorial&lt;/a&gt;, you learnt about syncing your BitBucket repository to AWS CodeCommit. Now, since your source code is already into AWS CodeCommit, you can now setup AWS CodePipeline for CI/CD.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Cover" src="../images/codepipeline/cover.png"&gt;&lt;/p&gt;
&lt;p&gt;This tutorial will be a little bit long and I will guide you to setup AWS CodePipeline for your Django application step by step with no step skipped.&lt;/p&gt;
&lt;p&gt;Okay, Let's begin!&lt;/p&gt;
&lt;h2&gt;Step 0 (True programmer starts counting from zero ;) )&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Go to AWS Console and select AWS CodePipeline which is under the &lt;strong&gt;Developer Tools&lt;/strong&gt; section. Or you can also search for AWS CodePipeline by typing the name under &lt;strong&gt;Find Services&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="AWS Console" src="../images/codepipeline/console.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;AWS Console&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Step 1&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Once you are in AWS CodePipeline click on &lt;strong&gt;Create pipeline&lt;/strong&gt; button. You'll be then redirected to &lt;strong&gt;Choose pipeline settings&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Choose pipeline settings" src="../images/codepipeline/Step-1.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Give yor pipeline a name under the &lt;strong&gt;Pipeline name&lt;/strong&gt; input field.&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;New service role&lt;/strong&gt; under the &lt;strong&gt;Service role&lt;/strong&gt; section.&lt;/li&gt;
&lt;li&gt;Under &lt;strong&gt;Role name&lt;/strong&gt; section, you'll be provided a default role name. But, you may wish to give a proper name which you can remember. In that case, provide your own &lt;strong&gt;Role name&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Check the checkbox that says &lt;em&gt;Allow AWS CodePipeline to create a service role so it can be used with this new pipeline&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Under &lt;strong&gt;Artifact store&lt;/strong&gt;, select &lt;strong&gt;Custom location&lt;/strong&gt;. And here's a tricky part. Artifacts are files that is generated after the CI part is completed. These artifacts need to be stored somewhere. In CodePipeline's case, it's the S3 bucket. If you choose &lt;strong&gt;Default location&lt;/strong&gt;, your artifacts will be stored in the S3 location defined by the CodePipeline itself. In my case, I choose to store my artifacts in my own S3 bucket. Here's a &lt;a href="#"&gt;tutorial&lt;/a&gt; if you don't know how to create a S3 bucket.&lt;/li&gt;
&lt;li&gt;After filling up this form, click the &lt;strong&gt;Next&lt;/strong&gt; button.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 2&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;After clicking &lt;strong&gt;Next&lt;/strong&gt; at the end of &lt;strong&gt;Step 1&lt;/strong&gt;, you'll see another form where you'll &lt;strong&gt;Add source&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Add Source stage" src="../images/codepipeline/Step-2.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select &lt;strong&gt;Source provider&lt;/strong&gt;. In this case, I am selecting &lt;strong&gt;AWS CodeCommit&lt;/strong&gt; because I've already &lt;a href="https://girisagar46.github.io/from-bitbucket-pipeline-to-aws-codecommit"&gt;synced my BitBucket repository to AWS CodeCommit&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Select your &lt;strong&gt;Repository name&lt;/strong&gt; from the drop down option.&lt;/li&gt;
&lt;li&gt;Select the &lt;strong&gt;Branch name&lt;/strong&gt; from the dropdown option. This &lt;strong&gt;Branch name&lt;/strong&gt; indicates triggering of CI when a commit is made to this branch.&lt;/li&gt;
&lt;li&gt;On &lt;strong&gt;Change detection options&lt;/strong&gt; select the recommended option &lt;strong&gt;Amazon CloudWatch Events&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Next&lt;/strong&gt; and start &lt;strong&gt;Step 3&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 3&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Add build stage" src="../images/codepipeline/Step-3.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select &lt;strong&gt;Build provider&lt;/strong&gt; as &lt;strong&gt;AWS CodeBuild&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Now, you need to setup a &lt;strong&gt;Project&lt;/strong&gt; for AWS CodeBuild. Click on &lt;strong&gt;Create project&lt;/strong&gt; button as shown in the picture.&lt;/li&gt;
&lt;li&gt;When you click that &lt;strong&gt;Create project&lt;/strong&gt;, a new window will open where you will setup a CodeBuild project. Let's call it &lt;strong&gt;Step 4&lt;/strong&gt; for now. Now, let's jump to &lt;strong&gt;Step 4&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 4&lt;/h2&gt;
&lt;p&gt;I'll be breaking down this step into small chunks.&lt;/p&gt;
&lt;h3&gt;Step 4-1 (Create build project)&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Create build project" src="../images/codepipeline/Step-4-1.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Give your project a name under &lt;strong&gt;Project name&lt;/strong&gt; input field.&lt;/li&gt;
&lt;li&gt;Give a project &lt;strong&gt;Description&lt;/strong&gt; if you like. It's totally optional but it's a good practice to describe what it does.&lt;/li&gt;
&lt;li&gt;You can add tags to your project but, I am leaving it blank for now.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Step 4-2 (Environment)&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Environment" src="../images/codepipeline/Step-4-2.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Just below &lt;strong&gt;Create build project&lt;/strong&gt;, you'll see &lt;strong&gt;Environment&lt;/strong&gt; configuration&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Managed image&lt;/strong&gt; under &lt;strong&gt;Environment image&lt;/strong&gt; section&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Operating system&lt;/strong&gt; as &lt;strong&gt;Ubuntu&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Runtime &lt;strong&gt;Python&lt;/strong&gt; (Remember, we are doing CI for Django application)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;aws/codebuild/python:3.6.5&lt;/strong&gt; as &lt;strong&gt;Runtime version&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Always use the latest image for this runtime version&lt;/strong&gt; under the &lt;strong&gt;Image version&lt;/strong&gt; section&lt;/li&gt;
&lt;li&gt;I am not selecting &lt;strong&gt;Privileged&lt;/strong&gt; option. It's description is self explanatory. If you want more details, see the AWS CodeBuild official documentation&lt;/li&gt;
&lt;li&gt;Choose &lt;strong&gt;New service role&lt;/strong&gt; under the &lt;strong&gt;Service role&lt;/strong&gt; section. We are selecting &lt;strong&gt;New service role&lt;/strong&gt; because we haven't created any role yet for the code build from IAM. So, we'll just create a new one.&lt;/li&gt;
&lt;li&gt;Give a proper &lt;strong&gt;Role name&lt;/strong&gt; so that you can remember and if you see it in the IAM console, you'll just instantly recognize that this is a role or AWS CodeBuild&lt;/li&gt;
&lt;li&gt;I am leaving &lt;strong&gt;Additional configuration&lt;/strong&gt; as empty. This is where you set up Environment variables, system configuration and so on. You can setup some &lt;strong&gt;Additional configuration&lt;/strong&gt; if you like&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Step 4-3 (Buildspec)&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Buildspec" src="../images/codepipeline/Step-4-3.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select &lt;strong&gt;Use a buildspec file&lt;/strong&gt; under &lt;strong&gt;Build specifications&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Under the &lt;strong&gt;Buildspec name&lt;/strong&gt; section, you can add your own custom name if you have custom buildspec yml file but that's completely optional&lt;/li&gt;
&lt;li&gt;Fill out the &lt;strong&gt;Logs&lt;/strong&gt; section. Your build logs are all streamed to &lt;strong&gt;AWS CloudWatch&lt;/strong&gt; if you want. You can also use S3 to store your logs. In my case, I chose &lt;strong&gt;AWS CloudWatch&lt;/strong&gt; and gave a &lt;strong&gt;Group name&lt;/strong&gt; and &lt;strong&gt;Stream name&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Now click on &lt;strong&gt;Continue to CodePipeline&lt;/strong&gt; button and you will be redirected to that page (&lt;strong&gt;Step 3&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 5&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;After &lt;strong&gt;Step 4-3&lt;/strong&gt;, you'll be redirected to that &lt;strong&gt;Add build stage&lt;/strong&gt; page and you'll see your newly created build project. If you don't see it there, then just refresh the page.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Project in build stage" src="../images/codepipeline/Step-5.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Now, click the &lt;strong&gt;Next&lt;/strong&gt; button.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 6&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Add deploy stage" src="../images/codepipeline/Step-6.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This step is called &lt;strong&gt;Add deploy stage&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;First, choose the deploy provider. Select &lt;strong&gt;AWS CodeDeploy&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Under the &lt;strong&gt;Application name&lt;/strong&gt; section, you should choose the CodeDeploy application. Since, we haven't yet created the CodeDeploy application, let's just create one. Don't close this browser tab. Just open new browser tab and go to &lt;strong&gt;Step 7&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 7&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;To create the &lt;strong&gt;AWS CodeDeploy&lt;/strong&gt; application, first go to the &lt;strong&gt;CodeDeploy&lt;/strong&gt; section from AWS Console and click on the &lt;strong&gt;Create application&lt;/strong&gt; button. You'll then see &lt;strong&gt;Application configuration&lt;/strong&gt; form. Give your application a name &lt;strong&gt;Application name&lt;/strong&gt; and choose the &lt;strong&gt;Compute platform&lt;/strong&gt; as &lt;strong&gt;EC2/On-premises&lt;/strong&gt; since we are deploying our application on our EC2 server.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Create code deploy application" src="../images/codepipeline/Step-7.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;After you create the CodeDeploy application, we need to divert a little bit to setup a &lt;strong&gt;New service IAM Role&lt;/strong&gt; and a &lt;strong&gt;Deployment group&lt;/strong&gt;. We'll continue from &lt;strong&gt;Step 6&lt;/strong&gt; after setting up the deployment group. For now, let's go to step 8. We'll revisit &lt;strong&gt;Step 6&lt;/strong&gt; after this.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 8 (Create New service IAM Role for CodeDeploy)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Go to the &lt;strong&gt;AWS IAM Console&lt;/strong&gt;
&lt;img alt="IAM Roles" src="../images/codepipeline/Step-8.png"&gt;&lt;/li&gt;
&lt;li&gt;Click on &lt;strong&gt;Roles&lt;/strong&gt; on the sidebar menu&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then click on &lt;strong&gt;Create role&lt;/strong&gt; button.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select &lt;strong&gt;CodeDeploy&lt;/strong&gt; and also &lt;strong&gt;CodeDeploy&lt;/strong&gt; under &lt;strong&gt;Select your use case&lt;/strong&gt;
&lt;img alt="Code deploy selection" src="../images/codepipeline/Step-9.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;You'll see something like this:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Attached permissions policies" src="../images/codepipeline/Step-10.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click &lt;strong&gt;Next: Tags&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Give your role a tag with &lt;strong&gt;Name&lt;/strong&gt; and &lt;strong&gt;Value&lt;/strong&gt; if you like
&lt;img alt="Role tags" src="../images/codepipeline/Step-11.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;Next: Review&lt;/strong&gt; button
&lt;img alt="Role Review" src="../images/codepipeline/Step-12.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Give your role a name. We'll be using this role while creating deployment group.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Then click on &lt;strong&gt;Create role&lt;/strong&gt; button&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 9 (Create deployment group)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Under &lt;strong&gt;CodeDeploy&lt;/strong&gt; &amp;gt; &lt;strong&gt;Application&lt;/strong&gt; section, you'll see the &lt;strong&gt;CodeDeploy&lt;/strong&gt; application name &lt;em&gt;hello-world-codedeploy-application&lt;/em&gt; that you just created in &lt;strong&gt;Step 7&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Click on the application link and under the &lt;strong&gt;Deployment groups&lt;/strong&gt; tab, you'll see a button that says &lt;strong&gt;Create deployment group&lt;/strong&gt;. Click that.&lt;/li&gt;
&lt;li&gt;You'll see a form like this:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Deployment group creation form" src="../images/codepipeline/Step-13.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Under the &lt;strong&gt;Service role&lt;/strong&gt; section, select the service role that you just created on &lt;strong&gt;Step 9&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Under &lt;strong&gt;Environment configuration&lt;/strong&gt; section, select &lt;strong&gt;Amazon EC2 instances&lt;/strong&gt;. Then add tags. These tags are actually the EC2 instance tag that you've already setup for Django application deployment&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fill out the form and click &lt;strong&gt;Create deployment group&lt;/strong&gt; button&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Your deployment group will be created and you'll see a page just like this:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Deployment group creation complete" src="../images/codepipeline/Step-14.png"&gt;&lt;/p&gt;
&lt;h2&gt;Step 10&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Now go to &lt;strong&gt;Step 6&lt;/strong&gt; where you've left off. Since, we've just created &lt;strong&gt;CodeDeploy application&lt;/strong&gt; and &lt;strong&gt;Deployment group&lt;/strong&gt;. Select those values in specific fields. If they are not populated under the select dropdown, just refresh the page and you'll be fine.
&lt;img alt="Code deploy stage" src="../images/codepipeline/Step-15.png"&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Next&lt;/strong&gt; button and go to &lt;strong&gt;Step 11&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 11&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This is probably the last step of our code pipeline setup. After clicking the &lt;strong&gt;Next&lt;/strong&gt; button from &lt;strong&gt;Step 10&lt;/strong&gt;, you'll see a &lt;strong&gt;CodePipeline Review&lt;/strong&gt; page.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="CodePipeline review" src="../images/codepipeline/Step-16.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Just go through it and check if everything is setup correctly&lt;/li&gt;
&lt;li&gt;If you need to change something, go to previous section. And if you think everything is fine, click on &lt;strong&gt;Create pipeline&lt;/strong&gt; button&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 12&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You'll see a success page something like this.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="CodePipeline complete" src="../images/codepipeline/Step-17.png"&gt;&lt;/p&gt;
&lt;h2&gt;Step 13 (Create buildspec.yml file)&lt;/h2&gt;
&lt;p&gt;At this point, your pipeline will obviously fail in the &lt;strong&gt;Build&lt;/strong&gt; section because we haven't setup the &lt;code&gt;buildspec.yml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;Here's a &lt;code&gt;buildspec.yml&lt;/code&gt; file that I setup for my django project pipeline. Take a reference and change accordingly.&lt;/p&gt;
&lt;script src="https://gist.github.com/girisagar46/6e351be212e94e98dbc159e57795a0cc.js"&gt;&lt;/script&gt;

&lt;p&gt;**I'll be writing a separate post on what's going inside the &lt;code&gt;buildspec.yml&lt;/code&gt; file. But, for now just copy-paste this in your &lt;code&gt;buildspec.yml&lt;/code&gt; file and push it to your repository.&lt;/p&gt;
&lt;h2&gt;Step 14 (Create appspec.yml file)&lt;/h2&gt;
&lt;p&gt;Your CodePipeline will still fail on &lt;strong&gt;Deploy&lt;/strong&gt; part because we haven't still setup an &lt;code&gt;appspec.yml&lt;/code&gt; file yet. This file is used by the CodeDeploy to deploy our application to the EC2 instance.&lt;/p&gt;
&lt;p&gt;Here's the configuration for my &lt;code&gt;appspec.yml&lt;/code&gt; file that I setup for my django project pipeline. Take a reference and change it accordingly.&lt;/p&gt;
&lt;script src="https://gist.github.com/girisagar46/b6f6e3f80b1fc32561ebece6fdaa465d.js"&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;After this, your CodePipeline should be Green.&lt;/strong&gt;&lt;/p&gt;</content><category term="tutorial"></category><category term="devops"></category><category term="cicd"></category><category term="aws"></category><category term="aws codepipeline"></category><category term="codecommit"></category><category term="django"></category><category term="continuous integration"></category><category term="continuous deployment"></category></entry><entry><title>From Bitbucket Pipeline to AWS CodeCommit</title><link href="https://sagargiri.com/from-bitbucket-pipeline-to-aws-codecommit" rel="alternate"></link><published>2019-02-08T22:08:00+09:00</published><updated>2019-02-08T22:08:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2019-02-08:/from-bitbucket-pipeline-to-aws-codecommit</id><summary type="html">&lt;p&gt;In this article you'll ne learning how to sync your BitBucket repository to AWS CodeCommit. Once your AWS CodeCommit is synced with your BitBucket repo you can use AWS CodeCommit for many AWS services like CodePipeline, CodeBuild, CodeDeploy etc.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Setup codecommit IAM user&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Create new user from AWS IAM console&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Give two permission to that new codecommit user: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AWSCodeCommitFullAccess&lt;/code&gt; and &lt;/li&gt;
&lt;li&gt;&lt;code&gt;AmazonS3FullAccess&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open that new user from IAM console. Under user's section and go to &lt;strong&gt;Security Credentials&lt;/strong&gt; tab&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Under &lt;strong&gt;SSH keys for AWS CodeCommit&lt;/strong&gt; upload new SSH public key. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To do this open up your terminal and add following commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ ssh-keygen -f ~/.ssh/codecommit_rsa&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;And inside &lt;strong&gt;.ssh&lt;/strong&gt; folder you’ll find &lt;code&gt;codecommit_rsa&lt;/code&gt; and &lt;code&gt;codecommit_rsa.pub&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;codecommit_rsa.pub&lt;/code&gt; in your editor and copy the contents&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Upload SSH public Key&lt;/strong&gt; button and in the popup and paste the contents of &lt;code&gt;codecommit_rsa.pub&lt;/code&gt; file and click Upload &lt;strong&gt;SSH public Key&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Upload SSH public Key" src="../images/cicd/upload-ssh-aws.png"&gt;&lt;/p&gt;
&lt;p&gt;After uploading this, you’ll get the “SSH key ID”&lt;/p&gt;
&lt;p&gt;&lt;img alt="The SSH KEY ID" src="../images/cicd/ssh-key-id.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open your terminal and edit this file: &lt;code&gt;~/.ssh/config&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Set the values as described below and save the file.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Host git-codecommit.*.amazonaws.com
User Your-IAM-SSH-Key-ID-Here
IdentityFile ~/.ssh/codecommit_rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Now, create new codecommit repository:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AWS Console&lt;/code&gt; &amp;gt; &lt;code&gt;Code Commit&lt;/code&gt; &amp;gt; &lt;code&gt;Getting started&lt;/code&gt; &amp;gt; &lt;code&gt;Create repository&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Give your repository a name and description and hit the &lt;code&gt;create&lt;/code&gt; button.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Setup BitbucketPipeline&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Open your repository in BitBucket on which you want to setup pipeline. [Note: You must have admin access to that repository]&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After opening your repository go to &lt;code&gt;settings&lt;/code&gt; &amp;gt; &lt;code&gt;Pipeline Settings&lt;/code&gt; &amp;gt; &lt;code&gt;Enable Pipeline&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then go to &lt;code&gt;Pipeline&lt;/code&gt; &amp;gt; &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Repository variables&lt;/code&gt; and set these values:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="BitBucket pipeline repository variables" src="../images/cicd/repo-vars.png"&gt;&lt;/p&gt;
&lt;h4&gt;Description of each of these variables:&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CodeCommitConfig&lt;/code&gt; -&amp;gt; 64 bit encoded version of the contents inside your &lt;code&gt;~/.ssh/config&lt;/code&gt; file. Generate this by doing:
    &lt;code&gt;bash
    $ base64 ~/.ssh/config&lt;/code&gt;
    And copy the output to the value field of &lt;code&gt;CodeCommitConfig&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CodeCommitHost&lt;/code&gt;: your AWS codecommit host. Blurred part is the AWS region&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CodeCommitKey&lt;/code&gt;: 64 bit encoded version of the contents inside your private key at &lt;code&gt;~/.ssh/codecommit_rsa&lt;/code&gt;. Generate this by doing:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
$ base64 ~/.ssh/codecommit_rsa&lt;/code&gt;
And copy the output to the value field of &lt;code&gt;CodeCommitKey&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CodeCommitRepo&lt;/code&gt;: The link of repository that you just created&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CodeCommitUser&lt;/code&gt;: Your-IAM-SSH-Key-ID&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Create bitbucket-pipelines.yml&lt;/h4&gt;
&lt;p&gt;Create &lt;code&gt;bitbucket-pipelines.yml&lt;/code&gt; file with following contents:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;pipelines&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;echo $CodeCommitKey &amp;gt; ~/.ssh/codecommit_rsa.tmp&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;base64 -d ~/.ssh/codecommit_rsa.tmp &amp;gt; ~/.ssh/codecommit_rsa&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;chmod 400 ~/.ssh/codecommit_rsa&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;echo $CodeCommitConfig &amp;gt; ~/.ssh/config.tmp&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;base64 -d  ~/.ssh/config.tmp &amp;gt; ~/.ssh/config&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;set +e&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ssh -o StrictHostKeyChecking=no $CodeCommitHost&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;set -e&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;git remote set-url origin ssh://$CodeCommitRepo&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;git push origin $BITBUCKET_BRANCH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Make sure your indention are correct. You can use yml validator (&lt;a href="https://jsonformatter.org/yaml-validator"&gt;https://jsonformatter.org/yaml-validator&lt;/a&gt;) to do this.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Push the &lt;code&gt;bitbucket-pipelines.yml&lt;/code&gt; to any branch, then your pipeline will run and sync the changes to AWS Codecommit repository&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="tutorial"></category><category term="devops"></category><category term="cicd"></category><category term="aws"></category><category term="aws codepipeline"></category><category term="codecommit"></category></entry><entry><title>Installing Python3.6 in Ubuntu 16.04 LTS Instance Server</title><link href="https://sagargiri.com/installing-python3.6-in-ubuntu-server" rel="alternate"></link><published>2018-05-23T23:32:00+09:00</published><updated>2018-05-23T23:32:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2018-05-23:/installing-python3.6-in-ubuntu-server</id><summary type="html">&lt;p&gt;Installing Python 3.6.3 in your freshly installed Ubuntu 16.04 Desktop, Linux Mint Desktop or even in AWS/Azure Ubuntu 16.04 server instance is pain in the a**. This article will teach you how to install Python 3.6.3 from source including the dependencies you need to install inorder to work it correctly.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here is the step by step guide to install &lt;code&gt;Python 3.6.3&lt;/code&gt; in your AWS EC2's Ubuntu 16.04 server instance or in your local machine with Ubuntu 16.04 LTS Desktop or in Linux Mint.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: If you are using Ubuntu 18.04 LTS, then it ships with Python 3.6.3 by default.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Check which Python version is pre-installed in the system by typing &lt;code&gt;$ python3 -V&lt;/code&gt; in the terminal. Generally it is &lt;code&gt;Python 3.5.2&lt;/code&gt; for Ubtuntu 16.04 LTS.&lt;/p&gt;
&lt;h2&gt;Pre-requisites&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;First you need to upgrade and update your system.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo apt update &amp;amp;&amp;amp; sudo apt -y upgrade&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then you need to install &lt;code&gt;zlib1g-dev&lt;/code&gt; package because of &lt;a href="https://github.com/pypa/pip/issues/1919"&gt;this&lt;/a&gt; issue. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo apt -y install zlib1g-dev&lt;/code&gt;
To make sure it is installed correctly, type &lt;code&gt;$ cat /usr/include/zlib.h&lt;/code&gt;. It'll show you the source of &lt;code&gt;zlib&lt;/code&gt; header file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Because of &lt;a href="https://stackoverflow.com/questions/893053/seeing-escape-characters-when-pressing-the-arrow-keys-in-python-shell"&gt;this&lt;/a&gt; issue, you also have to install another package called &lt;code&gt;libreadline-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo apt install libreadline-dev&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now, install &lt;code&gt;build-essential&lt;/code&gt; and other bunch of stuffs which is required by &lt;code&gt;Python 3.6.3&lt;/code&gt; afterwards.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo apt install build-essential checkinstall libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;These packages are needed for setting up SSL for downloading packages over PIP, for setting up &lt;code&gt;sqlite&lt;/code&gt;, &lt;code&gt;g++&lt;/code&gt; and so on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Export &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; for secure SSL connection.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ export LD_LIBRARY_PATH=/usr/local/ssl/lib/&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Begin installation of Python 3.6.3&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;First, download tar zipped file from Python FTP server.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wget https://www.python.org/ftp/python/3.6.3/Python-3.6.3.tgz&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extract the zipped file:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ tar zxvf Python-3.6.3.tgz&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Move Python3.6.3 directory to &lt;code&gt;/opt/&lt;/code&gt; directory and &lt;code&gt;cd&lt;/code&gt; into it.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo mv Python-3.6.3 /opt/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ cd /opt/Python-3.6.3/&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure Python directory.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$./configure --enable-optimizations&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make it:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ make&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Test the Make if you want (this is optional)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ make test&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install it via Make:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo make install&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Verify that Python 3.6.3 is installed in your system by typing&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ python3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If it again shows Python 3.5.2 then type &lt;code&gt;$ python3.6&lt;/code&gt;. To make things easier, set up an alias. To set up alias do the following:&lt;/p&gt;
&lt;p&gt;Edit &lt;code&gt;.bashrc&lt;/code&gt; file located in your home directory.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ nano ~/.bashrc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add following line at the end&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias python3=/usr/local/bin/python3.6&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;At this point, Python 3.6.3 is correctly installed in your system&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Further steps:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure yout PIP is correct. In Python2 is &lt;code&gt;pip&lt;/code&gt; and in Python3 its &lt;code&gt;pip3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ pip3 -V&lt;/code&gt; shows you which Python it is pointing to.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are using &lt;code&gt;pyodbc&lt;/code&gt; then you need to install &lt;code&gt;unixodbc-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo apt -f install unixodbc-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then you can insall &lt;code&gt;pyodbc&lt;/code&gt; with:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ pip3 install pyodbc&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="tutorial"></category><category term="tutorial"></category><category term="python3.6"></category><category term="python"></category><category term="installation"></category></entry><entry><title>Download Youtube Videos in Ubuntu for FREE!</title><link href="https://sagargiri.com/download-youtube-videos-in-ubuntu" rel="alternate"></link><published>2017-02-22T22:21:00+09:00</published><updated>2017-02-22T22:21:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2017-02-22:/download-youtube-videos-in-ubuntu</id><summary type="html">&lt;p&gt;There are some free as well as paid online tool for downloading Youtube videos but youtube-dl is free, opensource, geeky and awesome command line tool to download videos from Youtube.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://rg3.github.io/youtube-dl/"&gt;youtube-dl&lt;/a&gt; is a command-line program to download videos from YouTube.com and a few more sites like vimeo, 9gag, Dailymotion, &lt;a href="https://rg3.github.io/youtube-dl/supportedsites.html"&gt;etc&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;It is purely build in Python and requires the Python interpreter (2.6, 2.7, or 3.2+) to use it and it is not platform specific. There's also a &lt;a href="https://yt-dl.org/latest/youtube-dl.exe"&gt;Windows executable&lt;/a&gt; for Windows user. And the most cool thing about youtube-dl is that it's opensource and released to the public domain.&lt;/p&gt;
&lt;p&gt;This tutorial illustrates how to install and use it in Ubuntu. But to use this free software you need Python installed in your system.&lt;/p&gt;
&lt;h2&gt;Step 1: Install youtube-dl&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;youtube-dl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or, install via &lt;a href="https://girisagar46.github.io/install-python-pip-package-management-system-in-ubuntu"&gt;PIP&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;youtube-dl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Step 2 : Use it for free&lt;/h2&gt;
&lt;p&gt;Fire up your terminal. And type&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ youtube-dl [URL for video]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;eg. &lt;code&gt;$ youtube-dl https://www.youtube.com/watch?v=KWZGAExj-es&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Choosing the quality:&lt;/h3&gt;
&lt;p&gt;youtube-dl gives option to download videos of different quality. 
To download videos of high quality, type the commands provided below:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ youtube-dl -F https://www.youtube.com/watch?v=KWZGAExj-es&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This command gives the information of the video. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;linuxsagar@ubuntu:~&lt;span class="w"&gt; &lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;youtube-dl&lt;span class="w"&gt; &lt;/span&gt;-F&lt;span class="w"&gt; &lt;/span&gt;https://www.youtube.com/watch?v&lt;span class="o"&gt;=&lt;/span&gt;KWZGAExj-es
&lt;span class="o"&gt;[&lt;/span&gt;youtube&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;KWZGAExj-es:&lt;span class="w"&gt; &lt;/span&gt;Downloading&lt;span class="w"&gt; &lt;/span&gt;webpage
&lt;span class="o"&gt;[&lt;/span&gt;youtube&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;KWZGAExj-es:&lt;span class="w"&gt; &lt;/span&gt;Downloading&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;info&lt;span class="w"&gt; &lt;/span&gt;webpage
&lt;span class="o"&gt;[&lt;/span&gt;youtube&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;KWZGAExj-es:&lt;span class="w"&gt; &lt;/span&gt;Extracting&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;information
&lt;span class="o"&gt;[&lt;/span&gt;info&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Available&lt;span class="w"&gt; &lt;/span&gt;formats&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;KWZGAExj-es:
format&lt;span class="w"&gt; &lt;/span&gt;code&lt;span class="w"&gt;  &lt;/span&gt;extension&lt;span class="w"&gt;  &lt;/span&gt;resolution&lt;span class="w"&gt; &lt;/span&gt;note
&lt;span class="m"&gt;249&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;audio&lt;span class="w"&gt; &lt;/span&gt;only&lt;span class="w"&gt; &lt;/span&gt;DASH&lt;span class="w"&gt; &lt;/span&gt;audio&lt;span class="w"&gt;   &lt;/span&gt;53k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;opus&lt;span class="w"&gt; &lt;/span&gt;@&lt;span class="w"&gt; &lt;/span&gt;50k,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.81MiB
&lt;span class="m"&gt;250&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;audio&lt;span class="w"&gt; &lt;/span&gt;only&lt;span class="w"&gt; &lt;/span&gt;DASH&lt;span class="w"&gt; &lt;/span&gt;audio&lt;span class="w"&gt;   &lt;/span&gt;73k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;opus&lt;span class="w"&gt; &lt;/span&gt;@&lt;span class="w"&gt; &lt;/span&gt;70k,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.35MiB
&lt;span class="m"&gt;140&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;m4a&lt;span class="w"&gt;        &lt;/span&gt;audio&lt;span class="w"&gt; &lt;/span&gt;only&lt;span class="w"&gt; &lt;/span&gt;DASH&lt;span class="w"&gt; &lt;/span&gt;audio&lt;span class="w"&gt;  &lt;/span&gt;128k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;m4a_dash&lt;span class="w"&gt; &lt;/span&gt;container,&lt;span class="w"&gt; &lt;/span&gt;mp4a.40.2@128k,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;.65MiB
&lt;span class="m"&gt;171&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;audio&lt;span class="w"&gt; &lt;/span&gt;only&lt;span class="w"&gt; &lt;/span&gt;DASH&lt;span class="w"&gt; &lt;/span&gt;audio&lt;span class="w"&gt;  &lt;/span&gt;137k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;vorbis@128k,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;.44MiB
&lt;span class="m"&gt;251&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;audio&lt;span class="w"&gt; &lt;/span&gt;only&lt;span class="w"&gt; &lt;/span&gt;DASH&lt;span class="w"&gt; &lt;/span&gt;audio&lt;span class="w"&gt;  &lt;/span&gt;174k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;opus&lt;span class="w"&gt; &lt;/span&gt;@160k,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;.84MiB
&lt;span class="m"&gt;278&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;256x144&lt;span class="w"&gt;    &lt;/span&gt;144p&lt;span class="w"&gt;   &lt;/span&gt;92k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;webm&lt;span class="w"&gt; &lt;/span&gt;container,&lt;span class="w"&gt; &lt;/span&gt;vp9,&lt;span class="w"&gt; &lt;/span&gt;12fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.60MiB
&lt;span class="m"&gt;160&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;256x144&lt;span class="w"&gt;    &lt;/span&gt;144p&lt;span class="w"&gt;  &lt;/span&gt;111k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.4d400c,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.86MiB
&lt;span class="m"&gt;242&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;426x240&lt;span class="w"&gt;    &lt;/span&gt;240p&lt;span class="w"&gt;  &lt;/span&gt;223k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;vp9,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;.27MiB
&lt;span class="m"&gt;133&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;426x240&lt;span class="w"&gt;    &lt;/span&gt;240p&lt;span class="w"&gt;  &lt;/span&gt;243k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.4d4015,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;.57MiB
&lt;span class="m"&gt;243&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;640x360&lt;span class="w"&gt;    &lt;/span&gt;360p&lt;span class="w"&gt;  &lt;/span&gt;420k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;vp9,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;.11MiB
&lt;span class="m"&gt;134&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;640x360&lt;span class="w"&gt;    &lt;/span&gt;360p&lt;span class="w"&gt;  &lt;/span&gt;517k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.4d401e,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;.36MiB
&lt;span class="m"&gt;244&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;854x480&lt;span class="w"&gt;    &lt;/span&gt;480p&lt;span class="w"&gt;  &lt;/span&gt;715k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;vp9,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;.63MiB
&lt;span class="m"&gt;135&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;854x480&lt;span class="w"&gt;    &lt;/span&gt;480p&lt;span class="w"&gt;  &lt;/span&gt;970k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.4d401e,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;.71MiB
&lt;span class="m"&gt;247&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;1280x720&lt;span class="w"&gt;   &lt;/span&gt;720p&lt;span class="w"&gt; &lt;/span&gt;1499k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;vp9,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;32&lt;/span&gt;.43MiB
&lt;span class="m"&gt;136&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;1280x720&lt;span class="w"&gt;   &lt;/span&gt;720p&lt;span class="w"&gt; &lt;/span&gt;1666k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.4d401f,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;39&lt;/span&gt;.95MiB
&lt;span class="m"&gt;248&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;1920x1080&lt;span class="w"&gt;  &lt;/span&gt;1080p&lt;span class="w"&gt; &lt;/span&gt;2744k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;vp9,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;55&lt;/span&gt;.46MiB
&lt;span class="m"&gt;137&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;1920x1080&lt;span class="w"&gt;  &lt;/span&gt;1080p&lt;span class="w"&gt; &lt;/span&gt;2752k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.640028,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;71&lt;/span&gt;.87MiB
&lt;span class="m"&gt;17&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;3gp&lt;span class="w"&gt;        &lt;/span&gt;176x144&lt;span class="w"&gt;    &lt;/span&gt;small&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;mp4v.20.3,&lt;span class="w"&gt; &lt;/span&gt;mp4a.40.2@&lt;span class="w"&gt; &lt;/span&gt;24k
&lt;span class="m"&gt;36&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;3gp&lt;span class="w"&gt;        &lt;/span&gt;320x180&lt;span class="w"&gt;    &lt;/span&gt;small&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;mp4v.20.3,&lt;span class="w"&gt; &lt;/span&gt;mp4a.40.2
&lt;span class="m"&gt;43&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;640x360&lt;span class="w"&gt;    &lt;/span&gt;medium&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;vp8.0,&lt;span class="w"&gt; &lt;/span&gt;vorbis@128k
&lt;span class="m"&gt;18&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;640x360&lt;span class="w"&gt;    &lt;/span&gt;medium&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.42001E,&lt;span class="w"&gt; &lt;/span&gt;mp4a.40.2@&lt;span class="w"&gt; &lt;/span&gt;96k
&lt;span class="m"&gt;22&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;1280x720&lt;span class="w"&gt;   &lt;/span&gt;hd720&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.64001F,&lt;span class="w"&gt; &lt;/span&gt;mp4a.40.2@192k&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;best&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice the format column in the output above? Yes, that's what you need. Also, remember capital F in the above command (-F) gives the format information.&lt;/p&gt;
&lt;p&gt;Now, lets download a 720p mp4 file with format code &lt;em&gt;136&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ youtube-dl -f 136 https://www.youtube.com/watch?v=KWZGAExj-es&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;You only want the audio of a file? No problem, youtube-dl got your back&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;youtube-dl --extract-audio --audio-format mp3 https://www.youtube.com/watch?v=5dKGK81z4js&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;That's it. Similarly, you will be able to download videos/ audio from any site using youtube-dl tool from command line interface.&lt;/p&gt;
&lt;p&gt;This opensource project has been hosted in GitHub. You can checkout the source code from here: &lt;a href="https://github.com/rg3/youtube-dl"&gt;https://github.com/rg3/youtube-dl&lt;/a&gt;&lt;/p&gt;</content><category term="tutorial"></category><category term="tutorial"></category></entry><entry><title>Installing Git Version Control System</title><link href="https://sagargiri.com/installing-git-version-control-system" rel="alternate"></link><published>2017-02-01T19:01:00+09:00</published><updated>2017-02-01T19:01:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2017-02-01:/installing-git-version-control-system</id><summary type="html">&lt;p&gt;Git is most widely used modern (VCS) version control system. Git is an open source project and originally developed to maintain code for Linux kernel and developed in 2005 by &lt;a href="https://en.wikipedia.org/wiki/Linus_Torvalds"&gt;Linus Torvalds&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;"Software is like sex: it's better when it's free." - Linus Torvalds&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Git is available for all platforms Linux, Mac OS X and Windows.&lt;/p&gt;
&lt;h1&gt;Install Git on Mac OS X&lt;/h1&gt;
&lt;p&gt;There are different ways to install Git on a Mac. If you've installed XCode (or it's Command Line Tools), Git may already be installed. To find out, open a terminal and enter &lt;code&gt;git --version&lt;/code&gt;.
Inorder to install a newer version of Git, use one of these methods:&lt;/p&gt;
&lt;h2&gt;Git for Mac Installer&lt;/h2&gt;
&lt;p&gt;The easiest way to install Git on a Mac is via the stand-alone installer:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the latest &lt;a href="https://sourceforge.net/projects/git-osx-installer/files/"&gt;Git for Mac&lt;/a&gt; installer.&lt;/li&gt;
&lt;li&gt;Follow the prompts to install Git.&lt;/li&gt;
&lt;li&gt;Open a terminal and verify the installation was successful by typing &lt;code&gt;git --version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Configure your Git username and email using the following command&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;--global&lt;span class="w"&gt; &lt;/span&gt;user.name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Your Name&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;--global&lt;span class="w"&gt; &lt;/span&gt;user.email&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yourvalidemail@company.com&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Git for Windows stand-alone installer&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Download the latest Git for Windows &lt;a href="https://git-for-windows.github.io/"&gt;installer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Execute the installer, finish the Git Setup wizard screen with default options.&lt;/li&gt;
&lt;li&gt;Open a Command Prompt or Git Bash (search git in all programs).&lt;/li&gt;
&lt;li&gt;Run the following commands to configure your Git username and email using the following command. These details will be associated with any commits that you create:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;--global&lt;span class="w"&gt; &lt;/span&gt;user.name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Your Name&amp;quot;&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;--global&lt;span class="w"&gt; &lt;/span&gt;user.email&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yourvalidemail@company.com&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Git for Linux (Debian/ Ubuntu)&lt;/h2&gt;
&lt;p&gt;1 From your shell, install Git using apt-get (Ubuntu 14.04) or apt (Ubuntu 16.04 or later):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;update
$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Verify the installation was successful by typing git --version:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;--version
git&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.9.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Configure your Git username and email using the following command. These details will be associated with any commits that you create:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;--global&lt;span class="w"&gt; &lt;/span&gt;user.name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Your Name&amp;quot;&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;--global&lt;span class="w"&gt; &lt;/span&gt;user.email&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yourvalidemail@company.com&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;source: &lt;a href="https://www.atlassian.com/git/tutorials/install-git"&gt;https://www.atlassian.com/git/tutorials/install-git&lt;/a&gt;&lt;/p&gt;</content><category term="tutorial"></category><category term="tutorial"></category><category term="github"></category><category term="git"></category><category term="vcs"></category><category term="version control"></category></entry><entry><title>Integrating Disqus Comment Section In Pelican Blog</title><link href="https://sagargiri.com/integrate-disqus-in-a-post" rel="alternate"></link><published>2017-01-30T21:51:00+09:00</published><updated>2017-01-30T21:51:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2017-01-30:/integrate-disqus-in-a-post</id><summary type="html">&lt;p&gt;Disqus is a worldwide blog comment hosting service for web sites and online communities that uses a networked platform.&lt;sup&gt;[&lt;a href="https://en.wikipedia.org/wiki/Disqus"&gt;1&lt;/a&gt;]&lt;/sup&gt; And integrating Disqus comments in Pelican is straight forward and easy.&lt;/p&gt;</summary><content type="html">&lt;p&gt;After you write a blog post, you expect people to comment in your post. Commenting is necessary because it can increase reader engagement and help build relationship among author and reader. &lt;/p&gt;
&lt;p&gt;Many Pelican themes support Disqus commenting natively. All you need to have is a Disqus account. Go to &lt;a href="https://disqus.com/"&gt;disqus.com&lt;/a&gt; and quickly create an account for yourself.&lt;/p&gt;
&lt;p&gt;Now, lets integrate Disqus to our each and every blog posts.&lt;/p&gt;
&lt;h2&gt;Steps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;While logged in to your Disqus account, head over to &lt;a href="https://disqus.com/admin/create/"&gt;admin create panel&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;You'll see a form. Fill up that form&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Create Site&lt;/strong&gt; button.&lt;/li&gt;
&lt;li&gt;Now on the top left side of the page, you'll see your disqus site. Click on the link. &lt;em&gt;[refer picture below]&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Disqus preview" class="img-center" src="images/disqus1.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Now headover to &lt;em&gt;setting&lt;/em&gt; menu. &lt;em&gt;[refer picture below]&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Disqus setting" class="img-center" src="images/disqus2.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the setting page, you'll see the &lt;strong&gt;Shortname&lt;/strong&gt; of youtr site as shown below.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="shortname" class="img-center" src="images/disqus3.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Copy that &lt;strong&gt;shortname&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now open your &lt;code&gt;pelicanconf.py&lt;/code&gt; file. On that file, add the following lines:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;DISQUS_SITENAME = 'your-site-name'&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Reserve your page via &lt;code&gt;$ fab reserve&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Browse the page and you'll see Disqus has been integrated to your blog post.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="disqus implemented" src="images/disqus4.png"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;If you're confused, see how I configured Disqus comments in my blog from &lt;a href="https://github.com/girisagar46/girisagar46.github.io/blob/source/pelicanconf.py"&gt;here&lt;/a&gt;&lt;/p&gt;</content><category term="tutorial"></category><category term="tutorial"></category><category term="pelican"></category><category term="disqus"></category><category term="commenting"></category></entry><entry><title>Building a static site and hosting in Github (part 2)</title><link href="https://sagargiri.com/pelican-github-part2" rel="alternate"></link><published>2017-01-28T17:00:00+09:00</published><updated>2017-01-28T17:00:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2017-01-28:/pelican-github-part2</id><summary type="html">&lt;p&gt;In &lt;a href="https://girisagar46.github.io/pelican-github-part1"&gt;Part 1&lt;/a&gt;, we just got started with our Pelican blog. In this part, we'll be hacking our blog to make it awesome.&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;In &lt;a href="https://girisagar46.github.io/pelican-github-part1"&gt;Part 1&lt;/a&gt; we've setup our github.io website and kick started out [Pelican] blog. Now, in this second tutorial, we'll configure Fabric and Pelican configuration and when it's all done, we'll create a blog post. And push it to github &lt;code&gt;source&lt;/code&gt; branch and generated HTML to &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;First, let's setup our blog theme.&lt;/h1&gt;
&lt;p&gt;Pelican has tons of themes. All themes can be previewed at &lt;a href="http://www.pelicanthemes.com/"&gt;pelicanthemes.com&lt;/a&gt;. You can pick any themes you like. And, if you are not satisfied with the existing themes, you can also create your &lt;a href="http://docs.getpelican.com/en/3.1.1/themes.html"&gt;own theme&lt;/a&gt;. For this tutorial, we'll be using a theme called &lt;a href="https://github.com/alexandrevicenzi/flex"&gt;Flex&lt;/a&gt; by &lt;a href="https://www.alexandrevicenzi.com/"&gt;Alexandre Vicenzi&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;To setup a theme, create folder inside your &lt;code&gt;username.github.io&lt;/code&gt; directory and name it &lt;code&gt;themes&lt;/code&gt;. Now &lt;code&gt;cd&lt;/code&gt; into that directory and clone the &lt;a href="https://github.com/alexandrevicenzi/Flex.git"&gt;Flex&lt;/a&gt; repository.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://github.com/alexandrevicenzi/Flex.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can setup plugins in same way as the themes. The official repository for the plugins is &lt;a href="https://github.com/getpelican/pelican-plugins"&gt;pelican-plugins&lt;/a&gt;. We won't setup plugins in this tutorial. You can read the documentation by yourself to setup the plugins or I'll be posting a seperate tutorial post on how to setup plugins shortly*.&lt;/p&gt;
&lt;h1&gt;Configuration&lt;/h1&gt;
&lt;p&gt;We have our Flex theme inside our theme directory. Our theme needs a site logo. Site logo should be placed in a images directory. So, create an &lt;code&gt;images&lt;/code&gt; folder inside the &lt;code&gt;content&lt;/code&gt; folder. Paste an image in that folder. If you don't have any, default image will be rendered.&lt;/p&gt;
&lt;p&gt;For the configuration, we'll be working on &lt;code&gt;pelicanconf.py&lt;/code&gt;, &lt;code&gt;publishconf.py&lt;/code&gt; and &lt;code&gt;fabfile.py&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;First let's look at &lt;code&gt;pelicanconf.py&lt;/code&gt;. Open it in a text editor and update it as described in the snippet below. See the comments beginning with &lt;code&gt;#&lt;/code&gt; to know what's happening.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Your Name&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Your Blog Name&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://localhost:8000&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;#used for local build and preview&lt;/span&gt;
&lt;span class="n"&gt;SITETITLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AUTHOR&lt;/span&gt;
&lt;span class="n"&gt;SITESUBTITLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Your own text&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;#needed for theme&lt;/span&gt;
&lt;span class="n"&gt;SITEDESCRIPTION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;your site description&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;#used for meta tag for SEO purposes&lt;/span&gt;
&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;content&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# location to where your articles/posts are located&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Asia/Kathmandu&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# Your current time zone&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;en&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DATE_FORMATS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;en&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%B &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;, %Y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;USE_FOLDER_AS_CATEGORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;COPYRIGHT_YEAR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2017&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;

&lt;span class="c1"&gt;# Theme Settings&lt;/span&gt;
&lt;span class="n"&gt;SITELOGO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/images/Your picture&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;#your site logo&lt;/span&gt;
&lt;span class="n"&gt;FAVICON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/images/favicon.png&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;#your favicon&lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;themes/Flex&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;#path to your theme&lt;/span&gt;
&lt;span class="n"&gt;BROWSER_COLOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#333333&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;PYGMENTS_STYLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;default&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;#for code highlighting&lt;/span&gt;

&lt;span class="c1"&gt;# Blogroll&lt;/span&gt;
&lt;span class="c1"&gt;# if you want to link to external page&lt;/span&gt;
&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;link1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Your link&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c1"&gt;# Social widget&lt;/span&gt;
&lt;span class="c1"&gt;# You can add your own links for facebook, twitter&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Facebook&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Your facebook link&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Twitter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you want to know more details about the configuration, go &lt;a href="https://github.com/alexandrevicenzi/Flex/wiki/Configuration-example"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Next, open &lt;code&gt;publishconf.py&lt;/code&gt; file and modify these lines:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://your_username.github.io&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;Our first post&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;cd&lt;/code&gt; to your &lt;code&gt;content&lt;/code&gt; directory and create a folder called &lt;code&gt;articles&lt;/code&gt;. Inside that &lt;code&gt;articles&lt;/code&gt; folder create a new file called &lt;code&gt;FirstPost.md&lt;/code&gt;.
Open that &lt;code&gt;FirstPost.md&lt;/code&gt; file in a text editor and paste the lines as shown below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;My&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Modified&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;abc&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;abc&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xyz&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;
&lt;span class="n"&gt;Authors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Short&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;

&lt;span class="n"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To know more, read the official &lt;a href="http://docs.getpelican.com/en/stable/content.html"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Generate HTML&lt;/h1&gt;
&lt;p&gt;Go to the root directory of the project or simple do &lt;code&gt;$ cd ..&lt;/code&gt; in the terminal, and type &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;fab&lt;span class="w"&gt; &lt;/span&gt;clean&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;fab&lt;span class="w"&gt; &lt;/span&gt;build&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;fab&lt;span class="w"&gt; &lt;/span&gt;serve&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and browse to &lt;code&gt;http://localhost:8000&lt;/code&gt;. You'll see new shining blog with new design.&lt;/p&gt;
&lt;h1&gt;Commit and push to Github&lt;/h1&gt;
&lt;p&gt;** First, let's push our source code.**&lt;/p&gt;
&lt;p&gt;Type these commands one by one.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;.
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Configuration, themes and first post&amp;quot;&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;** Push the HTML contents in the &lt;code&gt;master&lt;/code&gt; branch.**&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;ghp-import&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;First push to github.io&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-b&lt;span class="w"&gt; &lt;/span&gt;master&lt;span class="w"&gt; &lt;/span&gt;output&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
$&lt;span class="s2"&gt; git push -u origin master&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, redirect your browser to 'https://your_username.github.io' to view your online blog.&lt;/p&gt;
&lt;p&gt;Upto this you have your blog hosted in github pages and is available to public viewing. Next, I'll be posting some small tutorials on how to add &lt;a href="https://disqus.com"&gt;disqus&lt;/a&gt; comments, google analytics, automate publish using Fabric API, adding and configuring plugins and many more.&lt;/p&gt;
&lt;p&gt;Keep visiting my &lt;a href="https://girisagar46.github.io"&gt;website&lt;/a&gt;.&lt;/p&gt;</content><category term="tutorial"></category><category term="tutorial"></category><category term="pelican"></category></entry><entry><title>Building a static site and hosting in Github (part 1)</title><link href="https://sagargiri.com/pelican-github-part1" rel="alternate"></link><published>2017-01-28T13:00:00+09:00</published><updated>2017-01-28T13:00:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2017-01-28:/pelican-github-part1</id><summary type="html">&lt;p&gt;The contents that you are seeing right now is the static website built using Pelican. This tutorial series gives you every details on how to create a static blog using pelican and host it to the github server for FREE!&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;For this tutorial series, I'm assuming that you are working in a Linux environment. If not, you can use &lt;a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/"&gt;virtualenv&lt;/a&gt; for Windows or Mac.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;Getting started&lt;/h1&gt;
&lt;p&gt;First the big question, "What is &lt;a href="#"&gt;Pelican&lt;/a&gt;?"&lt;/p&gt;
&lt;p&gt;In short, Pelican is a static site generator that supports Markdown and reST syntax. Powered by Python. For more visit, &lt;a href="http://getpelican.com/"&gt;getpelican.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For this tutorial, you only need to understand basic Git push/pull and branching command and as well as some basic &lt;a href="https://guides.github.com/features/mastering-markdown/"&gt;Markdown&lt;/a&gt; syntax. If you are a noob, no worries I'll cover each and every topics in detail.&lt;/p&gt;
&lt;h2&gt;Prerequisits:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://girisagar46.github.io/installing-git-version-control-system"&gt;Install Git VCS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Install Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Install Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Setup Github account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pages.github.com/"&gt;Setup github.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;A code editor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Setup Github page&lt;/h2&gt;
&lt;p&gt;First you need to have a &lt;a href="https://pages.github.com/"&gt;github.io&lt;/a&gt; page. Noew, clone your github.io repository and &lt;code&gt;cd&lt;/code&gt; into it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://github.com/username/username.github.io
$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;username.github.io/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Create a new Git branch called &lt;code&gt;source&lt;/code&gt; or your any custom name. This new branch only holds your source code. The HTML generated by Pelican will be pushed to master branch which are then rendered in the website. We'll do Git push shortly. But, first let's create a new branch.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;-b&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Push the new branch on Github:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;origin&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You are now working on the &lt;code&gt;source&lt;/code&gt; branch.&lt;/p&gt;
&lt;h2&gt;Setup Pelican&lt;/h2&gt;
&lt;p&gt;Let's start with installing Pelican at the first place. Pelican, Pelican-Plugins and Pelican-Themes are dependent on different python modules and installing them one by one is a pain in the butt. Hence, for the simplicity, create a new file called &lt;code&gt;requirements.txt&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Open &lt;code&gt;requirements.txt&lt;/code&gt; file in a &lt;code&gt;notepad&lt;/code&gt; or &lt;code&gt;gedit&lt;/code&gt; and paste the lines given below and save it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;appdirs==1.4.0
beautifulsoup4==4.5.1
blinker==1.4
bs4==0.0.1
docutils==0.12
ecdsa==0.13
Fabric==1.12.0
feedgenerator==1.9
ghp-import==0.4.1
Jinja2==2.8
Markdown==2.6.7
MarkupSafe==0.23
packaging==16.8
paramiko==1.17.2
pelican==3.6.3
pycrypto==2.6.1
Pygments==2.1.3
pyparsing==2.1.10
python-dateutil==2.5.3
pytz==2016.7
six==1.10.0
Unidecode==0.4.19
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;These are the modules that we need to get started with the Pelican static website generation.&lt;/p&gt;
&lt;p&gt;To install the modules which are inside &lt;code&gt;requirements.txt&lt;/code&gt;, type the following command in the terminal.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you don't know what is pip and how to install it, go &lt;a href="https://girisagar46/install-python-pip-package-management-system-in-ubuntu"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Upto this step you've setup a github.io blog and installed Pelican and it's dependencies.&lt;/p&gt;
&lt;h2&gt;Pelican Quick Start&lt;/h2&gt;
&lt;p&gt;After installing pelican, you can leverage the command &lt;code&gt;$ pelican-quickstart&lt;/code&gt; from the command line.&lt;/p&gt;
&lt;h3&gt;Quick Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd&lt;/code&gt; into your &lt;code&gt;username.github.io&lt;/code&gt; repository that you cloned earlier.
    &lt;code&gt;$ cd username.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Save this &lt;a href="https://raw.githubusercontent.com/girisagar46/girisagar46.github.io/source/.gitignore"&gt;.gitignore&lt;/a&gt; file in your directory. It's needed to make your Github repo clean.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;$ pelican-quickstart&lt;/code&gt; in the terminal&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The quickstart will ask you various questions, which you can answer in turn. Here are some specific answers you should give:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Where&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;.&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;What&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;My&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Awesome&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Blog&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Who&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Full&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;What&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;language&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;specify&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;prefix&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;What&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;prefix&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;see&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;above&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;no&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;trailing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;slash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;your_username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pagination&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;How&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;many&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;articles&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;per&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;10&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;What&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;zone&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Europe/Paris&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Asia&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Kathmandu&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;generate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Fabfile&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Makefile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;automate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;generation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;publishing&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;an&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;simpleHTTP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;assist&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;theme&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;development&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FTP&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SSH&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Dropbox&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Rackspace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Cloud&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Files&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GitHub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pages&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;personal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="n"&gt;Done&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;at&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;path&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;/&lt;/span&gt;&lt;span class="n"&gt;your_username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That's it. Now you have the basic structure of your Pelican blog. The tree structure of the pelican blog is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;.
├── content
├── develop_server.sh
├── fabfile.py
├── Makefile
├── output
├── pelicanconf.py
└── publishconf.py

2 directories, 5 files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here, each files and folder have a specefic meaning. I'll discuss more on it later. &lt;/p&gt;
&lt;h3&gt;Build and serve&lt;/h3&gt;
&lt;p&gt;Generate HTML. All HTML files are generated in the &lt;code&gt;output&lt;/code&gt; directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;fab&lt;span class="w"&gt; &lt;/span&gt;build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here &lt;code&gt;fab&lt;/code&gt; is a build tool that comes with &lt;code&gt;Fabric&lt;/code&gt; module. Now, serve the HTML.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;fab&lt;span class="w"&gt; &lt;/span&gt;serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And redirect your browser to &lt;code&gt;http://localhost:8000&lt;/code&gt;. You'll see the result.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Website preview" src="images/pelican_quickstart.png"&gt;&lt;/p&gt;
&lt;p&gt;** Note: The website generated is only visible in local environment. We haven't pushed anything to Github yet. It'll be done after all configurations have been setup correctly.**&lt;/p&gt;
&lt;p&gt;Now, just sitback, relax and observe every files inside the directory. If you understood nothing, maybe learn some &lt;a href="https://guides.github.com/features/mastering-markdown/"&gt;Markdown&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In &lt;a href="https://girisagar46.github.io/pelican-github-part2#pelican-github-part2"&gt;Part 2&lt;/a&gt; we'll write our first blog post, configure and fabricate pelican, and our first commit to the github.&lt;/p&gt;</content><category term="tutorial"></category><category term="tutorial"></category><category term="pelican"></category></entry></feed>