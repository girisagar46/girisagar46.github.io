<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Sagar's Blog</title><link href="https://sagargiri.com/" rel="alternate"></link><link href="https://sagargiri.com/feeds/all.atom.xml" rel="self"></link><id>https://sagargiri.com/</id><updated>2025-01-20T19:30:00+09:00</updated><subtitle>&lt;pre&gt;$ cd /pub &amp;&amp; more beer&lt;/pre&gt;</subtitle><entry><title>I transferred my domain to cloudflare</title><link href="https://sagargiri.com/i-transferred-my-domain-to-cloudflare" rel="alternate"></link><published>2025-01-20T19:30:00+09:00</published><updated>2025-01-20T19:30:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2025-01-20:/i-transferred-my-domain-to-cloudflare</id><summary type="html">&lt;p&gt;I transferred my domain to cloudflare&lt;/p&gt;</summary><content type="html">&lt;p&gt;The domain &lt;code&gt;sagargiri.com&lt;/code&gt; was registered with &lt;code&gt;namecheap.com&lt;/code&gt; and I was using &lt;code&gt;namecheap.com&lt;/code&gt;'s nameservers to manage the domain.
I decided to transfer the domain to &lt;code&gt;cloudflare.com&lt;/code&gt; for better security and performance.&lt;/p&gt;
&lt;p&gt;I followed the steps mentioned in this  YouTube Video&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/zkA1oZz3GUo?si=7HqhxEf9QKhB9ir4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Following above steps to the tee, I successfully transferred the domain to &lt;code&gt;cloudflare.com&lt;/code&gt;.&lt;/p&gt;</content><category term="log"></category><category term="log"></category></entry><entry><title>Three-step guide to set up custom domain for your github.io pages</title><link href="https://sagargiri.com/custom-domain-for-github-pages" rel="alternate"></link><published>2021-11-27T23:08:00+09:00</published><updated>2021-11-27T23:08:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2021-11-27:/custom-domain-for-github-pages</id><summary type="html">&lt;p&gt;In this blog post , I will show you how to set up custom domain for any github.io pages.&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Assumption: For this tutorial, I am assuming you already have bought a domain name from any domain name provider and you already have a github.io pages setup like this &lt;a href="https://girisagar46.github.io"&gt;girisagar46.github.io&lt;/a&gt;.
Also in this post, I'm using &lt;a href="https://www.namecheap.com"&gt;namecheap&lt;/a&gt; and setting up Apex domain name.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This blog is hosted in &lt;a href="https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages"&gt;GitHub pages&lt;/a&gt;. When you visit &lt;a href="https://sagargiri.com"&gt;sagargiri.com&lt;/a&gt;, the web pages that you see are actually hosted in github.io, and you can see the source code of this blog &lt;a href="https://github.com/girisagar46/girisagar46.github.io/"&gt;here&lt;/a&gt;.
But, how does my domain &lt;code&gt;sagargiri.com&lt;/code&gt; is pointing to &lt;code&gt;girisagar46.github.io&lt;/code&gt; ? How do we configure such settings?
All of these questions are answered in this blog post.&lt;/p&gt;
&lt;h2&gt;Step-by-step guide to use custom domain for github.io pages&lt;/h2&gt;
&lt;h3&gt;Step 1: Buy the domain name.&lt;/h3&gt;
&lt;p&gt;If you do not have a domain name yet, you can use any of the domain name providers. For example, you can use &lt;a href="https://www.namecheap.com"&gt;namecheap&lt;/a&gt;, &lt;a href="https://www.godaddy.com"&gt;godaddy&lt;/a&gt; or &lt;a href="https://domains.google"&gt;domains.google&lt;/a&gt;.
I bought mine from &lt;a href="https://www.namecheap.com"&gt;namecheap&lt;/a&gt; during black friday sale.&lt;/p&gt;
&lt;p&gt;Now that you have bought the domain name, you need to set up the DNS records. Which we'll do in second step.&lt;/p&gt;
&lt;h3&gt;Step 2: Set up DNS records.&lt;/h3&gt;
&lt;p&gt;In your domain name provider page you'll have an option to set up DNS records. In the case of namecheap, you'll first have to click the &lt;code&gt;MANAGE&lt;/code&gt; button in the &lt;code&gt;Domain List&lt;/code&gt; page as shown in screenshot below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="../images/setup-domain-github-pages/manage.png"&gt;&lt;/p&gt;
&lt;p&gt;Then click the &lt;code&gt;Advanced DNS&lt;/code&gt; button as shown in screenshot below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="../images/setup-domain-github-pages/advanced-dns.png"&gt;&lt;/p&gt;
&lt;p&gt;In the &lt;code&gt;HOST RECORDS&lt;/code&gt; section, you need to add the following DNS records as shown in screenshot below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="../images/setup-domain-github-pages/host-record.png"&gt;&lt;/p&gt;
&lt;p&gt;Here are the IP addresses list for &lt;code&gt;A&lt;/code&gt; record for you to copy and paste.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;185.199.108.153&lt;/span&gt;
&lt;span class="mf"&gt;185.199.109.153&lt;/span&gt;
&lt;span class="mf"&gt;185.199.110.153&lt;/span&gt;
&lt;span class="mf"&gt;185.199.111.153&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Also DO NOT forget to add the &lt;code&gt;CNAME&lt;/code&gt; record as shown in screenshot.
You need to add your own github.io domain name.&lt;/p&gt;
&lt;p&gt;Once you have added the DNS records, you can now go to your GitHub page settings to actually map the CNAME.&lt;/p&gt;
&lt;h3&gt;Step 3. Configure your USERNAME.github.io page settings&lt;/h3&gt;
&lt;p&gt;Go to your github.io repository settings and click on the &lt;code&gt;Settings&lt;/code&gt; button and then click on the &lt;code&gt;Pages&lt;/code&gt; button as shown in screenshot below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="../images/setup-domain-github-pages/github-settings.png"&gt;&lt;/p&gt;
&lt;p&gt;This will lead you to the GitHub.io settings for GitHub pages.&lt;/p&gt;
&lt;p&gt;In the &lt;code&gt;Pages&lt;/code&gt; section, you need to add the following domain name as shown in screenshot below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="../images/setup-domain-github-pages/custom-domain.png"&gt;&lt;/p&gt;
&lt;p&gt;This will commit a new file called &lt;code&gt;CNAME&lt;/code&gt; to your github.io repository. You can verify that later on. Also do not forget to check the &lt;code&gt;Enforce HTTPS&lt;/code&gt; checkbox. This will provide you SSL certificate for your domain name. Once you see the green tick mark in your domain name in the &lt;code&gt;Pages&lt;/code&gt; section, you're good tpo go.&lt;/p&gt;
&lt;p&gt;But, be aware that the DNS propagation takes some time. Take rest, drink a cup of coffee, browse other articles in this website and wait for a while.&lt;/p&gt;
&lt;p&gt;After some time, you can visit your domain name, and you will see the github.io pages are mapped to your domain name.&lt;/p&gt;
&lt;p&gt;You can also verify all this is working using the &lt;code&gt;dig&lt;/code&gt; command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$ dig sagargiri.com +noall +answer -t A

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.10.6 &amp;lt;&amp;lt;&amp;gt;&amp;gt; sagargiri.com +noall +answer -t A
;; global options: +cmd
sagargiri.com.      1799    IN  A   185.199.109.153
sagargiri.com.      1799    IN  A   185.199.110.153
sagargiri.com.      1799    IN  A   185.199.111.153
sagargiri.com.      1799    IN  A   185.199.108.153
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here you can see that my domain is pointing to the A records that we have set up in the Step 2.&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages"&gt;https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages&lt;/a&gt;
&lt;a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site"&gt;https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site&lt;/a&gt;&lt;/p&gt;</content><category term="how-to, tutorial"></category><category term="domain"></category><category term="dns"></category><category term="github"></category><category term="hosting"></category><category term="how-to"></category><category term="setup"></category><category term="website"></category></entry><entry><title>Tools and technology I use for my day-to-day work</title><link href="https://sagargiri.com/tools-and-technology-i-use-for-my-day-to-day-work" rel="alternate"></link><published>2021-07-17T13:17:00+09:00</published><updated>2021-07-17T13:17:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2021-07-17:/tools-and-technology-i-use-for-my-day-to-day-work</id><summary type="html">&lt;p&gt;In this blog post, I'll be sharing some tools that I use in my day-to-day work.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am a professional software engineer working for a Japan-based company &lt;a href="http://www.bebit.co.jp/"&gt;beBit.inc&lt;/a&gt; building a flagship SAAS application called &lt;a href="http://www.bebit.co.jp/usergram/"&gt;USERGRAM&lt;/a&gt;. In my day-to-day work, I use lots of tools and technologies to get my job done and to make me productive. Here's the list of it:&lt;/p&gt;
&lt;h3&gt;1. PyCharm and Intellij IDEA&lt;/h3&gt;
&lt;p&gt;I mostly code in Python and Java and the above two are my go-to IDE if I have to work on any of these languages. I use the Kubernetes plugin in my IntelliJ IDEA to validate YAML configurations for k8s and it's such a handy tool.&lt;/p&gt;
&lt;h3&gt;2. github.com&lt;/h3&gt;
&lt;p&gt;GitHub is where we host all our source code for USERGRAM, and I use it for my personal pet projects as well. GitHub action amazing CI/CD integration in GitHub and my company and personally I love it. The PR review system is fantastic. Besides, all that, I also follow many developers' and programmers' profiles to see what they are working on, technology trends and also star some cool projects on GitHub. There isn't a single day (except some weekends) when I do not visit github.com&lt;/p&gt;
&lt;h3&gt;3. 1password&lt;/h3&gt;
&lt;p&gt;I can't emphasize enough about 1password. This is my de-facto password management tool. My company uses it and I use it. I have to say, this is the best investment I made. 100% worth it.&lt;/p&gt;
&lt;h3&gt;4. Firefox and Brave&lt;/h3&gt;
&lt;p&gt;Firefox and Brave browsers are my browser choices. I use Brave for official work and use Firefox for personal stuff such as social media. This is because I do not want to mix up my personal and official work.&lt;/p&gt;
&lt;h3&gt;5. Docker&lt;/h3&gt;
&lt;p&gt;Everything is dockerized at work and having Docker is absolutely necessary. But, while running a heavy stack, it sometimes slows down my laptop. &lt;/p&gt;
&lt;h3&gt;6. CleanMyMac X&lt;/h3&gt;
&lt;p&gt;I purchased this software to make my laptop faster by cleaning up junk files and freeing my RAM. It does more than that like finding large files, malware protection, etc. &lt;/p&gt;
&lt;h3&gt;7. iTerm2&lt;/h3&gt;
&lt;p&gt;This is my default terminal emulator for my mac. I installed ZSH shell as a default shell and I have to say iTerm2 and ZSH go hand in hand, no doubt.&lt;/p&gt;
&lt;h3&gt;8. Slack, Zoom, Around&lt;/h3&gt;
&lt;p&gt;These are the communication tools we use in our company to communicate. After the pandemic hit, we've been connected more with Slack, Zoom, and Around. We recently started to use Around in our team and it's really nice. &lt;/p&gt;
&lt;h3&gt;9. Skitch&lt;/h3&gt;
&lt;p&gt;In my day-to-day work, I have to screenshot and annotate screenshots a lot. I used to use mac's default screenshot tool in combination with some other 3rd party tools to screenshot stuff. That all got replaced when I found about Skitch. Now it's been my default and go-to tool for screenshots and annotations.&lt;/p&gt;
&lt;h3&gt;Honorable mentions&lt;/h3&gt;
&lt;p&gt;WebStorm (IDE for FrontEnd)&lt;/p&gt;
&lt;p&gt;ExpressVPN (My Favourite VPN service)&lt;/p&gt;
&lt;p&gt;Keybase&lt;/p&gt;
&lt;p&gt;Spectacle &lt;/p&gt;
&lt;p&gt;Atlassian JIRA and Confluence&lt;/p&gt;
&lt;p&gt;Archbee (The app I use to write this blog)&lt;/p&gt;
&lt;p&gt;Dropbox and Google Drive&lt;/p&gt;
&lt;p&gt;G-suit&lt;/p&gt;
&lt;p&gt;AWS&lt;/p&gt;
&lt;p&gt;k8s&lt;/p&gt;
&lt;p&gt;Terraform&lt;/p&gt;
&lt;p&gt;Visual Studio Code&lt;/p&gt;
&lt;p&gt;Draw.io&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS. I'll be adding more to this list later on.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="tech, personal"></category><category term="tech"></category><category term="personal"></category><category term="work"></category></entry><entry><title>How to resolve "Unable to validate the following destination configurations" while adding event notification to your S3 bucket?</title><link href="https://sagargiri.com/s3-event-notification-issue" rel="alternate"></link><published>2021-02-25T22:11:00+09:00</published><updated>2021-02-25T22:11:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2021-02-25:/s3-event-notification-issue</id><summary type="html">&lt;p&gt;In this small article, I'll demonstrate how I resolved the lambda issue while adding S3 event notification.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Problem&lt;/h1&gt;
&lt;p&gt;I have an existing S3 bucket and I wanted to add an S3 event notification to invoke my lambda function's dev alias. I
read
the &lt;code&gt;s3api&lt;/code&gt; &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3api/put-bucket-notification-configuration.html"&gt;put-bucket-notification-configuration&lt;/a&gt;
documentation and prepare the &lt;code&gt;notification.json&lt;/code&gt; file like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;LambdaFunctionConfigurations&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ToInvokeMyLambdaFunction&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;LambdaFunctionArn&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;arn:aws:lambda:ap-northeast-1:123456789101:function:TestFunc:dev&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Events&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;s3:ObjectCreated:Put&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Filter&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Key&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;FilterRules&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;suffix&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                            &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;Value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;awesome_data.csv&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then I execute the &lt;code&gt;s3api&lt;/code&gt; command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;aws&lt;span class="w"&gt; &lt;/span&gt;s3api&lt;span class="w"&gt; &lt;/span&gt;put-bucket-notification-configuration&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;--bucket&lt;span class="w"&gt; &lt;/span&gt;MyAwesomeBucket&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;--notification-configuration&lt;span class="w"&gt; &lt;/span&gt;file://notification.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I got an error that said:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;An&lt;span class="w"&gt; &lt;/span&gt;error&lt;span class="w"&gt; &lt;/span&gt;occurred&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;InvalidArgument&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;when&lt;span class="w"&gt; &lt;/span&gt;calling&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;PutBucketNotificationConfiguration&lt;span class="w"&gt; &lt;/span&gt;operation:&lt;span class="w"&gt; &lt;/span&gt;Unable&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;validate&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;following&lt;span class="w"&gt; &lt;/span&gt;destination&lt;span class="w"&gt; &lt;/span&gt;configurations
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I checked my &lt;code&gt;aws-cli&lt;/code&gt; version, it was the recommended one:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$&lt;span class="w"&gt; &lt;/span&gt;aws&lt;span class="w"&gt; &lt;/span&gt;--version
aws-cli/2.0.12&lt;span class="w"&gt; &lt;/span&gt;Python/3.7.4&lt;span class="w"&gt; &lt;/span&gt;Darwin/20.3.0&lt;span class="w"&gt; &lt;/span&gt;botocore/2.0.0dev16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;But... It works when I do it from the S3 console...&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="cat" src="https://media.giphy.com/media/xT0GqtpF1NWd9VbstO/giphy.gif"&gt;&lt;/p&gt;
&lt;p&gt;I tried executing the same &lt;code&gt;aws s3api&lt;/code&gt; command again now with the &lt;code&gt;--debug&lt;/code&gt; flag. And in the middle of the long debug
output, I see this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;aws&lt;span class="w"&gt; &lt;/span&gt;s3api&lt;span class="w"&gt; &lt;/span&gt;put-bucket-notification-configuration&lt;span class="w"&gt; &lt;/span&gt;\
&lt;span class="w"&gt; &lt;/span&gt;--bucket&lt;span class="w"&gt; &lt;/span&gt;MyAwesomeBucket&lt;span class="w"&gt; &lt;/span&gt;\
&lt;span class="w"&gt; &lt;/span&gt;--notification-configuration&lt;span class="w"&gt; &lt;/span&gt;file://notification.json&lt;span class="w"&gt; &lt;/span&gt;\
&lt;span class="w"&gt; &lt;/span&gt;--debug

...
2021-02-25&lt;span class="w"&gt; &lt;/span&gt;21:39:13,902&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;MainThread&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;botocore.parsers&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;DEBUG&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;Response&lt;span class="w"&gt; &lt;/span&gt;body:
b&amp;#39;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;\n&lt;span class="nt"&gt;&amp;lt;Error&amp;gt;&amp;lt;Code&amp;gt;&lt;/span&gt;InvalidArgument&lt;span class="nt"&gt;&amp;lt;/Code&amp;gt;&amp;lt;Message&amp;gt;&lt;/span&gt;Unable&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;validate&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;following&lt;span class="w"&gt; &lt;/span&gt;destination&lt;span class="w"&gt; &lt;/span&gt;configurations&lt;span class="nt"&gt;&amp;lt;/Message&amp;gt;&amp;lt;ArgumentName1&amp;gt;&lt;/span&gt;arn:aws:lambda:ap-northeast-1:123456789101:function:TestFunc:dev,&lt;span class="w"&gt; &lt;/span&gt;null&lt;span class="nt"&gt;&amp;lt;/ArgumentName1&amp;gt;&amp;lt;ArgumentValue1&amp;gt;&lt;/span&gt;Not&lt;span class="w"&gt; &lt;/span&gt;authorized&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;invoke&lt;span class="w"&gt; &lt;/span&gt;function&lt;span class="w"&gt; &lt;/span&gt;[arn:aws:lambda:ap-northeast-1:123456789101:function:TestFunc:dev]&lt;span class="nt"&gt;&amp;lt;/ArgumentValue1&amp;gt;&amp;lt;RequestId&amp;gt;&lt;/span&gt;2B8705F2FD8848F2&lt;span class="nt"&gt;&amp;lt;/RequestId&amp;gt;&amp;lt;HostId&amp;gt;&lt;/span&gt;bj9ahrqPxN3emWnZ008dtkVmVR9VVxfFjAJAw9hKvhoa4vtdHXaGi/x4a4Okki3oJhbaeHe0Ppk=&lt;span class="nt"&gt;&amp;lt;/HostId&amp;gt;&amp;lt;/Error&amp;gt;&lt;/span&gt;&amp;#39;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The gist of it is &lt;code&gt;Not authorized to invoke function [arn:aws:lambda:ap-northeast-1:123456789101:function:TestFunc:dev]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;So the problem was with the lambda permission. :thinking:&lt;/p&gt;
&lt;h1&gt;Solution&lt;/h1&gt;
&lt;p&gt;Digging around the internet I find &lt;a href="https://forums.aws.amazon.com/thread.jspa?threadID=182758"&gt;this&lt;/a&gt;
And the solution is to give your lambda a permission to being invoked by S3 first. Which can be done like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;aws&lt;span class="w"&gt; &lt;/span&gt;lambda&lt;span class="w"&gt; &lt;/span&gt;add-permission&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;--function-name&lt;span class="w"&gt; &lt;/span&gt;TestFunc:dev&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;--profile&lt;span class="w"&gt; &lt;/span&gt;default&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;--statement-id&lt;span class="w"&gt; &lt;/span&gt;AllowToBeInvoked&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;--action&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lambda:InvokeFunction&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;--principal&lt;span class="w"&gt; &lt;/span&gt;s3.amazonaws.com&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;--source-arn&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;arn:aws:s3:::MyAwesomeBucket&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;--source-account&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;123456789101&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I got the output like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Statement&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{\&amp;quot;Sid\&amp;quot;:\&amp;quot;AllowToBeInvoked\&amp;quot;,\&amp;quot;Effect\&amp;quot;:\&amp;quot;Allow\&amp;quot;,\&amp;quot;Principal\&amp;quot;:{\&amp;quot;Service\&amp;quot;:\&amp;quot;s3.amazonaws.com\&amp;quot;},\&amp;quot;Action\&amp;quot;:\&amp;quot;lambda:InvokeFunction\&amp;quot;,\&amp;quot;Resource\&amp;quot;:\&amp;quot;arn:aws:lambda:ap-northeast-1:123456789101:function:TestFunc:dev\&amp;quot;,\&amp;quot;Condition\&amp;quot;:{\&amp;quot;StringEquals\&amp;quot;:{\&amp;quot;AWS:SourceAccount\&amp;quot;:\&amp;quot;123456789101\&amp;quot;},\&amp;quot;ArnLike\&amp;quot;:{\&amp;quot;AWS:SourceArn\&amp;quot;:\&amp;quot;arn:aws:s3:::MyAwesomeBucket\&amp;quot;}}}&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, executing the &lt;code&gt;aws s3api&lt;/code&gt; command, I was able to put S3 event notification on &lt;code&gt;MyAwesomeBucket&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;aws&lt;span class="w"&gt; &lt;/span&gt;s3api&lt;span class="w"&gt; &lt;/span&gt;put-bucket-notification-configuration&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;--bucket&lt;span class="w"&gt; &lt;/span&gt;MyAwesomeBucket&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;--notification-configuration&lt;span class="w"&gt; &lt;/span&gt;file://notification.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I checked my lambda console and I can verify the S3 trigger is applied. :confetti_ball:
&lt;img alt="image.png" src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/1104077/1013252b-7ede-d418-a023-4a7052031a4d.png"&gt;&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;https://forums.aws.amazon.com/thread.jspa?threadID=182758&lt;/li&gt;
&lt;li&gt;https://docs.aws.amazon.com/lambda/latest/dg/with-s3.html&lt;/li&gt;
&lt;li&gt;https://docs.aws.amazon.com/cli/latest/reference/s3api/put-bucket-notification-configuration.html&lt;/li&gt;
&lt;/ol&gt;</content><category term="tutorial fixes"></category><category term="S3"></category><category term="AWS"></category><category term="lambda"></category><category term="awscli"></category></entry><entry><title>Terraform: Getting Started from Zero</title><link href="https://sagargiri.com/straight-up-Terraform" rel="alternate"></link><published>2021-01-17T21:32:00+09:00</published><updated>2021-01-17T21:32:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2021-01-17:/straight-up-Terraform</id><summary type="html">&lt;p&gt;This is the very detailed introduction to getting started with Terraform&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Terraform is an open-source infrastructure as code software tool that enables you to safely and predictably create, change, and improve infrastructure. - www.Terraform.io&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--toc--&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#chapter-1-introduction-to-iac"&gt;Chapter 1: Introduction to IaC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#11-begin-with-a-look-back"&gt;1.1 Begin with a look back&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#12-why-infrastructure-as-code"&gt;1.2 Why infrastructure as code?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#13-terminology"&gt;1.3 Terminology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#14-explore-approaches-to-iac"&gt;1.4 Explore approaches to IaC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-2-terraform"&gt;Chapter 2: Terraform&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#21-what-is-terraform"&gt;2.1 What is Terraform?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#22-install-terraform"&gt;2.2 Install Terraform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#23-terraform-tour"&gt;2.3 Terraform Tour&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#24-the-very-basics-of-terraform"&gt;2.4 The very "Basics of Terraform"&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-3-learning-hcl"&gt;Chapter 3: Learning HCL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#31-overview-of-hcl-structure"&gt;3.1 Overview of HCL structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#32-terraform-data-sources-and-resources"&gt;3.2 Terraform data sources and resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#33-terraform-outputs"&gt;3.3 Terraform Outputs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#34-interpolation-in-hcl"&gt;3.4 Interpolation in HCL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#35-dependencies-in-terraform"&gt;3.5 Dependencies in Terraform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#36-variables-and-locals"&gt;3.6 Variables and Locals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#37-conditionals-and-the-count-property"&gt;3.7 Conditionals and the Count property&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#38-data-types-and-operators"&gt;3.8 Data types and operators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#39-functions"&gt;3.9 Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#310-iterations-in-collections"&gt;3.10 Iterations in collections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#311-directives-and-heredocs"&gt;3.11 Directives and heredocs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#312-clean-up"&gt;3.12 Clean up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-4-code-re-use-for-applying-dry"&gt;Chapter 4: Code Re-Use for applying DRY&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#41-understanding-terraform-modules"&gt;4.1 Understanding Terraform Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#42-distributing-modules"&gt;4.2 Distributing modules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#chapter-5-collaboration-with-terraform"&gt;Chapter 5: Collaboration with Terraform&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#51-terraform-backends"&gt;5.1 Terraform backends&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#52-terraform-workspaces"&gt;5.2 Terraform workspaces&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Chapter 1: Introduction to IaC&lt;/h1&gt;
&lt;h2&gt;1.1 Begin with a look back&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[1960-1970] - Mainframe Computers&lt;ul&gt;
&lt;li&gt;Big machines&lt;/li&gt;
&lt;li&gt;Big facilities and using fork-lifts to move machines&lt;/li&gt;
&lt;li&gt;Automation was not that critical in this era&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[1980-1990] - Client/Server World&lt;ul&gt;
&lt;li&gt;Things started to get little more complicated&lt;/li&gt;
&lt;li&gt;UNIX or PC servers running various OS&lt;/li&gt;
&lt;li&gt;These machines serve users using networking&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[Mid 90's-2000] - Virtualization&lt;ul&gt;
&lt;li&gt;Software defines infrastructures&lt;/li&gt;
&lt;li&gt;Hardware were virtualized&lt;/li&gt;
&lt;li&gt;Clients do not have any hardware debt&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cloud Era&lt;ul&gt;
&lt;li&gt;No hardware to manage&lt;/li&gt;
&lt;li&gt;It's all software management problem&lt;/li&gt;
&lt;li&gt;All these things could be managed by API's, Scripts&lt;/li&gt;
&lt;li&gt;Manage all the infrastructures by the code&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;1.2 Why infrastructure as code?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Repeatability&lt;ul&gt;
&lt;li&gt;We can deploy the same thing over and over again&lt;/li&gt;
&lt;li&gt;We'll have a backup&lt;/li&gt;
&lt;li&gt;We can have multiple environments (dev, stage, prod)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Auditability&lt;ul&gt;
&lt;li&gt;We can see what changed, who changed and impact of change&lt;/li&gt;
&lt;li&gt;We can detect the problems easily&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Change control&lt;ul&gt;
&lt;li&gt;Allows us to use VCS to control what to change&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Collaboration&lt;ul&gt;
&lt;li&gt;Multiple people can work together on the same code base&lt;/li&gt;
&lt;li&gt;Example: Use GitHub to propose a change&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;1.3 Terminology&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;IaC&lt;/strong&gt; - Infrastructure as Code&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CM&lt;/strong&gt; - Configuration Management (Example: Ansible, Puppet, etc)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IaaS&lt;/strong&gt; - Infrastructure as a Service (Example: AWS, GoogleCloud, Azure)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PaaS&lt;/strong&gt; - Platform as a Service (Example: Heroku, AWS EBS)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VCS&lt;/strong&gt; - Version Control System&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CI/CD&lt;/strong&gt; - Continuous Integration/ Continuous Deployment (Delivery)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SDLC&lt;/strong&gt; - Software Development Life Cycle&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Declarative&lt;/strong&gt; - Declare what you want&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Imperative&lt;/strong&gt; - How to get the desired state&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;1.4 Explore approaches to IaC&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Imperative Approach&lt;ul&gt;
&lt;li&gt;Procedural Approach&lt;/li&gt;
&lt;li&gt;Answers How?&lt;/li&gt;
&lt;li&gt;Example Tools: AWS Cli, Python/Boto3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Declarative Approach&lt;ul&gt;
&lt;li&gt;Answers What?&lt;/li&gt;
&lt;li&gt;Example Tools: AWS CloudFormation, Terraform&lt;/li&gt;
&lt;li&gt;We can change things easily for example AWS instance type&lt;/li&gt;
&lt;li&gt;Tool does everything for us&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Chapter 2: Terraform&lt;/h1&gt;
&lt;h2&gt;2.1 What is Terraform?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Terraform is a cross-platform command line tool&lt;/li&gt;
&lt;li&gt;Declarative IaC tool&lt;ul&gt;
&lt;li&gt;We define what we want and Terraform will create it for us&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Also, an Online Service&lt;ul&gt;
&lt;li&gt;Provided through Terraform Cloud&lt;/li&gt;
&lt;li&gt;Remote execution, Secret Storage&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Terraform consists&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Configuration&lt;/strong&gt;: Configuration files to define what we want&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;State&lt;/strong&gt;: Like a Database which stores the current state and can be stored anywhere like in local PC, S3, GCS, Google Drive, etc&lt;ul&gt;
&lt;li&gt;State is the Terraform view of the world&lt;/li&gt;
&lt;li&gt;Terraform looks here instead of cloud provider&lt;/li&gt;
&lt;li&gt;Terraform compares &lt;strong&gt;Config and State&lt;/strong&gt; to create-destroy resource&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;2.2 Install Terraform&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.Terraform.io/downloads.html"&gt;https://www.Terraform.io/downloads.html&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;-version
Terraform&lt;span class="w"&gt; &lt;/span&gt;v0.14.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;2.3 Terraform Tour&lt;/h2&gt;
&lt;p&gt;Initialize Terraform&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╭─sagar-giri@PCN-489&lt;span class="w"&gt; &lt;/span&gt;~/IdeaProjects/HelloTerraform
╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;init
Terraform&lt;span class="w"&gt; &lt;/span&gt;initialized&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;an&lt;span class="w"&gt; &lt;/span&gt;empty&lt;span class="w"&gt; &lt;/span&gt;directory!

The&lt;span class="w"&gt; &lt;/span&gt;directory&lt;span class="w"&gt; &lt;/span&gt;has&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;configuration&lt;span class="w"&gt; &lt;/span&gt;files.&lt;span class="w"&gt; &lt;/span&gt;You&lt;span class="w"&gt; &lt;/span&gt;may&lt;span class="w"&gt; &lt;/span&gt;begin&lt;span class="w"&gt; &lt;/span&gt;working
with&lt;span class="w"&gt; &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;immediately&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;creating&lt;span class="w"&gt; &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;configuration&lt;span class="w"&gt; &lt;/span&gt;files.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Plan Terraform&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╭─sagar-giri@PCN-489&lt;span class="w"&gt; &lt;/span&gt;~/IdeaProjects/HelloTerraform
╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;plan

Error:&lt;span class="w"&gt; &lt;/span&gt;No&lt;span class="w"&gt; &lt;/span&gt;configuration&lt;span class="w"&gt; &lt;/span&gt;files

Plan&lt;span class="w"&gt; &lt;/span&gt;requires&lt;span class="w"&gt; &lt;/span&gt;configuration&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;present.&lt;span class="w"&gt; &lt;/span&gt;Planning&lt;span class="w"&gt; &lt;/span&gt;without&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;configuration
would&lt;span class="w"&gt; &lt;/span&gt;mark&lt;span class="w"&gt; &lt;/span&gt;everything&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;destruction,&lt;span class="w"&gt; &lt;/span&gt;which&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;normally&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;what&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;desired.
If&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;would&lt;span class="w"&gt; &lt;/span&gt;like&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;destroy&lt;span class="w"&gt; &lt;/span&gt;everything,&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;plan&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;-destroy&lt;span class="w"&gt; &lt;/span&gt;option.
Otherwise,&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;configuration&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;.tf&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;try&lt;span class="w"&gt; &lt;/span&gt;again.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Apply&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╭─sagar-giri@PCN-489&lt;span class="w"&gt; &lt;/span&gt;~/IdeaProjects/HelloTerraform
╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="w"&gt;                                                                                                 &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;↵

Error:&lt;span class="w"&gt; &lt;/span&gt;No&lt;span class="w"&gt; &lt;/span&gt;configuration&lt;span class="w"&gt; &lt;/span&gt;files

Apply&lt;span class="w"&gt; &lt;/span&gt;requires&lt;span class="w"&gt; &lt;/span&gt;configuration&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;present.&lt;span class="w"&gt; &lt;/span&gt;Applying&lt;span class="w"&gt; &lt;/span&gt;without&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;configuration
would&lt;span class="w"&gt; &lt;/span&gt;mark&lt;span class="w"&gt; &lt;/span&gt;everything&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;destruction,&lt;span class="w"&gt; &lt;/span&gt;which&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;normally&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;what&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;desired.
If&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;would&lt;span class="w"&gt; &lt;/span&gt;like&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;destroy&lt;span class="w"&gt; &lt;/span&gt;everything,&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Terraform destroy&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;instead.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Destroy&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╭─sagar-giri@PCN-489&lt;span class="w"&gt; &lt;/span&gt;~/IdeaProjects/HelloTerraform
╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;destroy
Do&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;really&lt;span class="w"&gt; &lt;/span&gt;want&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;destroy&lt;span class="w"&gt; &lt;/span&gt;all&lt;span class="w"&gt; &lt;/span&gt;resources?
&lt;span class="w"&gt;  &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;destroy&lt;span class="w"&gt; &lt;/span&gt;all&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;managed&lt;span class="w"&gt; &lt;/span&gt;infrastructure,&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;shown&lt;span class="w"&gt; &lt;/span&gt;above.
&lt;span class="w"&gt;  &lt;/span&gt;There&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;undo.&lt;span class="w"&gt; &lt;/span&gt;Only&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;accepted&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;confirm.

&lt;span class="w"&gt;  &lt;/span&gt;Enter&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;value:&lt;span class="w"&gt; &lt;/span&gt;no

Destroy&lt;span class="w"&gt; &lt;/span&gt;cancelled.
╭─sagar-giri@PCN-489&lt;span class="w"&gt; &lt;/span&gt;~/IdeaProjects/HelloTerraform
╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;destroy&lt;span class="w"&gt;                                                                                               &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;↵
Do&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;really&lt;span class="w"&gt; &lt;/span&gt;want&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;destroy&lt;span class="w"&gt; &lt;/span&gt;all&lt;span class="w"&gt; &lt;/span&gt;resources?
&lt;span class="w"&gt;  &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;destroy&lt;span class="w"&gt; &lt;/span&gt;all&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;managed&lt;span class="w"&gt; &lt;/span&gt;infrastructure,&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;shown&lt;span class="w"&gt; &lt;/span&gt;above.
&lt;span class="w"&gt;  &lt;/span&gt;There&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;undo.&lt;span class="w"&gt; &lt;/span&gt;Only&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;accepted&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;confirm.

&lt;span class="w"&gt;  &lt;/span&gt;Enter&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;value:&lt;span class="w"&gt; &lt;/span&gt;yes

Destroy&lt;span class="w"&gt; &lt;/span&gt;complete!&lt;span class="w"&gt; &lt;/span&gt;Resources:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;destroyed.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Help (Look for the &lt;em&gt;&lt;strong&gt;Main commands&lt;/strong&gt;&lt;/em&gt; section)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;help&lt;/span&gt;
Usage:&lt;span class="w"&gt; &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;global&lt;span class="w"&gt; &lt;/span&gt;options&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;subcommand&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;args&lt;span class="o"&gt;]&lt;/span&gt;

The&lt;span class="w"&gt; &lt;/span&gt;available&lt;span class="w"&gt; &lt;/span&gt;commands&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;execution&lt;span class="w"&gt; &lt;/span&gt;are&lt;span class="w"&gt; &lt;/span&gt;listed&lt;span class="w"&gt; &lt;/span&gt;below.
The&lt;span class="w"&gt; &lt;/span&gt;primary&lt;span class="w"&gt; &lt;/span&gt;workflow&lt;span class="w"&gt; &lt;/span&gt;commands&lt;span class="w"&gt; &lt;/span&gt;are&lt;span class="w"&gt; &lt;/span&gt;given&lt;span class="w"&gt; &lt;/span&gt;first,&lt;span class="w"&gt; &lt;/span&gt;followed&lt;span class="w"&gt; &lt;/span&gt;by
less&lt;span class="w"&gt; &lt;/span&gt;common&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;more&lt;span class="w"&gt; &lt;/span&gt;advanced&lt;span class="w"&gt; &lt;/span&gt;commands.

Main&lt;span class="w"&gt; &lt;/span&gt;commands:
&lt;span class="w"&gt;  &lt;/span&gt;init&lt;span class="w"&gt;          &lt;/span&gt;Prepare&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;working&lt;span class="w"&gt; &lt;/span&gt;directory&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;other&lt;span class="w"&gt; &lt;/span&gt;commands
&lt;span class="w"&gt;  &lt;/span&gt;validate&lt;span class="w"&gt;      &lt;/span&gt;Check&lt;span class="w"&gt; &lt;/span&gt;whether&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;configuration&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;valid
&lt;span class="w"&gt;  &lt;/span&gt;plan&lt;span class="w"&gt;          &lt;/span&gt;Show&lt;span class="w"&gt; &lt;/span&gt;changes&lt;span class="w"&gt; &lt;/span&gt;required&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;current&lt;span class="w"&gt; &lt;/span&gt;configuration
&lt;span class="w"&gt;  &lt;/span&gt;apply&lt;span class="w"&gt;         &lt;/span&gt;Create&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;update&lt;span class="w"&gt; &lt;/span&gt;infrastructure
&lt;span class="w"&gt;  &lt;/span&gt;destroy&lt;span class="w"&gt;       &lt;/span&gt;Destroy&lt;span class="w"&gt; &lt;/span&gt;previously-created&lt;span class="w"&gt; &lt;/span&gt;infrastructure

All&lt;span class="w"&gt; &lt;/span&gt;other&lt;span class="w"&gt; &lt;/span&gt;commands:
&lt;span class="w"&gt;  &lt;/span&gt;console&lt;span class="w"&gt;       &lt;/span&gt;Try&lt;span class="w"&gt; &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;expressions&lt;span class="w"&gt; &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;an&lt;span class="w"&gt; &lt;/span&gt;interactive&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;prompt
&lt;span class="w"&gt;  &lt;/span&gt;fmt&lt;span class="w"&gt;           &lt;/span&gt;Reformat&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;configuration&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;standard&lt;span class="w"&gt; &lt;/span&gt;style
&lt;span class="w"&gt;  &lt;/span&gt;force-unlock&lt;span class="w"&gt;  &lt;/span&gt;Release&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;stuck&lt;span class="w"&gt; &lt;/span&gt;lock&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;current&lt;span class="w"&gt; &lt;/span&gt;workspace
&lt;span class="w"&gt;  &lt;/span&gt;get&lt;span class="w"&gt;           &lt;/span&gt;Install&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;upgrade&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;modules
&lt;span class="w"&gt;  &lt;/span&gt;graph&lt;span class="w"&gt;         &lt;/span&gt;Generate&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;Graphviz&lt;span class="w"&gt; &lt;/span&gt;graph&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;steps&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;an&lt;span class="w"&gt; &lt;/span&gt;operation
&lt;span class="w"&gt;  &lt;/span&gt;import&lt;span class="w"&gt;        &lt;/span&gt;Associate&lt;span class="w"&gt; &lt;/span&gt;existing&lt;span class="w"&gt; &lt;/span&gt;infrastructure&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;resource
&lt;span class="w"&gt;  &lt;/span&gt;login&lt;span class="w"&gt;         &lt;/span&gt;Obtain&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;save&lt;span class="w"&gt; &lt;/span&gt;credentials&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;host
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;logout&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;Remove&lt;span class="w"&gt; &lt;/span&gt;locally-stored&lt;span class="w"&gt; &lt;/span&gt;credentials&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;host
&lt;span class="w"&gt;  &lt;/span&gt;output&lt;span class="w"&gt;        &lt;/span&gt;Show&lt;span class="w"&gt; &lt;/span&gt;output&lt;span class="w"&gt; &lt;/span&gt;values&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;root&lt;span class="w"&gt; &lt;/span&gt;module
&lt;span class="w"&gt;  &lt;/span&gt;providers&lt;span class="w"&gt;     &lt;/span&gt;Show&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;providers&lt;span class="w"&gt; &lt;/span&gt;required&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;configuration
&lt;span class="w"&gt;  &lt;/span&gt;refresh&lt;span class="w"&gt;       &lt;/span&gt;Update&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;state&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;match&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;systems
&lt;span class="w"&gt;  &lt;/span&gt;show&lt;span class="w"&gt;          &lt;/span&gt;Show&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;current&lt;span class="w"&gt; &lt;/span&gt;state&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;saved&lt;span class="w"&gt; &lt;/span&gt;plan
&lt;span class="w"&gt;  &lt;/span&gt;state&lt;span class="w"&gt;         &lt;/span&gt;Advanced&lt;span class="w"&gt; &lt;/span&gt;state&lt;span class="w"&gt; &lt;/span&gt;management
&lt;span class="w"&gt;  &lt;/span&gt;taint&lt;span class="w"&gt;         &lt;/span&gt;Mark&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;resource&lt;span class="w"&gt; &lt;/span&gt;instance&lt;span class="w"&gt; &lt;/span&gt;as&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;fully&lt;span class="w"&gt; &lt;/span&gt;functional
&lt;span class="w"&gt;  &lt;/span&gt;untaint&lt;span class="w"&gt;       &lt;/span&gt;Remove&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tainted&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;state&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;resource&lt;span class="w"&gt; &lt;/span&gt;instance
&lt;span class="w"&gt;  &lt;/span&gt;version&lt;span class="w"&gt;       &lt;/span&gt;Show&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;current&lt;span class="w"&gt; &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;version
&lt;span class="w"&gt;  &lt;/span&gt;workspace&lt;span class="w"&gt;     &lt;/span&gt;Workspace&lt;span class="w"&gt; &lt;/span&gt;management

Global&lt;span class="w"&gt; &lt;/span&gt;options&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;use&lt;span class="w"&gt; &lt;/span&gt;these&lt;span class="w"&gt; &lt;/span&gt;before&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;subcommand,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;any&lt;span class="o"&gt;)&lt;/span&gt;:
&lt;span class="w"&gt;  &lt;/span&gt;-chdir&lt;span class="o"&gt;=&lt;/span&gt;DIR&lt;span class="w"&gt;    &lt;/span&gt;Switch&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;different&lt;span class="w"&gt; &lt;/span&gt;working&lt;span class="w"&gt; &lt;/span&gt;directory&lt;span class="w"&gt; &lt;/span&gt;before&lt;span class="w"&gt; &lt;/span&gt;executing&lt;span class="w"&gt; &lt;/span&gt;the
&lt;span class="w"&gt;                &lt;/span&gt;given&lt;span class="w"&gt; &lt;/span&gt;subcommand.
&lt;span class="w"&gt;  &lt;/span&gt;-help&lt;span class="w"&gt;         &lt;/span&gt;Show&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;output,&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;help&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;specified&lt;span class="w"&gt; &lt;/span&gt;subcommand.
&lt;span class="w"&gt;  &lt;/span&gt;-version&lt;span class="w"&gt;      &lt;/span&gt;An&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;subcommand.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Format the Terraform file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;fmt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;2.4 The very "Basics of Terraform"&lt;/h2&gt;
&lt;p&gt;Terraform uses HCL (&lt;a href="https://github.com/hashicorp"&gt;HashiCorp&lt;/a&gt; Configuration Language)&lt;/p&gt;
&lt;p&gt;The extension of file ends with &lt;code&gt;.tf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;main.tf&lt;/code&gt; inside a directory&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="s2"&gt;&amp;quot;greeting&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;{
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello Terraform.&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;}

&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;provider&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;random&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;{}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Initialize Terraform&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;init

Initializing&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;backend...

Initializing&lt;span class="w"&gt; &lt;/span&gt;provider&lt;span class="w"&gt; &lt;/span&gt;plugins...
-&lt;span class="w"&gt; &lt;/span&gt;Finding&lt;span class="w"&gt; &lt;/span&gt;latest&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;hashicorp/random...
-&lt;span class="w"&gt; &lt;/span&gt;Installing&lt;span class="w"&gt; &lt;/span&gt;hashicorp/random&lt;span class="w"&gt; &lt;/span&gt;v3.0.1...
-&lt;span class="w"&gt; &lt;/span&gt;Installed&lt;span class="w"&gt; &lt;/span&gt;hashicorp/random&lt;span class="w"&gt; &lt;/span&gt;v3.0.1&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;signed&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;HashiCorp&lt;span class="o"&gt;)&lt;/span&gt;

Terraform&lt;span class="w"&gt; &lt;/span&gt;has&lt;span class="w"&gt; &lt;/span&gt;created&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;lock&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;.Terraform.lock.hcl&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;record&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;provider
selections&lt;span class="w"&gt; &lt;/span&gt;it&lt;span class="w"&gt; &lt;/span&gt;made&lt;span class="w"&gt; &lt;/span&gt;above.&lt;span class="w"&gt; &lt;/span&gt;Include&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;control&lt;span class="w"&gt; &lt;/span&gt;repository
so&lt;span class="w"&gt; &lt;/span&gt;that&lt;span class="w"&gt; &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;can&lt;span class="w"&gt; &lt;/span&gt;guarantee&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;same&lt;span class="w"&gt; &lt;/span&gt;selections&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;default&lt;span class="w"&gt; &lt;/span&gt;when
you&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Terraform init&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;future.

Terraform&lt;span class="w"&gt; &lt;/span&gt;has&lt;span class="w"&gt; &lt;/span&gt;been&lt;span class="w"&gt; &lt;/span&gt;successfully&lt;span class="w"&gt; &lt;/span&gt;initialized!

You&lt;span class="w"&gt; &lt;/span&gt;may&lt;span class="w"&gt; &lt;/span&gt;now&lt;span class="w"&gt; &lt;/span&gt;begin&lt;span class="w"&gt; &lt;/span&gt;working&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;Terraform.&lt;span class="w"&gt; &lt;/span&gt;Try&lt;span class="w"&gt; &lt;/span&gt;running&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;terraform plan&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;see
any&lt;span class="w"&gt; &lt;/span&gt;changes&lt;span class="w"&gt; &lt;/span&gt;that&lt;span class="w"&gt; &lt;/span&gt;are&lt;span class="w"&gt; &lt;/span&gt;required&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;infrastructure.&lt;span class="w"&gt; &lt;/span&gt;All&lt;span class="w"&gt; &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;commands
should&lt;span class="w"&gt; &lt;/span&gt;now&lt;span class="w"&gt; &lt;/span&gt;work.

If&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;ever&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;change&lt;span class="w"&gt; &lt;/span&gt;modules&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;backend&lt;span class="w"&gt; &lt;/span&gt;configuration&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Terraform,
rerun&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;reinitialize&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;working&lt;span class="w"&gt; &lt;/span&gt;directory.&lt;span class="w"&gt; &lt;/span&gt;If&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;forget,&lt;span class="w"&gt; &lt;/span&gt;other
commands&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;detect&lt;span class="w"&gt; &lt;/span&gt;it&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;remind&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;so&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;necessary.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Plan it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;plan

An&lt;span class="w"&gt; &lt;/span&gt;execution&lt;span class="w"&gt; &lt;/span&gt;plan&lt;span class="w"&gt; &lt;/span&gt;has&lt;span class="w"&gt; &lt;/span&gt;been&lt;span class="w"&gt; &lt;/span&gt;generated&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;shown&lt;span class="w"&gt; &lt;/span&gt;below.
Resource&lt;span class="w"&gt; &lt;/span&gt;actions&lt;span class="w"&gt; &lt;/span&gt;are&lt;span class="w"&gt; &lt;/span&gt;indicated&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;following&lt;span class="w"&gt; &lt;/span&gt;symbols:

Terraform&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;perform&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;following&lt;span class="w"&gt; &lt;/span&gt;actions:

Plan:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;add,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;change,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;destroy.

Changes&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;Outputs:
&lt;span class="w"&gt;  &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;greeting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello Terraform.&amp;quot;&lt;/span&gt;

------------------------------------------------------------------------

Note:&lt;span class="w"&gt; &lt;/span&gt;You&lt;span class="w"&gt; &lt;/span&gt;didn&lt;span class="s1"&gt;&amp;#39;t specify an &amp;quot;-out&amp;quot; parameter to save this plan, so Terraform&lt;/span&gt;
&lt;span class="s1"&gt;can&amp;#39;&lt;/span&gt;t&lt;span class="w"&gt; &lt;/span&gt;guarantee&lt;span class="w"&gt; &lt;/span&gt;that&lt;span class="w"&gt; &lt;/span&gt;exactly&lt;span class="w"&gt; &lt;/span&gt;these&lt;span class="w"&gt; &lt;/span&gt;actions&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;performed&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;
&lt;span class="s2"&gt;&amp;quot;Terraform apply&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;subsequently&lt;span class="w"&gt; &lt;/span&gt;run.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Apply it. You might have to type &lt;code&gt;yes&lt;/code&gt; in the middle of it.&lt;/p&gt;
&lt;p&gt;After applying it creates a &lt;code&gt;.tfstate&lt;/code&gt; file, and you should not touch the &lt;code&gt;.tfstate&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;apply

An&lt;span class="w"&gt; &lt;/span&gt;execution&lt;span class="w"&gt; &lt;/span&gt;plan&lt;span class="w"&gt; &lt;/span&gt;has&lt;span class="w"&gt; &lt;/span&gt;been&lt;span class="w"&gt; &lt;/span&gt;generated&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;shown&lt;span class="w"&gt; &lt;/span&gt;below.
Resource&lt;span class="w"&gt; &lt;/span&gt;actions&lt;span class="w"&gt; &lt;/span&gt;are&lt;span class="w"&gt; &lt;/span&gt;indicated&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;following&lt;span class="w"&gt; &lt;/span&gt;symbols:

Terraform&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;perform&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;following&lt;span class="w"&gt; &lt;/span&gt;actions:

Plan:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;add,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;change,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;destroy.

Changes&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;Outputs:
&lt;span class="w"&gt;  &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;greeting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello Terraform.&amp;quot;&lt;/span&gt;

Do&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;want&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;perform&lt;span class="w"&gt; &lt;/span&gt;these&lt;span class="w"&gt; &lt;/span&gt;actions?
&lt;span class="w"&gt;  &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;perform&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;actions&lt;span class="w"&gt; &lt;/span&gt;described&lt;span class="w"&gt; &lt;/span&gt;above.
&lt;span class="w"&gt;  &lt;/span&gt;Only&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;accepted&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;approve.

&lt;span class="w"&gt;  &lt;/span&gt;Enter&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;value:&lt;span class="w"&gt; &lt;/span&gt;yes


Apply&lt;span class="w"&gt; &lt;/span&gt;complete!&lt;span class="w"&gt; &lt;/span&gt;Resources:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;added,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;changed,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;destroyed.

Outputs:

&lt;span class="nv"&gt;greeting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello Terraform.&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;See the output&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;output
&lt;span class="nv"&gt;greeting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello Terraform.&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Specify which output you want&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;output&lt;span class="w"&gt; &lt;/span&gt;greeting
&lt;span class="s2"&gt;&amp;quot;Hello Terraform.&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;Chapter 3: Learning HCL&lt;/h1&gt;
&lt;h2&gt;3.1 Overview of HCL structure&lt;/h2&gt;
&lt;p&gt;By conventions &lt;code&gt;main.tf&lt;/code&gt; , &lt;code&gt;outputs.tf&lt;/code&gt; and &lt;code&gt;variables.tf&lt;/code&gt; are required files inside a directory&lt;/p&gt;
&lt;p&gt;Sometimes the &lt;code&gt;main.tf&lt;/code&gt; file gets too big. In this case we use the submodules.&lt;/p&gt;
&lt;p&gt;Example &lt;code&gt;main.tf&lt;/code&gt; with AWS as a provider:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Terraform block is optional but it&amp;#39;s a best practice to have it&lt;/span&gt;
&lt;span class="nb"&gt;terraform&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;  # required_version is the Terraform version which we want to apply&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;required_version&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;gt;=0.14.0&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Which cloud provider you want to use&lt;/span&gt;
&lt;span class="kr"&gt;provider&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;aws&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;  # region is required&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ap-northeast-1&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;  # Since I am putting this file in GitHub I do not EVER put my AWS credentials here.&lt;/span&gt;
&lt;span class="c1"&gt;  # Instead I use the environment variable or Terraform cloud or the ~/.aws/credentials file&lt;/span&gt;
&lt;span class="c1"&gt;  #access_keys = &amp;quot;my-access-key&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;  #access_secret = &amp;quot;my-secret-key&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;3.2 Terraform data sources and resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Resources&lt;ul&gt;
&lt;li&gt;Resource is any object that you want to manage with Terraform. For example: S3, AWS EKS, GKE, VM's.&lt;/li&gt;
&lt;li&gt;Resources are defined in the resource block&lt;/li&gt;
&lt;li&gt;Declaring a resource tells Terraform that it should CREATE and manage the Resource described.&lt;/li&gt;
&lt;li&gt;If the resource already exists, it must be imported into Terraform state.&lt;/li&gt;
&lt;li&gt;Example: &lt;code&gt;resource "aws_s3_bucket" "Terraform-bucket-2021" {}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;REF: &lt;a href="https://www.Terraform.io/docs/configuration/blocks/resources/index.html"&gt;https://www.Terraform.io/docs/configuration/blocks/resources/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Data sources&lt;ul&gt;
&lt;li&gt;Data sources are resources that Terraform does not manage. For example: &lt;em&gt;Availability Zones, Account ID&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;We can use data source to get the availability zones to place EC2 instances in multiple AZ's&lt;/li&gt;
&lt;li&gt;REF: &lt;a href="https://www.Terraform.io/docs/configuration/data-sources.html"&gt;https://www.Terraform.io/docs/configuration/data-sources.html&lt;/a&gt;
Example:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Create a S3 bucket in AWS using resource block.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;terraform&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;required_version&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;gt;=0.14.0&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;provider&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;aws&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ap-northeast-1&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;resource&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_s3_bucket&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;Terraform-bucket-2021&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;  # bucket name should be unique.&lt;/span&gt;
&lt;span class="c1"&gt;  # If you don&amp;#39;t provide any name, Terraform will create it for you and saves in outputs.tf file&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;bucket&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Terraform-bucket-2021&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Plan and save the output to a file using command: &lt;code&gt;terraform plan -out s3.tfplan&lt;/code&gt; . This will create a file named &lt;code&gt;s3.tfplan&lt;/code&gt; with following output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;plan&lt;span class="w"&gt; &lt;/span&gt;-out&lt;span class="w"&gt; &lt;/span&gt;example.tfplan

An&lt;span class="w"&gt; &lt;/span&gt;execution&lt;span class="w"&gt; &lt;/span&gt;plan&lt;span class="w"&gt; &lt;/span&gt;has&lt;span class="w"&gt; &lt;/span&gt;been&lt;span class="w"&gt; &lt;/span&gt;generated&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;shown&lt;span class="w"&gt; &lt;/span&gt;below.
Resource&lt;span class="w"&gt; &lt;/span&gt;actions&lt;span class="w"&gt; &lt;/span&gt;are&lt;span class="w"&gt; &lt;/span&gt;indicated&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;following&lt;span class="w"&gt; &lt;/span&gt;symbols:
&lt;span class="w"&gt;  &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;create

Terraform&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;perform&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;following&lt;span class="w"&gt; &lt;/span&gt;actions:

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;# aws_s3_bucket.Terraform-bucket-2021 will be created&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;resource&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;aws_s3_bucket&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Terraform-bucket-2021&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;acceleration_status&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;acl&lt;/span&gt;&lt;span class="w"&gt;                         &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;private&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;arn&lt;/span&gt;&lt;span class="w"&gt;                         &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bucket&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Terraform-bucket-2021&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bucket_domain_name&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bucket_regional_domain_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;force_destroy&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;hosted_zone_id&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="w"&gt;                          &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;region&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;request_payer&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;website_domain&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;website_endpoint&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;versioning&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;enabled&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;mfa_delete&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;

Plan:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;add,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;change,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;destroy.

------------------------------------------------------------------------

This&lt;span class="w"&gt; &lt;/span&gt;plan&lt;span class="w"&gt; &lt;/span&gt;was&lt;span class="w"&gt; &lt;/span&gt;saved&lt;span class="w"&gt; &lt;/span&gt;to:&lt;span class="w"&gt; &lt;/span&gt;example.tfplan

To&lt;span class="w"&gt; &lt;/span&gt;perform&lt;span class="w"&gt; &lt;/span&gt;exactly&lt;span class="w"&gt; &lt;/span&gt;these&lt;span class="w"&gt; &lt;/span&gt;actions,&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;following&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;apply:
&lt;span class="w"&gt;    &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;example.tfplan&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Anything beginning with the &lt;code&gt;+&lt;/code&gt; means Terraform will create this resource for us. In the output above, it's &lt;code&gt;+ create&lt;/code&gt; which means the resource doesn't exist yet and Terraform will perform &lt;code&gt;create&lt;/code&gt; operation on the resource.&lt;/p&gt;
&lt;p&gt;Now, apply the plan using command: &lt;code&gt;terraform apply s3.tfplan&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once applied, following output will be seen:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$ terraform apply example.tfplan
aws_s3_bucket.Terraform-bucket-2021: Creating...
aws_s3_bucket.Terraform-bucket-2021: Creation complete after 5s [id=Terraform-bucket-2021]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

The state of your infrastructure has been saved to the path
below. This state is required to modify and destroy your
infrastructure, so keep it safe. To inspect the complete state
use the &lt;span class="sb"&gt;`terraform show`&lt;/span&gt; command.

State path: Terraform.tfstate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It means that the s3 bucket has been created.&lt;/p&gt;
&lt;p&gt;Verify if the bucket exist using &lt;code&gt;aws s3 ls&lt;/code&gt; command&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$&lt;span class="w"&gt; &lt;/span&gt;aws&lt;span class="w"&gt; &lt;/span&gt;s3&lt;span class="w"&gt; &lt;/span&gt;ls
&lt;span class="m"&gt;2021&lt;/span&gt;-01-16&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;19&lt;/span&gt;:42:52&lt;span class="w"&gt; &lt;/span&gt;Terraform-bucket-2021
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Bucket is successfully created 🎉&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: In real world, you ought to share the plan with your colleagues and there's an agreement between collegues before applying it.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;3.3 Terraform Outputs&lt;/h2&gt;
&lt;p&gt;When we don't define some value (bucket name for example), Terraform will create the bucket name for us, and we can know the bucket details using Terraform outputs.&lt;/p&gt;
&lt;p&gt;In above case, let's output the bucket information of &lt;code&gt;terraform-bucket-2021&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To do that we need to create a output block&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kr"&gt;resource&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_s3_bucket&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;Terraform-bucket-2021&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;bucket&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Terraform-bucket-2021&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;output&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;bucket_info&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;  # &amp;lt;syntax&amp;gt; value = resource_type[.]label_name&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;aws_s3_bucket.Terraform-bucket-2021&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, plan it &lt;code&gt;terraform plan -out s3.tfplan&lt;/code&gt; . Here, the previous filename &lt;code&gt;s3.tfplan&lt;/code&gt; will be replaced with the new fresh file.&lt;/p&gt;
&lt;p&gt;Not apply the &lt;code&gt;s3.tfplan&lt;/code&gt; using command &lt;code&gt;terraform apply s3.tfplan&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You'll see following output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Apply&lt;span class="w"&gt; &lt;/span&gt;complete!&lt;span class="w"&gt; &lt;/span&gt;Resources:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;added,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;changed,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;destroyed.

Outputs:

&lt;span class="nv"&gt;bucket_info&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;acceleration_status&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;acl&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;private&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;arn&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;arn:aws:s3:::Terraform-bucket-2021&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bucket&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Terraform-bucket-2021&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bucket_domain_name&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Terraform-bucket-2021.s3.amazonaws.com&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bucket_prefix&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tostring&lt;span class="o"&gt;(&lt;/span&gt;null&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bucket_regional_domain_name&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Terraform-bucket-2021.s3.ap-northeast-1.amazonaws.com&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cors_rule&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tolist&lt;span class="o"&gt;([])&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;force_destroy&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;grant&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;toset&lt;span class="o"&gt;([])&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hosted_zone_id&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Z2M4EHUR26P7ZW&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Terraform-bucket-2021&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lifecycle_rule&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tolist&lt;span class="o"&gt;([])&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;logging&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;toset&lt;span class="o"&gt;([])&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;object_lock_configuration&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tolist&lt;span class="o"&gt;([])&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;policy&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tostring&lt;span class="o"&gt;(&lt;/span&gt;null&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;region&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ap-northeast-1&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;replication_configuration&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tolist&lt;span class="o"&gt;([])&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;request_payer&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BucketOwner&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;server_side_encryption_configuration&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tolist&lt;span class="o"&gt;([])&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tomap&lt;span class="o"&gt;({})&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;versioning&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tolist&lt;span class="o"&gt;([&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;enabled&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mfa_delete&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;website&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tolist&lt;span class="o"&gt;([])&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;website_domain&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tostring&lt;span class="o"&gt;(&lt;/span&gt;null&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;website_endpoint&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tostring&lt;span class="o"&gt;(&lt;/span&gt;null&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As you can see &lt;code&gt;Apply complete! Resources: 0 added, 0 changed, 0 destroyed.&lt;/code&gt; because no resources were created even though our &lt;code&gt;.tf&lt;/code&gt; file has resource block.&lt;/p&gt;
&lt;p&gt;You can also get the output using &lt;code&gt;terraform output&lt;/code&gt; command like this: &lt;code&gt;terraform output bucket_info&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;List output of availability zones of region configured in your AWS configuration&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First, create the data block because regions are not managed by Terraform and it's a data. And the output block. Since the output is from the data block, we define value as: &lt;code&gt;data.&amp;lt;type&amp;gt;.&amp;lt;label&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kr"&gt;data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_availability_zones&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;available&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;available&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;output&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;aws_availability_zones&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;data.aws_availability_zones.available&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, plan it &lt;code&gt;terraform plan -out s3.tfplan&lt;/code&gt;  and apply &lt;code&gt;terraform apply s3.tfplan&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You'll see following output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Apply&lt;span class="w"&gt; &lt;/span&gt;complete!&lt;span class="w"&gt; &lt;/span&gt;Resources:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;added,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;changed,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;destroyed.

Outputs:

&lt;span class="nv"&gt;aws_availability_zones&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;all_availability_zones&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tobool&lt;span class="o"&gt;(&lt;/span&gt;null&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;blacklisted_names&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;toset&lt;span class="o"&gt;(&lt;/span&gt;null&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/*&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;string&lt;span class="w"&gt; &lt;/span&gt;*/
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;blacklisted_zone_ids&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;toset&lt;span class="o"&gt;(&lt;/span&gt;null&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/*&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;string&lt;span class="w"&gt; &lt;/span&gt;*/
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;exclude_names&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;toset&lt;span class="o"&gt;(&lt;/span&gt;null&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/*&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;string&lt;span class="w"&gt; &lt;/span&gt;*/
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;exclude_zone_ids&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;toset&lt;span class="o"&gt;(&lt;/span&gt;null&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/*&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;string&lt;span class="w"&gt; &lt;/span&gt;*/
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;filter&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;toset&lt;span class="o"&gt;(&lt;/span&gt;null&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/*&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;object&lt;span class="w"&gt; &lt;/span&gt;*/
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;group_names&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;toset&lt;span class="o"&gt;([&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ap-northeast-1&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2021-01-16 10:53:54.916848 +0000 UTC&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;names&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tolist&lt;span class="o"&gt;([&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ap-northeast-1a&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ap-northeast-1c&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ap-northeast-1d&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;state&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;available&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zone_ids&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tolist&lt;span class="o"&gt;([&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;apne1-az4&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;apne1-az1&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;apne1-az2&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: The output of AZ's can be used later on if we want to provision EC2 instances in multiple regions. We can use this output to do it so.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;3.4 Interpolation in HCL&lt;/h2&gt;
&lt;p&gt;Interpolation is just the means of concatenating different values to create one value. In case of S3 bucket the value of S3 bucket has to be globally unique. Hence, inorder to create a bucket with unique name, we can use interpolation.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Create aws bucket which name has the &lt;/strong&gt;&lt;strong&gt;&lt;code&gt;accountID&lt;/code&gt;&lt;/strong&gt;&lt;strong&gt; in it.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kr"&gt;data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_caller_identity&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;current&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="kr"&gt;resource&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_s3_bucket&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;bucket2&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;bucket&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${data.aws_caller_identity.current.account_id}-bucket2&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here &lt;code&gt;data.aws_caller_identity.current.account_id&lt;/code&gt; is interpolated which is &lt;code&gt;account_id + "-bucket2"&lt;/code&gt; got from the data block &lt;code&gt;aws_caller_identity&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;3.5 Dependencies in Terraform&lt;/h2&gt;
&lt;p&gt;Terraform has the concept of &lt;code&gt;implicit&lt;/code&gt; and &lt;code&gt;explicit&lt;/code&gt; dependencies.&lt;/p&gt;
&lt;p&gt;Whe Terraform processes the HCL configs, it evaluates the dependency graph, and it'll create dependencies before it creates the dependent resource. If there is not any dependencies, Terraform will create resource in parallel which will give performance boost.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;p&gt;Implicit dependency resolve when the dependent resource already exists.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kr"&gt;resource&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_s3_bucket&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;bucket3&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;bucket&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${data.aws_caller_identity.current.account_id}-bucket3&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;tags&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;    # I already have bucket2 available so this is implicit&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;dependency&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;aws_s3_bucket.bucket2.arn&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Explicit dependency when the dependent resource does not exist yet, and we need to wait for it to be created first. (analogy depends&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kr"&gt;resource&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_s3_bucket&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;bucket4&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;bucket&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${data.aws_caller_identity.current.account_id}-bucket4&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;  # Explicit&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;aws_s3_bucket.bucket3&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To see the dependencies, generate the &lt;code&gt;dot&lt;/code&gt; file using &lt;code&gt;terraform graph &amp;gt; graph.dot&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And paste the content in online tool &lt;a href="https://dreampuf.github.io/GraphvizOnline/"&gt;https://dreampuf.github.io/GraphvizOnline/&lt;/a&gt; to see the output.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;terraform graph&lt;/code&gt; command is only used for debugging purpose.&lt;/p&gt;
&lt;h2&gt;3.6 Variables and Locals&lt;/h2&gt;
&lt;p&gt;Variables are ways to get input to the Terraform config&lt;/p&gt;
&lt;p&gt;Ways to provide variables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using command line while applying&lt;/li&gt;
&lt;li&gt;Specify them in files such as &lt;code&gt;.tfvars&lt;/code&gt; or &lt;code&gt;.auto.tfvars&lt;/code&gt; for complex data types&lt;/li&gt;
&lt;li&gt;Using environment variables but all the environment variable name should have prefix of &lt;code&gt;TF_VAR_&lt;/code&gt;
In Terraform config, we use &lt;code&gt;variable&lt;/code&gt; block to define expected variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Create a S3 bucket, but the bucket name should be provided by the user&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kr"&gt;variable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;bucket_name&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;

&lt;span class="c1"&gt;  # `default` is optional. If default is omitted, then value must be supplied&lt;/span&gt;
&lt;span class="c1"&gt;  # default = &amp;quot;My_Bucket1234&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;resource&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_s3_bucket&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;bucket5&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;bucket&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;var.bucket_name&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And when plan is executed, the bucket name is expected as an input value:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;plan&lt;span class="w"&gt; &lt;/span&gt;-out&lt;span class="w"&gt; &lt;/span&gt;var.tfplan
var.bucket_name
&lt;span class="w"&gt;  &lt;/span&gt;Enter&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;value:&lt;span class="w"&gt; &lt;/span&gt;MyPiBucket31415

An&lt;span class="w"&gt; &lt;/span&gt;execution&lt;span class="w"&gt; &lt;/span&gt;plan&lt;span class="w"&gt; &lt;/span&gt;has&lt;span class="w"&gt; &lt;/span&gt;been&lt;span class="w"&gt; &lt;/span&gt;generated&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;shown&lt;span class="w"&gt; &lt;/span&gt;below.
Resource&lt;span class="w"&gt; &lt;/span&gt;actions&lt;span class="w"&gt; &lt;/span&gt;are&lt;span class="w"&gt; &lt;/span&gt;indicated&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;following&lt;span class="w"&gt; &lt;/span&gt;symbols:
&lt;span class="w"&gt;  &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;create

Terraform&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;perform&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;following&lt;span class="w"&gt; &lt;/span&gt;actions:

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;# aws_s3_bucket.bucket5 will be created&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;resource&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;aws_s3_bucket&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bucket5&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;acceleration_status&lt;/span&gt;&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;acl&lt;/span&gt;&lt;span class="w"&gt;                         &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;private&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;arn&lt;/span&gt;&lt;span class="w"&gt;                         &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bucket&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MyPiBucket31415&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bucket_domain_name&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;bucket_regional_domain_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;force_destroy&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;hosted_zone_id&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="w"&gt;                          &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;region&lt;/span&gt;&lt;span class="w"&gt;                      &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;request_payer&lt;/span&gt;&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;website_domain&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;website_endpoint&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="w"&gt;      &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;versioning&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;enabled&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;+&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;mfa_delete&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;after&lt;span class="w"&gt; &lt;/span&gt;apply&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;

Plan:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;add,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;change,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;destroy.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Local values&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Local values make Terraform configs more readable.&lt;/p&gt;
&lt;p&gt;If we want to use same value multiple times in the code, it's better to save it as a local value.&lt;/p&gt;
&lt;p&gt;We can have multiple locals, but the names should be unique because names are global.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;locals&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;aws_account&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${data.aws_caller_identity.current.account_id}-${lower(data.aws_caller_identity.current.user_id)}&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;resource&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_s3_bucket&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;bucket6&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;bucket&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${local.aws_account}-bucket6&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Here the
&lt;code&gt;lower()&lt;/code&gt;
 is a Terraform function. See more here:
&lt;a href="https://www.Terraform.io/docs/configuration/functions.html"&gt;https://www.Terraform.io/docs/configuration/functions.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;3.7 Conditionals and the Count property&lt;/h2&gt;
&lt;p&gt;Count is the meta attribute of Terraform&lt;/p&gt;
&lt;p&gt;Count means instead of creating 1 resource, you can define &lt;code&gt;n&lt;/code&gt; number of count to replicate the same resource.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Create 2 buckets&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kr"&gt;resource&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_s3_bucket&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;bucketX&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;bucket&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${local.aws_account}-bucket${count.index+7}&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Q. What happens when &lt;code&gt;count=0&lt;/code&gt; ?&lt;/p&gt;
&lt;p&gt;Terraform will destroy all resource if created or not create anything if it's not created yet.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We can also replicate resources using &lt;/strong&gt;&lt;strong&gt;&lt;code&gt;for_each&lt;/code&gt;&lt;/strong&gt;**  **&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;locals&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;buckets&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;bucket101&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mybucket101&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;bucket102&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mybucket102&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;resource&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_s3_bucket&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;bucketIterator&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;for_each&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;local.buckets&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;bucket&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${local.aws_account}-${each.value}&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;output&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;bucketIterator&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;aws_s3_bucket.bucketIterator&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can also define list instead of map:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;locals&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;buckets&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mybucket101&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mybucket102&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;resource&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_s3_bucket&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;bucketIterator&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;  # Since buckets is a list, we need to convert to set using toset()&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;for_each&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;toset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;local.buckets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;  # Here we can use either .key or .value&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;bucket&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${local.aws_account}-${each.key}&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;output&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;bucketIterator&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;aws_s3_bucket.bucketIterator&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;count&lt;/code&gt; vs &lt;code&gt;for_each&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;count&lt;/code&gt; is generally used for toggle switch when in development phase&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;for_each&lt;/code&gt; is more powerful, as we can use map in &lt;code&gt;for_each&lt;/code&gt; hence, better to use &lt;code&gt;for_each&lt;/code&gt; in prod&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3.8 Data types and operators&lt;/h2&gt;
&lt;p&gt;REF: &lt;a href="https://www.Terraform.io/docs/configuration/expressions/types.html"&gt;https://www.Terraform.io/docs/configuration/expressions/types.html&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;locals&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;a_string&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;This is a String&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;a_number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;3.1415&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;a_boolean&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;a_list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;element1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;a_map&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;nums&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;is_active&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;configs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="na"&gt;instance_type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;t2.micro&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="na"&gt;vpc_enabled&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;  # Operators&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;operators&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="err"&gt;+&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="err"&gt;/&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;  # Logical&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;f&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;true&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="no"&gt;false&lt;/span&gt;

&lt;span class="c1"&gt;  # Comparison&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;gt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;lt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;eq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;neq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Example:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Terraform config to create &lt;/strong&gt;&lt;strong&gt;&lt;code&gt;n&lt;/code&gt;&lt;/strong&gt;&lt;strong&gt; number of buckets where &lt;/strong&gt;&lt;strong&gt;&lt;code&gt;n&lt;/code&gt;&lt;/strong&gt;&lt;strong&gt; not more than &lt;/strong&gt;&lt;strong&gt;&lt;code&gt;5&lt;/code&gt;&lt;/strong&gt;** **&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kr"&gt;variable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;bucket_count&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;number&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_caller_identity&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;current&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="nb"&gt;locals&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;min_bucket_count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;
&lt;span class="c1"&gt;  # Conditional operators similar to ternary operator&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;num_buckets&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;var.bucket_count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;local.min_bucket_count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;var.bucket_count&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;aws_account&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${data.aws_caller_identity.current.account_id}-${lower(data.aws_caller_identity.current.user_id)}&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;resource&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;&amp;quot;aws_s3_bucket&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;buckets&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;local.num_buckets&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;bucket&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${local.aws_account}-buckets${count.index+7}&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;3.9 Functions&lt;/h2&gt;
&lt;p&gt;REF: &lt;a href="https://www.Terraform.io/docs/configuration/functions.html"&gt;https[://www.Terraform.io/docs/configuration/functions.html](https://www.Terraform.io/docs/configuration/functions.html)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;locals&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;ts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;current_month&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;formatdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MMMM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;local.ts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;tomorrow&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;formatdate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MMMM&amp;quot;, timeadd(local.ts, &amp;quot;24h&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;upper&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;lowercase&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;lower&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;UPPERCASE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;output&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;func&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;${local.ts} ${local.current_month} ${local.tomorrow} ${local.upper} ${local.lower}&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Apply&lt;span class="w"&gt; &lt;/span&gt;complete!&lt;span class="w"&gt; &lt;/span&gt;Resources:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;added,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;changed,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;destroyed.

Outputs:

&lt;span class="nv"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;2021-01-16T15:36:41Z January January LOWERCASE uppercase&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;3.10 Iterations in collections&lt;/h2&gt;
&lt;p&gt;HCL uses &lt;code&gt;for&lt;/code&gt; syntax dfor iterating over list values&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;locals&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;my_list&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;one&amp;quot;, &amp;quot;two&amp;quot;, &amp;quot;three&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;upper_list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;local.my_list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;upper_map&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;local.my_list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;item&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;  # Filtering&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;n&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;evens&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;local.n&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="na"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;output&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;my_list&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;local.my_list&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kr"&gt;output&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;upper_list&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;local.upper_list&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;output&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;upper_map&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;local.upper_map&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;output&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;evens&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;local.evens&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Output after apply:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Apply&lt;span class="w"&gt; &lt;/span&gt;complete!&lt;span class="w"&gt; &lt;/span&gt;Resources:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;added,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;changed,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;destroyed.

Outputs:

&lt;span class="nv"&gt;evens&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;,
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;,
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;,
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;,
&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;my_list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;one&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;two&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;three&amp;quot;&lt;/span&gt;,
&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;upper_list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ONE&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TWO&amp;quot;&lt;/span&gt;,
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;THREE&amp;quot;&lt;/span&gt;,
&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;upper_map&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;one&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ONE&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;three&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;THREE&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;two&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;TWO&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;3.11 Directives and heredocs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;heredocs&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;is a multiline string that is used to create an inline JSON documents&lt;/li&gt;
&lt;li&gt;They are used in outputs, variables description and inline documents
Example:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;locals&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;nums&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kr"&gt;output&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;heredocs&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;  # EOT means EOF&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt;&lt;span class="dl"&gt;EOT&lt;/span&gt;
&lt;span class="sh"&gt;    This is the `heredoc`.&lt;/span&gt;
&lt;span class="sh"&gt;    This is multiline String.&lt;/span&gt;
&lt;span class="sh"&gt;    Used for writing documentations.&lt;/span&gt;
&lt;span class="dl"&gt;  EOT&lt;/span&gt;
&lt;span class="c1"&gt;  # Dont forget EOT at the end&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;output&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;directive&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt;&lt;span class="dl"&gt;EOT&lt;/span&gt;
&lt;span class="sh"&gt;    We can use directive in heredoc.&lt;/span&gt;
&lt;span class="sh"&gt;    %{if local.count == 0}&lt;/span&gt;
&lt;span class="sh"&gt;    The count is 0, destroying everything...&lt;/span&gt;
&lt;span class="sh"&gt;    %{else}&lt;/span&gt;
&lt;span class="sh"&gt;    The count is ${local.count}&lt;/span&gt;
&lt;span class="sh"&gt;    %{endif}&lt;/span&gt;
&lt;span class="dl"&gt;  EOT&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;output&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;iterated-directive&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt;&lt;span class="dl"&gt;EOT&lt;/span&gt;
&lt;span class="sh"&gt;    Directive can also be iterated.&lt;/span&gt;
&lt;span class="sh"&gt;    %{for num in local.nums}&lt;/span&gt;
&lt;span class="sh"&gt;    ${num}&lt;/span&gt;
&lt;span class="sh"&gt;    %{endfor}&lt;/span&gt;
&lt;span class="dl"&gt;  EOT&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Output after apply:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Apply&lt;span class="w"&gt; &lt;/span&gt;complete!&lt;span class="w"&gt; &lt;/span&gt;Resources:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;added,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;changed,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;destroyed.

Outputs:

&lt;span class="nv"&gt;directive&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;lt;&amp;lt;EOT&lt;/span&gt;
&lt;span class="s"&gt;We can use directive in heredoc.&lt;/span&gt;

&lt;span class="s"&gt;The count is 0, destroying everything...&lt;/span&gt;


&lt;span class="s"&gt;EOT&lt;/span&gt;
&lt;span class="nv"&gt;heredocs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;lt;&amp;lt;EOT&lt;/span&gt;
&lt;span class="s"&gt;This is the `heredoc`.&lt;/span&gt;
&lt;span class="s"&gt;This is multiline String.&lt;/span&gt;
&lt;span class="s"&gt;Used for writing documentations.&lt;/span&gt;

&lt;span class="s"&gt;EOT&lt;/span&gt;
iterated-directive&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;lt;&amp;lt;EOT&lt;/span&gt;
&lt;span class="s"&gt;Directive can also be iterated.&lt;/span&gt;

&lt;span class="s"&gt;1&lt;/span&gt;

&lt;span class="s"&gt;2&lt;/span&gt;

&lt;span class="s"&gt;3&lt;/span&gt;


&lt;span class="s"&gt;EOT&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;3.12 Clean up&lt;/h2&gt;
&lt;p&gt;Since we created multiple buckets and all, it's time to clean up.&lt;/p&gt;
&lt;p&gt;Even though the buckets don't cost any, it's wise to clean up since we're just playing with Terraform in development mode.&lt;/p&gt;
&lt;p&gt;First look for states that's tracked by Terraform using &lt;code&gt;terraform state list&lt;/code&gt; . If it shows bunch of outputs of your bucket, execute &lt;code&gt;terraform destroy&lt;/code&gt; which will destroy all resources that were created.&lt;/p&gt;
&lt;h1&gt;Chapter 4: Code Re-Use for applying DRY&lt;/h1&gt;
&lt;h2&gt;4.1 Understanding Terraform Modules&lt;/h2&gt;
&lt;p&gt;What is a module in Terraform?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All Terraform is in a module. The top level module is called the Root module&lt;/li&gt;
&lt;li&gt;Modules are just a directory that contains Terraform file, and they can be nested&lt;/li&gt;
&lt;li&gt;Modules can be imported which are already available&lt;/li&gt;
&lt;li&gt;Modules written by others can be get here &lt;a href="https://registry.Terraform.io"&gt;https://registry.Terraform.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Module helps in implementing DRY principle&lt;/li&gt;
&lt;li&gt;Module naming convention (if you want to publish to Terraform registry)&lt;ul&gt;
&lt;li&gt;&lt;code&gt;terraform-&amp;lt;PROVIDER&amp;gt;-&amp;lt;NAME&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;NAME&amp;gt;&lt;/code&gt; can contain hyphens
Module layout&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;├──&lt;span class="w"&gt; &lt;/span&gt;Terraform-aws-s3
│&lt;span class="w"&gt;   &lt;/span&gt;├──&lt;span class="w"&gt; &lt;/span&gt;README.md
│&lt;span class="w"&gt;   &lt;/span&gt;├──&lt;span class="w"&gt; &lt;/span&gt;datas.tf
│&lt;span class="w"&gt;   &lt;/span&gt;├──&lt;span class="w"&gt; &lt;/span&gt;locals.tf
│&lt;span class="w"&gt;   &lt;/span&gt;├──&lt;span class="w"&gt; &lt;/span&gt;main.tf
│&lt;span class="w"&gt;   &lt;/span&gt;├──&lt;span class="w"&gt; &lt;/span&gt;outputs.tf
│&lt;span class="w"&gt;   &lt;/span&gt;├──&lt;span class="w"&gt; &lt;/span&gt;variables.tf
│&lt;span class="w"&gt;   &lt;/span&gt;└──&lt;span class="w"&gt; &lt;/span&gt;versions.tf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can use &lt;a href="https://github.com/QuiNovas/cookiecutter-Terraform-module"&gt;https://github.com/QuiNovas/cookiecutter-Terraform-module&lt;/a&gt; to automate the process of creating these files&lt;/p&gt;
&lt;p&gt;To use module&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Module located in local filesystem&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;local-module&amp;quot;&lt;/span&gt; {
    &lt;span class="nb"&gt;source&lt;/span&gt; = &lt;span class="s"&gt;&amp;quot;/path/to/module&amp;quot;&lt;/span&gt;
}

&lt;span class="c1"&gt;# Module which is published&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;published-module&amp;quot;&lt;/span&gt; {
    &lt;span class="nb"&gt;source&lt;/span&gt; = &lt;span class="s"&gt;&amp;quot;rojopolis/Terraform-aws-lambda-python-archive&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;version&lt;/span&gt; = &lt;span class="s"&gt;&amp;quot;1.2.3&amp;quot;&lt;/span&gt;
}

&lt;span class="c1"&gt;# Module which is in GitHub&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;github-module&amp;quot;&lt;/span&gt; {
    &lt;span class="nb"&gt;source&lt;/span&gt; = &lt;span class="s"&gt;&amp;quot;https://github.com/rojopolis/Terraform-aws-lambda-python-archive&amp;quot;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Play with &lt;a href="https://github.com/rojopolis/Terraform-aws-lambda-python-archive/"&gt;https://github.com/rojopolis/Terraform-aws-lambda-python-archive/&lt;/a&gt; to know about modules.&lt;/p&gt;
&lt;h2&gt;4.2 Distributing modules&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Name the module properly &lt;code&gt;terraform-&amp;lt;PROVIDER&amp;gt;-&amp;lt;NAME&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Should be in public repository in GitHub.&lt;/li&gt;
&lt;li&gt;Should have license and examples&lt;/li&gt;
&lt;li&gt;Repo should be released with a tag&lt;/li&gt;
&lt;li&gt;Sign-in to &lt;a href="https://registry.Terraform.io"&gt;https://registry.Terraform.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Select the repo which is named correctly&lt;/li&gt;
&lt;li&gt;Done 🎉&lt;/li&gt;
&lt;li&gt;Profit 🏦&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Chapter 5: Collaboration with Terraform&lt;/h1&gt;
&lt;h2&gt;5.1 Terraform backends&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Backend is a shared storage medium that stores state files&lt;/li&gt;
&lt;li&gt;Backends officially supports blocking&lt;/li&gt;
&lt;li&gt;Blocking is required inorder to prevent multiple user's updating resources at the same time&lt;/li&gt;
&lt;li&gt;Most of the providers support blocking&lt;/li&gt;
&lt;li&gt;We can use S3 as a backend provider&lt;/li&gt;
&lt;li&gt;Backend provider is not in Terraform
Example:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;terraform&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="na"&gt;required_version&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;gt;=0.14.0&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kr"&gt;backend&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;s3&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;    # bucket should already exist&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;bucket&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;my-Terraform-backend&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sagar-Terraform-resources&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ap-northeast-1&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;    # dynamo db table also should already exist&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;dynamodb_table&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sagar-Terraform-lock&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You must &lt;code&gt;init&lt;/code&gt; again inorder to change the backend.&lt;/p&gt;
&lt;p&gt;Locks are stored in dynamodb table. Whoever acquires the lock first has the precedence of getting the resource.&lt;/p&gt;
&lt;p&gt;We can also have remote backend&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kr"&gt;backend&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;&amp;quot;remote&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;hostname&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;app.Terraform.io&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="na"&gt;organization&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;beBit&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;workspace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hello-Terraform&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If we change the S3 backend to remote backend, we need to do &lt;code&gt;terraform init&lt;/code&gt; again which will ask us if we'd like to move the state file from S3 to the remote backend.&lt;/p&gt;
&lt;h2&gt;5.2 Terraform workspaces&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Workspace helps us to create different environment with the same sets of Terraform configurations.&lt;/li&gt;
&lt;li&gt;You can view the list of your Terraform workspaces using the command &lt;code&gt;terraform workspace list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The default workspace name is called &lt;code&gt;default&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You can not delete the default workspace&lt;/li&gt;
&lt;li&gt;Execute &lt;code&gt;terraform workspace --help&lt;/code&gt; to view the workspaces sub-commands&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Create a new workspace:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;workspace&lt;span class="w"&gt; &lt;/span&gt;new&lt;span class="w"&gt; &lt;/span&gt;staging
Created&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;switched&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;workspace&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;staging&amp;quot;&lt;/span&gt;!

You&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;re&lt;span class="w"&gt; &lt;/span&gt;now&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;new,&lt;span class="w"&gt; &lt;/span&gt;empty&lt;span class="w"&gt; &lt;/span&gt;workspace.&lt;span class="w"&gt; &lt;/span&gt;Workspaces&lt;span class="w"&gt; &lt;/span&gt;isolate&lt;span class="w"&gt; &lt;/span&gt;their&lt;span class="w"&gt; &lt;/span&gt;state,
so&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;run&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;terraform plan&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Terraform&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;see&lt;span class="w"&gt; &lt;/span&gt;any&lt;span class="w"&gt; &lt;/span&gt;existing&lt;span class="w"&gt; &lt;/span&gt;state
&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;configuration.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;List the workspaces:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;workspace&lt;span class="w"&gt; &lt;/span&gt;list
&lt;span class="w"&gt;  &lt;/span&gt;default
*&lt;span class="w"&gt; &lt;/span&gt;staging
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where the &lt;code&gt;*&lt;/code&gt; is the current one, and we can also use &lt;code&gt;terraform workspace show&lt;/code&gt; to get the current workspace.&lt;/p&gt;
&lt;p&gt;Switch the workspace back to &lt;code&gt;default&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;workspace&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;default&lt;span class="w"&gt;                                                                                                                                                                                              &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;↵
Switched&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;workspace&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;default&amp;quot;&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Deleting the workspace:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;╰─$&lt;span class="w"&gt; &lt;/span&gt;terraform&lt;span class="w"&gt; &lt;/span&gt;workspace&lt;span class="w"&gt; &lt;/span&gt;delete&lt;span class="w"&gt; &lt;/span&gt;staging
Deleted&lt;span class="w"&gt; &lt;/span&gt;workspace&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;staging&amp;quot;&lt;/span&gt;!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: The workspace should be clean i.e. destroyed before deleting it.
Learn more here: &lt;a href="https://www.Terraform.io/docs/state/workspaces.html"&gt;https://www.Terraform.io/docs/state/workspaces.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="misc"></category><category term="Terraform"></category><category term="IAC"></category><category term="Terraform Cloud"></category></entry><entry><title>Instrument your Java Code with Micrometer, Prometheus, and Grafana.</title><link href="https://sagargiri.com/java-instrumentation-with-micrometer" rel="alternate"></link><published>2020-12-31T15:33:00+09:00</published><updated>2020-12-31T15:33:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2020-12-31:/java-instrumentation-with-micrometer</id><summary type="html">&lt;p&gt;In this blog tutorial, let's instrument your Java SE code with Prometheus using Micrometer&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Micrometer provides a simple facade over the instrumentation clients for the most popular monitoring systems, allowing you to instrument your JVM-based application code without vendor lock-in. Think SLF4J, but for metrics. - https://micrometer.io/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm assuming you have some Java code, and you'd like to instrument it (measure how well it's performing, what is the heap space in current state, are there any exceptions. etc)&lt;/p&gt;
&lt;p&gt;With this 3 steps, you'll be up and running in no time.&lt;/p&gt;
&lt;h1&gt;Step 1: Setup the development environment&lt;/h1&gt;
&lt;p&gt;Here I am using &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; and &lt;a href="https://docs.docker.com/compose/"&gt;Docker compose&lt;/a&gt; to set up the environment for simplicity purposes. If you do not have these in your machine, I highly recommend you to install it so that you can follow along.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The full source code is available here: https://github.com/girisagar46/prome-java&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;First and foremost, I will set &lt;a href="https://prometheus.io/"&gt;Prometheus&lt;/a&gt; and &lt;a href="https://grafana.com/"&gt;Grafana&lt;/a&gt; in my &lt;code&gt;docker-compose.yml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;docker-compose.yml&lt;/code&gt; file looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3.8&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;prometheus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prom&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;prometheus&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;container_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;prometheus&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;monitoring&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;prometheus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yml&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;prometheus&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;prometheus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yml&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;prometheus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--config.file=/etc/prometheus/prometheus.yml&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--storage.tsdb.path=/data&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;9090:9090&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;restart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;always&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;datasources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;datasources&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dashboards&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;grafana&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dashboard&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;3000:3000&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;restart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;always&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GF_SECURITY_ADMIN_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GF_SECURITY_ADMIN_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GF_USERS_ALLOW_SIGN_UP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Since we're mounting &lt;code&gt;/monitoring/prometheus.yml&lt;/code&gt; into prometheus service, let's create the directory &lt;code&gt;monitoring&lt;/code&gt; and create a file &lt;code&gt;prometheus.yml&lt;/code&gt; inside the &lt;code&gt;monitoring&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;The contents of the &lt;code&gt;prometheus.yml&lt;/code&gt; looks like this:&lt;/p&gt;
&lt;script src="https://gist.github.com/girisagar46/3f2327a403eb37f6b5cac0bf07aa592a.js"&gt;&lt;/script&gt;

&lt;p&gt;Once the &lt;code&gt;docker-compose.yml&lt;/code&gt; is ready, start the services with &lt;code&gt;docker-compose up&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And when the services are up, visit &lt;a href="http://localhost:9090/"&gt;http://localhost:9090/&lt;/a&gt;. You'll see something like this:
&lt;img alt="Prometheus UI" src="../images/java-micrometer/prometheus-ui.png"&gt;&lt;/p&gt;
&lt;p&gt;And if you navigate to &lt;a href="http://localhost:9090/targets"&gt;http://localhost:9090/targets&lt;/a&gt; (&lt;code&gt;Status&lt;/code&gt; dropdown -&amp;gt; &lt;code&gt;Targets&lt;/code&gt;), you'll see something like this:
&lt;img alt="Prometheus UI" src="../images/java-micrometer/prometheus-targets.png"&gt;&lt;/p&gt;
&lt;p&gt;As you can see there's an error message that says:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;Get&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://host.docker.internal:8080/metrics&amp;quot;&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;dial&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;tcp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;192&lt;/span&gt;.&lt;span class="mi"&gt;168&lt;/span&gt;.&lt;span class="mi"&gt;65&lt;/span&gt;.&lt;span class="mi"&gt;2&lt;/span&gt;:&lt;span class="mi"&gt;8080&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;connect&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;connection&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;refused&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;because our Java application is not running at the moment. We'll fix this a little letter.&lt;/p&gt;
&lt;p&gt;If you visit &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt;, you'll see the Grafana login page:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Grafana Login" src="../images/java-micrometer/grafana-login.png"&gt;&lt;/p&gt;
&lt;p&gt;Use the default username: &lt;code&gt;admin&lt;/code&gt; and password &lt;code&gt;admin&lt;/code&gt; to get inside the Grafana dashboard. When asked to change password, skip it as it's just a local development environment. Obviously in production, this has to be more sure by enabling the login by Gmail or any other OAUTH mechanism.&lt;/p&gt;
&lt;p&gt;Now you need to add Prometheus data source so that our Grafana can get the piece of the metrics we're exposing.
To add the datasource directly go to &lt;a href="http://localhost:3000/datasources"&gt;http://localhost:3000/datasources&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then click on &lt;strong&gt;Add data source&lt;/strong&gt; button and fill up the form as shown in the screenshot below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="grafana-datasource.png" src="../images/java-micrometer/grafana-datasource.png"&gt;&lt;/p&gt;
&lt;h1&gt;Step 2: Expose metrics from your Java application&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Create &lt;code&gt;MetricService&lt;/code&gt; class which will provide the singleton instance of &lt;code&gt;PrometheusMeterRegistry&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;script src="https://gist.github.com/girisagar46/9ffa46b7f251301576a7df9bd4e59c00.js"&gt;&lt;/script&gt;

&lt;ol&gt;
&lt;li&gt;Create HTTP metric endpoint where prometheus can go to scrape the metrics. As you can see in the &lt;code&gt;prometheus.yml&lt;/code&gt; file we've defined &lt;code&gt;metrics_path: "/metrics"&lt;/code&gt;. So, let's create HTTP endpoint. I'll add this in the &lt;code&gt;Actuator.java&lt;/code&gt; file:&lt;/li&gt;
&lt;/ol&gt;
&lt;script src="https://gist.github.com/girisagar46/2684a5443274bf19890a5c5224e4e2fc.js"&gt;&lt;/script&gt;

&lt;ol&gt;
&lt;li&gt;Create the Main class (the entry point to our application)&lt;/li&gt;
&lt;/ol&gt;
&lt;script src="https://gist.github.com/girisagar46/8a79f2433a238ab60dad71aec5235c12.js"&gt;&lt;/script&gt;

&lt;p&gt;At this point, the source code directory looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="project-structure.png" src="../images/java-micrometer/project-structure.png"&gt;&lt;/p&gt;
&lt;p&gt;Now if you run your application (Execute Main.java) and go to &lt;a href="http://localhost:8080/metrics"&gt;http://localhost:8080/metrics&lt;/a&gt;, you'll see following output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;...
&lt;span class="gh"&gt;#&lt;/span&gt; HELP jvm_gc_live_data_size_bytes Size of long-lived heap memory pool after reclamation
&lt;span class="gh"&gt;#&lt;/span&gt; TYPE jvm_gc_live_data_size_bytes gauge
jvm_gc_live_data_size_bytes 0.0
&lt;span class="gh"&gt;#&lt;/span&gt; HELP jvm_buffer_count_buffers An estimate of the number of buffers in the pool
&lt;span class="gh"&gt;#&lt;/span&gt; TYPE jvm_buffer_count_buffers gauge
jvm_buffer_count_buffers{id=&amp;quot;mapped - &amp;#39;non-volatile memory&amp;#39;&amp;quot;,} 0.0
jvm_buffer_count_buffers{id=&amp;quot;mapped&amp;quot;,} 0.0
jvm_buffer_count_buffers{id=&amp;quot;direct&amp;quot;,} 2.0
&lt;span class="gh"&gt;#&lt;/span&gt; HELP jvm_memory_used_bytes The amount of used memory
&lt;span class="gh"&gt;#&lt;/span&gt; TYPE jvm_memory_used_bytes gauge
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Which means your Java application is exposing metrics for the Prometheus to grab.&lt;/p&gt;
&lt;h1&gt;Step 3: Visualize the exposed metrics in Grafana&lt;/h1&gt;
&lt;p&gt;Since, we're only exposing JVM metrics for now let's see those exposed metrics on Grafana through a sweet dashboard.&lt;/p&gt;
&lt;p&gt;Let's import the &lt;a href="https://grafana.com/grafana/dashboards/4701"&gt;Micrometer grafana official dashboard&lt;/a&gt;. The ID of the grafana dashboard is &lt;code&gt;4701&lt;/code&gt;. So, let's import the dashboard to Grafana.&lt;/p&gt;
&lt;p&gt;Click on the &lt;strong&gt;Import&lt;/strong&gt; button which is shown in the screenshot below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="dashboard-import.png" src="../images/java-micrometer/dashboard-import.png"&gt;&lt;/p&gt;
&lt;p&gt;Type &lt;code&gt;4701&lt;/code&gt; in the input field &lt;code&gt;Import via grafana.com&lt;/code&gt; and click &lt;strong&gt;Load&lt;/strong&gt; button.&lt;/p&gt;
&lt;p&gt;&lt;img alt="import-4701.png" src="../images/java-micrometer/import-4701.png"&gt;&lt;/p&gt;
&lt;p&gt;Once, you click load, you'll see this page. Follow the 3 steps shown in the screenshot.&lt;/p&gt;
&lt;p&gt;&lt;img alt="import-dashboard.png" src="../images/java-micrometer/import-dashboard.png"&gt;&lt;/p&gt;
&lt;p&gt;Now your dashboard is imported, change the date range to view recent data.&lt;/p&gt;
&lt;p&gt;&lt;img alt="dashboard-range.png" src="../images/java-micrometer/dashboard-range.png"&gt;&lt;/p&gt;
&lt;p&gt;Congratulations!! your dashboard is fully functional and ready to use.&lt;/p&gt;
&lt;p&gt;&lt;img alt="full-dashboard.png" src="../images/java-micrometer/full-dashboard.png"&gt;&lt;/p&gt;
&lt;p&gt;You can play with Prometheus and Grafana as much as you like because everything is running in local. Try creating some alerts, Prometheus rules, write some PROMQL and expose some other metrics with Micrometer.&lt;/p&gt;
&lt;p&gt;If you want to take this to production, you can do it in various ways. Using K8s, using 3rd party service, hosting your own, using AWS managed service, etc. There are plethora of options, and you can choose any depending on your cost and requirements.&lt;/p&gt;
&lt;h1&gt;Going further&lt;/h1&gt;
&lt;p&gt;Now the basic setup is done, the metrics world does not stop here. It's a vast ocean. Here are some further additional resources which will help you to go forward.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://micrometer.io/docs/concepts"&gt;https://micrometer.io/docs/concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://prometheus.io/docs/prometheus/latest/getting_started/"&gt;https://prometheus.io/docs/prometheus/latest/getting_started/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://prometheus.io/docs/prometheus/latest/querying/basics/"&gt;https://prometheus.io/docs/prometheus/latest/querying/basics/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hTjHuoWxsks"&gt;Video: PromQL for Mere Mortals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=nJMRmhbY5hY"&gt;Video: The 4 Types Of Prometheus Metrics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.robustperception.io/blog"&gt;https://www.robustperception.io/blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://grafana.com/tutorials/"&gt;https://grafana.com/tutorials/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/prometheus/client_java"&gt;https://github.com/prometheus/client_java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/PrometheusMonitoring"&gt;https://www.reddit.com/r/PrometheusMonitoring&lt;/a&gt; -&amp;gt; Reddit community&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/grafana"&gt;https://www.reddit.com/r/grafana&lt;/a&gt; -&amp;gt; Reddit community&lt;/li&gt;
&lt;li&gt;&lt;a href="https://slofile.com/slack/micrometer-metrics"&gt;https://slofile.com/slack/micrometer-metrics&lt;/a&gt; -&amp;gt; Official Slack channel for Micrometer (Join and ask any questions related to Prometheus, Grafana and Micrometer)&lt;/li&gt;
&lt;/ol&gt;</content><category term="tutorial"></category><category term="tutorial"></category><category term="java"></category><category term="micrometer"></category><category term="prometheus"></category></entry><entry><title>The Insides of Kubernetes and how it actually works.</title><link href="https://sagargiri.com/k8s-in-out" rel="alternate"></link><published>2019-09-06T14:30:00+09:00</published><updated>2019-09-06T14:30:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2019-09-06:/k8s-in-out</id><summary type="html">&lt;p&gt;In this article, you'll learn about the REST objects in kubernetes (pods, replication controller, deployments, service)&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;"It groups containers that make up an application into logical units for easy management and discovery. Kubernetes builds upon 15 years of experience of running production workloads at Google, combined with best-of-breed ideas and practices from the community." — Kubernetes, Production-Grade Container Orchestration&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;What is Kubernetes?&lt;/h3&gt;
&lt;p&gt;In a typical micro service architecture using k8s, we have these things:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Cover" src="../images/k8s/architecture.jpg"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In a simple term, k8s is composed of Nodes and Pods.&lt;/li&gt;
&lt;li&gt;Combination of nodes creates a cluster aka kubernetes cluster.&lt;/li&gt;
&lt;li&gt;You can consider nodes as a physical or virtual server.&lt;/li&gt;
&lt;li&gt;There are two kinds of nodes:&lt;ol&gt;
&lt;li&gt;Master node (Controls what's going on)&lt;/li&gt;
&lt;li&gt;Node aka Minions (That does the actual work)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Each node has pods.&lt;/li&gt;
&lt;li&gt;Each pods have one or more container running inside it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;In the birds eye view, Kubernetes architecture can be viewed as:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Birds-eye" src="../images/k8s/birds-eye.jpg"&gt;&lt;/p&gt;
&lt;h3&gt;Nodes:&lt;/h3&gt;
&lt;p&gt;A node is a worker machine in Kubernetes. Learn more &lt;a href="https://lmgtfy.com/?q=kubernetes+nodes"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There are two types of nodes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Master node&lt;/li&gt;
&lt;li&gt;Worker node&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Master Node&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;There can be one or more master node in a k8s cluster.&lt;/li&gt;
&lt;li&gt;Best practice is to make master node free of workloads so that master node can only look after cluster.&lt;/li&gt;
&lt;li&gt;You can think master node as a shepherd who who tends and rears sheep. (worker nodes)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;What's inside a master node?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Master Node" src="../images/k8s/master-node.jpg"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remember a Node is a machine. So the base layer is the hardware layer. It can be bare metal, a virtual server, EC2 instance or even your personal laptop (if you are in local environment)&lt;/li&gt;
&lt;li&gt;Then the layer after that is OS layer. And remember, K8s only works in Linux OS. Kubernetes is platform agnostic in terms of hardware lever, but it needs Linux OS to operate.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Components of Master node:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Scheduler:
Watches for new pods and assign work to that pod.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Controller:
This watches for changes in the cluster&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Key Value Store:
This is the persistent storage service. It uses &lt;a href="https://etcd.io/"&gt;etcd&lt;/a&gt; to maintain it's state. So in a master node, only this component is stateful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;API server: This exposes the REST API for developers and clients to interact with k8s cluster. Developers deal directly with api server via command line tool provided by kubernetes called &lt;code&gt;kubectl&lt;/code&gt;. API server can also be linked with authentication service to provide extra layer of security for k8s cluster.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Worker Node&lt;/h4&gt;
&lt;p&gt;Worker node (also used to be called as minion) are also a machine that does the actual work. For example, updating a shopping cart or authenticating a user in your web application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What's inside a worker node?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Worker Node" src="../images/k8s/worker-node.jpg"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Kubelet:
They are main k8s agent
They instantiate pod, register node with a cluster and operate on port 10255
Kubelet just report back to master node if a container dies.
The endpoint provied by kubelet are: &lt;code&gt;/spec&lt;/code&gt;, &lt;code&gt;/healtz&lt;/code&gt; , &lt;code&gt;/pods&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Container Engine:
They do container management (pulling image, running container)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Kube Proxy
Responsible for K8s networking
This makes sure that each pod get unique IP address for network communication
If more than 1 container is running inside a pod, then all pod share the same IP address but the port is different
This also does load balancing across all pods in a service (#service section)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Declarative model and Desired state&lt;/h3&gt;
&lt;p&gt;Kubernetes work in declarative model. Which basically means that we provide the APIServer (which is inside the master node) some specification to describe the desired state. The specification is written in JSON or YAML format.
Once we provide the specification &lt;strong&gt;declaration&lt;/strong&gt;, then it's the responsibility of Kubernetes to maintain the &lt;em&gt;desired&lt;/em&gt; state.&lt;/p&gt;
&lt;h4&gt;Declarative Model&lt;/h4&gt;
&lt;p&gt;We give manifest to do something. For example: At each time, there must be 5 containers running.&lt;/p&gt;
&lt;h4&gt;Desired State&lt;/h4&gt;
&lt;p&gt;This is done by k8s internally. For example: Since we declared to run 5 replicas, but at a particular instant of time, if only 4 are running (which don't match with declaration), then k8s kicks in and tries to maintain the desired state from the declaration manifest (written in YAML or JSON which is provided to master node)&lt;/p&gt;
&lt;h3&gt;Pods&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Pods are atomic unit of deployment in k8s world and they exists inside a node&lt;/li&gt;
&lt;li&gt;Containers always runs inside a pod&lt;/li&gt;
&lt;li&gt;Pods can have multiple containers (only in advanced cases, but ideally one)&lt;/li&gt;
&lt;li&gt;If two containers are running inside a same pod, then they share same memory space and volumes. This running more than one containers are useful if we want tightly coupled architecture.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Pod Multi" src="../images/k8s/pod-multi.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Here in above figure, these two containers share the same DB and also same file system and also the same IP address.&lt;/p&gt;
&lt;p&gt;In detail:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pod Multi" src="../images/k8s/pod-multi-detail.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Containers inside the pod share the same IP address of the pod, but the port of each container is different. Intra container communication happens inside the pods by localhost.&lt;/p&gt;
&lt;p&gt;For loosely coupled system, the containers from two different pods can talk to each other through network communication.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pod Multi Container multi" src="../images/k8s/pod-multi-container-multi.jpg"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pods are also the unit of scaling in kubernetes world. We scale pods up and down (add or remove pods) while scaling.&lt;/li&gt;
&lt;li&gt;Pods are &lt;em&gt;atomic&lt;/em&gt;. Which means we just create replicas of pods. We don't wait for the containers to be up before creating a pod. We just create create replicas of already up and running pods.&lt;/li&gt;
&lt;li&gt;Pod lifecycle is:
    &lt;strong&gt;pending -&amp;gt; running -&amp;gt; success or failed -&amp;gt; die&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;There is no half (partially up) pod. Either it's up or not.&lt;/li&gt;
&lt;li&gt;Ideally 1 pod gets scheduled to one node&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pod Lifecycle:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pod lifecycle" src="../images/k8s/pod-lifecycle.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;First we provide the manifest file to API server in k8s master node&lt;/li&gt;
&lt;li&gt;API server receives manifest file and tries to run container and pod goes to pending mode&lt;/li&gt;
&lt;li&gt;In pending mode, image is downloaded&lt;/li&gt;
&lt;li&gt;Then container inside the pods are run&lt;/li&gt;
&lt;li&gt;Then it goes to running mode&lt;/li&gt;
&lt;li&gt;And if the purpose of pod is full filled, then when pod is gracefully stopped, it goes to succeed state&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note: If for some whatever reason, if some problem arises in pending mode, then the pod goes to failed mode.&lt;/p&gt;
&lt;h3&gt;Replication Controller&lt;/h3&gt;
&lt;p&gt;But, in real world, we really don't work with pods directly. We use ReplicationController to work with pods.
ReplicationController sits on top of pod and it instantiating the pod(s)&lt;/p&gt;
&lt;p&gt;&lt;img alt="Replication Controller" src="../images/k8s/rc.png"&gt;&lt;/p&gt;
&lt;h3&gt;Services&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Pods are volatile. They are not persistent.&lt;/li&gt;
&lt;li&gt;Pods go alive and die rapidly. When they die and generate their IP address changes rapidly. If pods die or new pods are added it's very difficult to manage the IP address and connection between these pods. To address this issue, we make use of service.&lt;/li&gt;
&lt;li&gt;Service sits between pods layer and manages the network connection between the pods&lt;/li&gt;
&lt;li&gt;They also do load balancing tasks&lt;/li&gt;
&lt;li&gt;It's the job of service to send traffic to healthy pods and it uses TCP protocol by default&lt;/li&gt;
&lt;li&gt;When our app is deployed in Kubernetes, we want it to be used by public. Hence, Service also helps to expose our application to public world (in the internet)&lt;/li&gt;
&lt;li&gt;Service gets single DNS, static IP, and never changing port.&lt;/li&gt;
&lt;li&gt;Services are stateful and they never change once defined.&lt;/li&gt;
&lt;li&gt;Services and pods are tied together by label&lt;/li&gt;
&lt;li&gt;Our client can talk to service in-order to get access to the application hosted in the pods&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Service" src="../images/k8s/service.png"&gt;&lt;/p&gt;
&lt;h3&gt;Deployments&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Deployments" src="../images/k8s/deployment.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;These are the one which we interact the most&lt;/li&gt;
&lt;li&gt;They sit above the replication controller. And in the world of k8s deployment, replication sets are called replica set&lt;/li&gt;
&lt;li&gt;Deployments are:&lt;/li&gt;
&lt;li&gt;Self documenting&lt;/li&gt;
&lt;li&gt;Write spec once, deploy many&lt;/li&gt;
&lt;li&gt;Versioned&lt;/li&gt;
&lt;li&gt;Simple rolling updates and rollbacks&lt;/li&gt;
&lt;li&gt;Proper first class REST objects in k8s api&lt;/li&gt;
&lt;li&gt;Defined in standard manifest file&lt;/li&gt;
&lt;li&gt;Deployed via API server (in master node)&lt;/li&gt;
&lt;li&gt;Add features to replication controller&lt;/li&gt;
&lt;/ul&gt;</content><category term="tutorial, blog, information"></category><category term="devops"></category><category term="kubernetes"></category><category term="container"></category><category term="orchestration"></category></entry><entry><title>Build AWS CodePipeline CI/CD for your Django Application</title><link href="https://sagargiri.com/build-aws-codepipeline-for-cicd" rel="alternate"></link><published>2019-02-15T22:50:00+09:00</published><updated>2019-02-15T22:50:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2019-02-15:/build-aws-codepipeline-for-cicd</id><summary type="html">&lt;p&gt;In this article, you'll learn how to setup AWS CodePipeline for Continuous Integration and Continuous Delivery (CI/CD) pipeline for your Django Application.&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Assumption: For this tutorial, I am assuming you already have an EC2 instance where you've configured and deploy a Django application.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In &lt;a href="https://girisagar46.github.io/from-bitbucket-pipeline-to-aws-codecommit"&gt;previous tutorial&lt;/a&gt;, you learnt about syncing your BitBucket repository to AWS CodeCommit. Now, since your source code is already into AWS CodeCommit, you can now setup AWS CodePipeline for CI/CD.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Cover" src="../images/codepipeline/cover.png"&gt;&lt;/p&gt;
&lt;p&gt;This tutorial will be a little bit long and I will guide you to setup AWS CodePipeline for your Django application step by step with no step skipped.&lt;/p&gt;
&lt;p&gt;Okay, Let's begin!&lt;/p&gt;
&lt;h2&gt;Step 0 (True programmer starts counting from zero ;) )&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Go to AWS Console and select AWS CodePipeline which is under the &lt;strong&gt;Developer Tools&lt;/strong&gt; section. Or you can also search for AWS CodePipeline by typing the name under &lt;strong&gt;Find Services&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="AWS Console" src="../images/codepipeline/console.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;AWS Console&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Step 1&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Once you are in AWS CodePipeline click on &lt;strong&gt;Create pipeline&lt;/strong&gt; button. You'll be then redirected to &lt;strong&gt;Choose pipeline settings&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Choose pipeline settings" src="../images/codepipeline/Step-1.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Give yor pipeline a name under the &lt;strong&gt;Pipeline name&lt;/strong&gt; input field.&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;New service role&lt;/strong&gt; under the &lt;strong&gt;Service role&lt;/strong&gt; section.&lt;/li&gt;
&lt;li&gt;Under &lt;strong&gt;Role name&lt;/strong&gt; section, you'll be provided a default role name. But, you may wish to give a proper name which you can remember. In that case, provide your own &lt;strong&gt;Role name&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Check the checkbox that says &lt;em&gt;Allow AWS CodePipeline to create a service role so it can be used with this new pipeline&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Under &lt;strong&gt;Artifact store&lt;/strong&gt;, select &lt;strong&gt;Custom location&lt;/strong&gt;. And here's a tricky part. Artifacts are files that is generated after the CI part is completed. These artifacts need to be stored somewhere. In CodePipeline's case, it's the S3 bucket. If you choose &lt;strong&gt;Default location&lt;/strong&gt;, your artifacts will be stored in the S3 location defined by the CodePipeline itself. In my case, I choose to store my artifacts in my own S3 bucket. Here's a &lt;a href="#"&gt;tutorial&lt;/a&gt; if you don't know how to create a S3 bucket.&lt;/li&gt;
&lt;li&gt;After filling up this form, click the &lt;strong&gt;Next&lt;/strong&gt; button.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 2&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;After clicking &lt;strong&gt;Next&lt;/strong&gt; at the end of &lt;strong&gt;Step 1&lt;/strong&gt;, you'll see another form where you'll &lt;strong&gt;Add source&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Add Source stage" src="../images/codepipeline/Step-2.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select &lt;strong&gt;Source provider&lt;/strong&gt;. In this case, I am selecting &lt;strong&gt;AWS CodeCommit&lt;/strong&gt; because I've already &lt;a href="https://girisagar46.github.io/from-bitbucket-pipeline-to-aws-codecommit"&gt;synced my BitBucket repository to AWS CodeCommit&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Select your &lt;strong&gt;Repository name&lt;/strong&gt; from the drop down option.&lt;/li&gt;
&lt;li&gt;Select the &lt;strong&gt;Branch name&lt;/strong&gt; from the dropdown option. This &lt;strong&gt;Branch name&lt;/strong&gt; indicates triggering of CI when a commit is made to this branch.&lt;/li&gt;
&lt;li&gt;On &lt;strong&gt;Change detection options&lt;/strong&gt; select the recommended option &lt;strong&gt;Amazon CloudWatch Events&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Next&lt;/strong&gt; and start &lt;strong&gt;Step 3&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 3&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Add build stage" src="../images/codepipeline/Step-3.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select &lt;strong&gt;Build provider&lt;/strong&gt; as &lt;strong&gt;AWS CodeBuild&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Now, you need to setup a &lt;strong&gt;Project&lt;/strong&gt; for AWS CodeBuild. Click on &lt;strong&gt;Create project&lt;/strong&gt; button as shown in the picture.&lt;/li&gt;
&lt;li&gt;When you click that &lt;strong&gt;Create project&lt;/strong&gt;, a new window will open where you will setup a CodeBuild project. Let's call it &lt;strong&gt;Step 4&lt;/strong&gt; for now. Now, let's jump to &lt;strong&gt;Step 4&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 4&lt;/h2&gt;
&lt;p&gt;I'll be breaking down this step into small chunks.&lt;/p&gt;
&lt;h3&gt;Step 4-1 (Create build project)&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Create build project" src="../images/codepipeline/Step-4-1.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Give your project a name under &lt;strong&gt;Project name&lt;/strong&gt; input field.&lt;/li&gt;
&lt;li&gt;Give a project &lt;strong&gt;Description&lt;/strong&gt; if you like. It's totally optional but it's a good practice to describe what it does.&lt;/li&gt;
&lt;li&gt;You can add tags to your project but, I am leaving it blank for now.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Step 4-2 (Environment)&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Environment" src="../images/codepipeline/Step-4-2.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Just below &lt;strong&gt;Create build project&lt;/strong&gt;, you'll see &lt;strong&gt;Environment&lt;/strong&gt; configuration&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Managed image&lt;/strong&gt; under &lt;strong&gt;Environment image&lt;/strong&gt; section&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Operating system&lt;/strong&gt; as &lt;strong&gt;Ubuntu&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Runtime &lt;strong&gt;Python&lt;/strong&gt; (Remember, we are doing CI for Django application)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;aws/codebuild/python:3.6.5&lt;/strong&gt; as &lt;strong&gt;Runtime version&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Select &lt;strong&gt;Always use the latest image for this runtime version&lt;/strong&gt; under the &lt;strong&gt;Image version&lt;/strong&gt; section&lt;/li&gt;
&lt;li&gt;I am not selecting &lt;strong&gt;Privileged&lt;/strong&gt; option. It's description is self explanatory. If you want more details, see the AWS CodeBuild official documentation&lt;/li&gt;
&lt;li&gt;Choose &lt;strong&gt;New service role&lt;/strong&gt; under the &lt;strong&gt;Service role&lt;/strong&gt; section. We are selecting &lt;strong&gt;New service role&lt;/strong&gt; because we haven't created any role yet for the code build from IAM. So, we'll just create a new one.&lt;/li&gt;
&lt;li&gt;Give a proper &lt;strong&gt;Role name&lt;/strong&gt; so that you can remember and if you see it in the IAM console, you'll just instantly recognize that this is a role or AWS CodeBuild&lt;/li&gt;
&lt;li&gt;I am leaving &lt;strong&gt;Additional configuration&lt;/strong&gt; as empty. This is where you set up Environment variables, system configuration and so on. You can setup some &lt;strong&gt;Additional configuration&lt;/strong&gt; if you like&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Step 4-3 (Buildspec)&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Buildspec" src="../images/codepipeline/Step-4-3.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select &lt;strong&gt;Use a buildspec file&lt;/strong&gt; under &lt;strong&gt;Build specifications&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Under the &lt;strong&gt;Buildspec name&lt;/strong&gt; section, you can add your own custom name if you have custom buildspec yml file but that's completely optional&lt;/li&gt;
&lt;li&gt;Fill out the &lt;strong&gt;Logs&lt;/strong&gt; section. Your build logs are all streamed to &lt;strong&gt;AWS CloudWatch&lt;/strong&gt; if you want. You can also use S3 to store your logs. In my case, I chose &lt;strong&gt;AWS CloudWatch&lt;/strong&gt; and gave a &lt;strong&gt;Group name&lt;/strong&gt; and &lt;strong&gt;Stream name&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Now click on &lt;strong&gt;Continue to CodePipeline&lt;/strong&gt; button and you will be redirected to that page (&lt;strong&gt;Step 3&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 5&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;After &lt;strong&gt;Step 4-3&lt;/strong&gt;, you'll be redirected to that &lt;strong&gt;Add build stage&lt;/strong&gt; page and you'll see your newly created build project. If you don't see it there, then just refresh the page.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Project in build stage" src="../images/codepipeline/Step-5.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Now, click the &lt;strong&gt;Next&lt;/strong&gt; button.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 6&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Add deploy stage" src="../images/codepipeline/Step-6.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This step is called &lt;strong&gt;Add deploy stage&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;First, choose the deploy provider. Select &lt;strong&gt;AWS CodeDeploy&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Under the &lt;strong&gt;Application name&lt;/strong&gt; section, you should choose the CodeDeploy application. Since, we haven't yet created the CodeDeploy application, let's just create one. Don't close this browser tab. Just open new browser tab and go to &lt;strong&gt;Step 7&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 7&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;To create the &lt;strong&gt;AWS CodeDeploy&lt;/strong&gt; application, first go to the &lt;strong&gt;CodeDeploy&lt;/strong&gt; section from AWS Console and click on the &lt;strong&gt;Create application&lt;/strong&gt; button. You'll then see &lt;strong&gt;Application configuration&lt;/strong&gt; form. Give your application a name &lt;strong&gt;Application name&lt;/strong&gt; and choose the &lt;strong&gt;Compute platform&lt;/strong&gt; as &lt;strong&gt;EC2/On-premises&lt;/strong&gt; since we are deploying our application on our EC2 server.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Create code deploy application" src="../images/codepipeline/Step-7.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;After you create the CodeDeploy application, we need to divert a little bit to setup a &lt;strong&gt;New service IAM Role&lt;/strong&gt; and a &lt;strong&gt;Deployment group&lt;/strong&gt;. We'll continue from &lt;strong&gt;Step 6&lt;/strong&gt; after setting up the deployment group. For now, let's go to step 8. We'll revisit &lt;strong&gt;Step 6&lt;/strong&gt; after this.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 8 (Create New service IAM Role for CodeDeploy)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Go to the &lt;strong&gt;AWS IAM Console&lt;/strong&gt;
&lt;img alt="IAM Roles" src="../images/codepipeline/Step-8.png"&gt;&lt;/li&gt;
&lt;li&gt;Click on &lt;strong&gt;Roles&lt;/strong&gt; on the sidebar menu&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then click on &lt;strong&gt;Create role&lt;/strong&gt; button.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select &lt;strong&gt;CodeDeploy&lt;/strong&gt; and also &lt;strong&gt;CodeDeploy&lt;/strong&gt; under &lt;strong&gt;Select your use case&lt;/strong&gt;
&lt;img alt="Code deploy selection" src="../images/codepipeline/Step-9.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;You'll see something like this:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Attached permissions policies" src="../images/codepipeline/Step-10.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click &lt;strong&gt;Next: Tags&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Give your role a tag with &lt;strong&gt;Name&lt;/strong&gt; and &lt;strong&gt;Value&lt;/strong&gt; if you like
&lt;img alt="Role tags" src="../images/codepipeline/Step-11.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;Next: Review&lt;/strong&gt; button
&lt;img alt="Role Review" src="../images/codepipeline/Step-12.png"&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Give your role a name. We'll be using this role while creating deployment group.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Then click on &lt;strong&gt;Create role&lt;/strong&gt; button&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 9 (Create deployment group)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Under &lt;strong&gt;CodeDeploy&lt;/strong&gt; &amp;gt; &lt;strong&gt;Application&lt;/strong&gt; section, you'll see the &lt;strong&gt;CodeDeploy&lt;/strong&gt; application name &lt;em&gt;hello-world-codedeploy-application&lt;/em&gt; that you just created in &lt;strong&gt;Step 7&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Click on the application link and under the &lt;strong&gt;Deployment groups&lt;/strong&gt; tab, you'll see a button that says &lt;strong&gt;Create deployment group&lt;/strong&gt;. Click that.&lt;/li&gt;
&lt;li&gt;You'll see a form like this:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Deployment group creation form" src="../images/codepipeline/Step-13.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Under the &lt;strong&gt;Service role&lt;/strong&gt; section, select the service role that you just created on &lt;strong&gt;Step 9&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Under &lt;strong&gt;Environment configuration&lt;/strong&gt; section, select &lt;strong&gt;Amazon EC2 instances&lt;/strong&gt;. Then add tags. These tags are actually the EC2 instance tag that you've already setup for Django application deployment&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fill out the form and click &lt;strong&gt;Create deployment group&lt;/strong&gt; button&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Your deployment group will be created and you'll see a page just like this:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Deployment group creation complete" src="../images/codepipeline/Step-14.png"&gt;&lt;/p&gt;
&lt;h2&gt;Step 10&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Now go to &lt;strong&gt;Step 6&lt;/strong&gt; where you've left off. Since, we've just created &lt;strong&gt;CodeDeploy application&lt;/strong&gt; and &lt;strong&gt;Deployment group&lt;/strong&gt;. Select those values in specific fields. If they are not populated under the select dropdown, just refresh the page and you'll be fine.
&lt;img alt="Code deploy stage" src="../images/codepipeline/Step-15.png"&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Next&lt;/strong&gt; button and go to &lt;strong&gt;Step 11&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 11&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This is probably the last step of our code pipeline setup. After clicking the &lt;strong&gt;Next&lt;/strong&gt; button from &lt;strong&gt;Step 10&lt;/strong&gt;, you'll see a &lt;strong&gt;CodePipeline Review&lt;/strong&gt; page.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="CodePipeline review" src="../images/codepipeline/Step-16.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Just go through it and check if everything is setup correctly&lt;/li&gt;
&lt;li&gt;If you need to change something, go to previous section. And if you think everything is fine, click on &lt;strong&gt;Create pipeline&lt;/strong&gt; button&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 12&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You'll see a success page something like this.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="CodePipeline complete" src="../images/codepipeline/Step-17.png"&gt;&lt;/p&gt;
&lt;h2&gt;Step 13 (Create buildspec.yml file)&lt;/h2&gt;
&lt;p&gt;At this point, your pipeline will obviously fail in the &lt;strong&gt;Build&lt;/strong&gt; section because we haven't setup the &lt;code&gt;buildspec.yml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;Here's a &lt;code&gt;buildspec.yml&lt;/code&gt; file that I setup for my django project pipeline. Take a reference and change accordingly.&lt;/p&gt;
&lt;script src="https://gist.github.com/girisagar46/6e351be212e94e98dbc159e57795a0cc.js"&gt;&lt;/script&gt;

&lt;p&gt;**I'll be writing a separate post on what's going inside the &lt;code&gt;buildspec.yml&lt;/code&gt; file. But, for now just copy-paste this in your &lt;code&gt;buildspec.yml&lt;/code&gt; file and push it to your repository.&lt;/p&gt;
&lt;h2&gt;Step 14 (Create appspec.yml file)&lt;/h2&gt;
&lt;p&gt;Your CodePipeline will still fail on &lt;strong&gt;Deploy&lt;/strong&gt; part because we haven't still setup an &lt;code&gt;appspec.yml&lt;/code&gt; file yet. This file is used by the CodeDeploy to deploy our application to the EC2 instance.&lt;/p&gt;
&lt;p&gt;Here's the configuration for my &lt;code&gt;appspec.yml&lt;/code&gt; file that I setup for my django project pipeline. Take a reference and change it accordingly.&lt;/p&gt;
&lt;script src="https://gist.github.com/girisagar46/b6f6e3f80b1fc32561ebece6fdaa465d.js"&gt;&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;After this, your CodePipeline should be Green.&lt;/strong&gt;&lt;/p&gt;</content><category term="tutorial"></category><category term="devops"></category><category term="cicd"></category><category term="aws"></category><category term="aws codepipeline"></category><category term="codecommit"></category><category term="django"></category><category term="continuous integration"></category><category term="continuous deployment"></category></entry><entry><title>From Bitbucket Pipeline to AWS CodeCommit</title><link href="https://sagargiri.com/from-bitbucket-pipeline-to-aws-codecommit" rel="alternate"></link><published>2019-02-08T22:08:00+09:00</published><updated>2019-02-08T22:08:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2019-02-08:/from-bitbucket-pipeline-to-aws-codecommit</id><summary type="html">&lt;p&gt;In this article you'll ne learning how to sync your BitBucket repository to AWS CodeCommit. Once your AWS CodeCommit is synced with your BitBucket repo you can use AWS CodeCommit for many AWS services like CodePipeline, CodeBuild, CodeDeploy etc.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Setup codecommit IAM user&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Create new user from AWS IAM console&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Give two permission to that new codecommit user: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AWSCodeCommitFullAccess&lt;/code&gt; and &lt;/li&gt;
&lt;li&gt;&lt;code&gt;AmazonS3FullAccess&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open that new user from IAM console. Under user's section and go to &lt;strong&gt;Security Credentials&lt;/strong&gt; tab&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Under &lt;strong&gt;SSH keys for AWS CodeCommit&lt;/strong&gt; upload new SSH public key. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To do this open up your terminal and add following commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ ssh-keygen -f ~/.ssh/codecommit_rsa&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;And inside &lt;strong&gt;.ssh&lt;/strong&gt; folder you’ll find &lt;code&gt;codecommit_rsa&lt;/code&gt; and &lt;code&gt;codecommit_rsa.pub&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;codecommit_rsa.pub&lt;/code&gt; in your editor and copy the contents&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Upload SSH public Key&lt;/strong&gt; button and in the popup and paste the contents of &lt;code&gt;codecommit_rsa.pub&lt;/code&gt; file and click Upload &lt;strong&gt;SSH public Key&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Upload SSH public Key" src="../images/cicd/upload-ssh-aws.png"&gt;&lt;/p&gt;
&lt;p&gt;After uploading this, you’ll get the “SSH key ID”&lt;/p&gt;
&lt;p&gt;&lt;img alt="The SSH KEY ID" src="../images/cicd/ssh-key-id.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open your terminal and edit this file: &lt;code&gt;~/.ssh/config&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Set the values as described below and save the file.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Host git-codecommit.*.amazonaws.com
User Your-IAM-SSH-Key-ID-Here
IdentityFile ~/.ssh/codecommit_rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Now, create new codecommit repository:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AWS Console&lt;/code&gt; &amp;gt; &lt;code&gt;Code Commit&lt;/code&gt; &amp;gt; &lt;code&gt;Getting started&lt;/code&gt; &amp;gt; &lt;code&gt;Create repository&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Give your repository a name and description and hit the &lt;code&gt;create&lt;/code&gt; button.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Setup BitbucketPipeline&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Open your repository in BitBucket on which you want to setup pipeline. [Note: You must have admin access to that repository]&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After opening your repository go to &lt;code&gt;settings&lt;/code&gt; &amp;gt; &lt;code&gt;Pipeline Settings&lt;/code&gt; &amp;gt; &lt;code&gt;Enable Pipeline&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then go to &lt;code&gt;Pipeline&lt;/code&gt; &amp;gt; &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Repository variables&lt;/code&gt; and set these values:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="BitBucket pipeline repository variables" src="../images/cicd/repo-vars.png"&gt;&lt;/p&gt;
&lt;h4&gt;Description of each of these variables:&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CodeCommitConfig&lt;/code&gt; -&amp;gt; 64 bit encoded version of the contents inside your &lt;code&gt;~/.ssh/config&lt;/code&gt; file. Generate this by doing:
    &lt;code&gt;bash
    $ base64 ~/.ssh/config&lt;/code&gt;
    And copy the output to the value field of &lt;code&gt;CodeCommitConfig&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CodeCommitHost&lt;/code&gt;: your AWS codecommit host. Blurred part is the AWS region&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CodeCommitKey&lt;/code&gt;: 64 bit encoded version of the contents inside your private key at &lt;code&gt;~/.ssh/codecommit_rsa&lt;/code&gt;. Generate this by doing:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bash
$ base64 ~/.ssh/codecommit_rsa&lt;/code&gt;
And copy the output to the value field of &lt;code&gt;CodeCommitKey&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CodeCommitRepo&lt;/code&gt;: The link of repository that you just created&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CodeCommitUser&lt;/code&gt;: Your-IAM-SSH-Key-ID&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Create bitbucket-pipelines.yml&lt;/h4&gt;
&lt;p&gt;Create &lt;code&gt;bitbucket-pipelines.yml&lt;/code&gt; file with following contents:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;pipelines&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;step&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;echo $CodeCommitKey &amp;gt; ~/.ssh/codecommit_rsa.tmp&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;base64 -d ~/.ssh/codecommit_rsa.tmp &amp;gt; ~/.ssh/codecommit_rsa&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;chmod 400 ~/.ssh/codecommit_rsa&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;echo $CodeCommitConfig &amp;gt; ~/.ssh/config.tmp&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;base64 -d  ~/.ssh/config.tmp &amp;gt; ~/.ssh/config&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;set +e&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ssh -o StrictHostKeyChecking=no $CodeCommitHost&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;set -e&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;git remote set-url origin ssh://$CodeCommitRepo&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;git push origin $BITBUCKET_BRANCH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Make sure your indention are correct. You can use yml validator (&lt;a href="https://jsonformatter.org/yaml-validator"&gt;https://jsonformatter.org/yaml-validator&lt;/a&gt;) to do this.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Push the &lt;code&gt;bitbucket-pipelines.yml&lt;/code&gt; to any branch, then your pipeline will run and sync the changes to AWS Codecommit repository&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="tutorial"></category><category term="devops"></category><category term="cicd"></category><category term="aws"></category><category term="aws codepipeline"></category><category term="codecommit"></category></entry><entry><title>Docker 101 (Part 1)</title><link href="https://sagargiri.com/docker-101" rel="alternate"></link><published>2018-12-02T00:01:00+09:00</published><updated>2018-12-02T00:01:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2018-12-02:/docker-101</id><summary type="html">&lt;p&gt;I don't have any prior experience with docker. To everyone who is reading, this post is just my experience and as well as a kind of personal note for me for future reference. :)&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Step 1: Install Docker&lt;/h2&gt;
&lt;p&gt;Docker can be installed in pretty much any OS platform, be it Windows, Mac or Linux. Since I use a Linux machine this whole article is based on the Linux system. For installing docker in Windows and Mac, refer the official documentation.&lt;/p&gt;
&lt;p&gt;Ok, enough talk. Let's get started.&lt;/p&gt;
&lt;p&gt;Docker is a company as well as a software. And docker is released every month which is called edge release. And every quarter, a stable version of docker is released. &lt;/p&gt;
&lt;p&gt;One of the ways to install docker on a Linux machine is by using the apt package manager but, the problem with this is approach is that you'll not get the current release of docker which sucks IMO because in every new release new features are baked in. So, I advise you to not install via the apt package manager (if you are in Debian ubuntu variant of Linux) or any other package manager for other Linux distributions.&lt;/p&gt;
&lt;p&gt;There are two versions of docker available to download and install. One being free aka Community Edition and another paid version Enterprise Edition. For learning purpose, we'll install Community Edition docker. Hey! who does not like free software? ;)&lt;/p&gt;
&lt;p&gt;Okay, to install the latest and greatest version of community edition docker, fire up your terminal and execute the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;wget&lt;span class="w"&gt; &lt;/span&gt;-qO-&lt;span class="w"&gt; &lt;/span&gt;https://get.docker.io/&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;What this command does is that it pulls the installation script from the &lt;a href="https://get.docker.io/"&gt;https://get.docker.io/&lt;/a&gt; and execute as a shell command. After the installation is complete, check the version of docker that is installed in your system by:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;--version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You'll see that the current stable release of the docker has been installed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Docker&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;18&lt;/span&gt;.09.0,&lt;span class="w"&gt; &lt;/span&gt;build&lt;span class="w"&gt; &lt;/span&gt;4d60db4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Step 2: Configure Docker&lt;/h2&gt;
&lt;p&gt;Couple of things you need to configure after installing Docker. At the time of installation, docker is attached to the root user and every time you need to execute a docker command, you have to pass the sudo command. This situation is not idle for many cases. To fix this, we should bind docker to another user. Execute the following command to attach docker to another user:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;usermod&lt;span class="w"&gt; &lt;/span&gt;-aG&lt;span class="w"&gt; &lt;/span&gt;docker&lt;span class="w"&gt; &lt;/span&gt;ubuntu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Note: Replace ubuntu with your username&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;After this, install docker machine. Docker machine should also be the latest version. For Windows and Mac user, docker machine is already installed while installing Docker. To install docker machine, head over to this link &lt;a href="https://github.com/docker/machine/release"&gt;https://github.com/docker/machine/release&lt;/a&gt;. You'll see the command which is like this...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;curl&lt;span class="w"&gt; &lt;/span&gt;-L&lt;span class="w"&gt; &lt;/span&gt;https://github.com/docker/machine/releases/download/v0.16.0/docker-machine-&lt;span class="sb"&gt;`&lt;/span&gt;uname&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="sb"&gt;`&lt;/span&gt;-&lt;span class="sb"&gt;`&lt;/span&gt;uname&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;/tmp/docker-machine&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;chmod&lt;span class="w"&gt; &lt;/span&gt;+x&lt;span class="w"&gt; &lt;/span&gt;/tmp/docker-machine&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;cp&lt;span class="w"&gt; &lt;/span&gt;/tmp/docker-machine&lt;span class="w"&gt; &lt;/span&gt;/usr/local/bin/docker-machine
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Execute the above command and check if docker machine is installed or not by executing&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;docker-machine&lt;span class="w"&gt; &lt;/span&gt;version
docker-machine&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.16.0,&lt;span class="w"&gt; &lt;/span&gt;build&lt;span class="w"&gt; &lt;/span&gt;702c267f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, install docker compose.&lt;/p&gt;
&lt;p&gt;Head over to this link &lt;a href="https://github.com/docker/compose/release"&gt;https://github.com/docker/compose/release&lt;/a&gt;. You'll see the command which is like this...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;curl&lt;span class="w"&gt; &lt;/span&gt;-L&lt;span class="w"&gt; &lt;/span&gt;https://github.com/docker/compose/releases/download/1.23.2/docker-compose-&lt;span class="sb"&gt;`&lt;/span&gt;uname&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="sb"&gt;`&lt;/span&gt;-&lt;span class="sb"&gt;`&lt;/span&gt;uname&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-o&lt;span class="w"&gt; &lt;/span&gt;/usr/local/bin/docker-compose
$&lt;span class="w"&gt; &lt;/span&gt;chmod&lt;span class="w"&gt; &lt;/span&gt;+x&lt;span class="w"&gt; &lt;/span&gt;/usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Grab that command and execute it. Once complete, check if docker machine is installed or not by executing&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;docker-compose&lt;span class="w"&gt; &lt;/span&gt;version
docker-compose&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.23.2,&lt;span class="w"&gt; &lt;/span&gt;build&lt;span class="w"&gt; &lt;/span&gt;1110ad01
docker-py&lt;span class="w"&gt; &lt;/span&gt;version:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.6.0
CPython&lt;span class="w"&gt; &lt;/span&gt;version:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.6.7
OpenSSL&lt;span class="w"&gt; &lt;/span&gt;version:&lt;span class="w"&gt; &lt;/span&gt;OpenSSL&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.1.0f&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;May&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2017&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That's pretty much it. Now you have docker installed in your Linux machine.&lt;/p&gt;
&lt;p&gt;PS. If you are using windows or MAC, visit the official docker website &lt;a href="https://docs.docker.com/docker-for-windows/install/"&gt;https://docs.docker.com/docker-for-windows/install/&lt;/a&gt; to get more details.&lt;/p&gt;
&lt;p&gt;In the next part, well dive deeper into the Docker world. &lt;/p&gt;</content><category term="tech, docker"></category><category term="docker"></category></entry><entry><title>Installing Python3.6 in Ubuntu 16.04 LTS Instance Server</title><link href="https://sagargiri.com/installing-python3.6-in-ubuntu-server" rel="alternate"></link><published>2018-05-23T23:32:00+09:00</published><updated>2018-05-23T23:32:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2018-05-23:/installing-python3.6-in-ubuntu-server</id><summary type="html">&lt;p&gt;Installing Python 3.6.3 in your freshly installed Ubuntu 16.04 Desktop, Linux Mint Desktop or even in AWS/Azure Ubuntu 16.04 server instance is pain in the a**. This article will teach you how to install Python 3.6.3 from source including the dependencies you need to install inorder to work it correctly.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here is the step by step guide to install &lt;code&gt;Python 3.6.3&lt;/code&gt; in your AWS EC2's Ubuntu 16.04 server instance or in your local machine with Ubuntu 16.04 LTS Desktop or in Linux Mint.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: If you are using Ubuntu 18.04 LTS, then it ships with Python 3.6.3 by default.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Check which Python version is pre-installed in the system by typing &lt;code&gt;$ python3 -V&lt;/code&gt; in the terminal. Generally it is &lt;code&gt;Python 3.5.2&lt;/code&gt; for Ubtuntu 16.04 LTS.&lt;/p&gt;
&lt;h2&gt;Pre-requisites&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;First you need to upgrade and update your system.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo apt update &amp;amp;&amp;amp; sudo apt -y upgrade&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then you need to install &lt;code&gt;zlib1g-dev&lt;/code&gt; package because of &lt;a href="https://github.com/pypa/pip/issues/1919"&gt;this&lt;/a&gt; issue. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo apt -y install zlib1g-dev&lt;/code&gt;
To make sure it is installed correctly, type &lt;code&gt;$ cat /usr/include/zlib.h&lt;/code&gt;. It'll show you the source of &lt;code&gt;zlib&lt;/code&gt; header file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Because of &lt;a href="https://stackoverflow.com/questions/893053/seeing-escape-characters-when-pressing-the-arrow-keys-in-python-shell"&gt;this&lt;/a&gt; issue, you also have to install another package called &lt;code&gt;libreadline-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo apt install libreadline-dev&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now, install &lt;code&gt;build-essential&lt;/code&gt; and other bunch of stuffs which is required by &lt;code&gt;Python 3.6.3&lt;/code&gt; afterwards.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo apt install build-essential checkinstall libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;These packages are needed for setting up SSL for downloading packages over PIP, for setting up &lt;code&gt;sqlite&lt;/code&gt;, &lt;code&gt;g++&lt;/code&gt; and so on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Export &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; for secure SSL connection.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ export LD_LIBRARY_PATH=/usr/local/ssl/lib/&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Begin installation of Python 3.6.3&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;First, download tar zipped file from Python FTP server.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;wget https://www.python.org/ftp/python/3.6.3/Python-3.6.3.tgz&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extract the zipped file:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ tar zxvf Python-3.6.3.tgz&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Move Python3.6.3 directory to &lt;code&gt;/opt/&lt;/code&gt; directory and &lt;code&gt;cd&lt;/code&gt; into it.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo mv Python-3.6.3 /opt/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ cd /opt/Python-3.6.3/&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure Python directory.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$./configure --enable-optimizations&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make it:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ make&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Test the Make if you want (this is optional)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ make test&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install it via Make:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo make install&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Verify that Python 3.6.3 is installed in your system by typing&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ python3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If it again shows Python 3.5.2 then type &lt;code&gt;$ python3.6&lt;/code&gt;. To make things easier, set up an alias. To set up alias do the following:&lt;/p&gt;
&lt;p&gt;Edit &lt;code&gt;.bashrc&lt;/code&gt; file located in your home directory.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ nano ~/.bashrc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add following line at the end&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias python3=/usr/local/bin/python3.6&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;At this point, Python 3.6.3 is correctly installed in your system&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Further steps:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure yout PIP is correct. In Python2 is &lt;code&gt;pip&lt;/code&gt; and in Python3 its &lt;code&gt;pip3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ pip3 -V&lt;/code&gt; shows you which Python it is pointing to.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are using &lt;code&gt;pyodbc&lt;/code&gt; then you need to install &lt;code&gt;unixodbc-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ sudo apt -f install unixodbc-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then you can insall &lt;code&gt;pyodbc&lt;/code&gt; with:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ pip3 install pyodbc&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="tutorial"></category><category term="tutorial"></category><category term="python3.6"></category><category term="python"></category><category term="installation"></category></entry><entry><title>Be a self taught Python programmer in 2018.</title><link href="https://sagargiri.com/teach-yourself-python-2018" rel="alternate"></link><published>2018-03-11T22:38:00+09:00</published><updated>2018-03-11T22:38:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2018-03-11:/teach-yourself-python-2018</id><summary type="html">&lt;p&gt;Internet is a fountain of knowledge. You can teach yourself anything via resources that are available online in the Internet. In this post I'll be sharing some tips, MOOC and resources so that you can teach yourself Python programming language in 2018. This post is solely based on my experince.&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Beautiful is better than ugly.
Explicit is better than implicit. 
Simple is better than complex. 
Complex is better than complicated.
- The Zen of Python, by Tim Peters&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I am not writing this post to tell you what is Python? You can find what it is just by doing a simple Google search on &lt;strong&gt;"What is Python?"&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;An StackOverflow post &lt;a href="https://stackoverflow.blog/2017/09/06/incredible-growth-python/"&gt;The Incredible Growth of Python&lt;/a&gt; quotes &lt;strong&gt;"Python has a solid claim to being the fastest-growing major programming language"&lt;/strong&gt; and it is absolutely true. This blog post also claims that &lt;strong&gt;"Python was the most visited tag on Stack Overflow within high-income nations"&lt;/strong&gt;. And these are not just a random quotes by a random blogger. This facts is based on year long data dump in StackOverflow website.&lt;/p&gt;
&lt;p&gt;Just look at this graph which tells the future trend of Python programming language. Isn't is beautiful?&lt;/p&gt;
&lt;p&gt;&lt;img alt="StackOverflow trend" src="https://zgab33vy595fw5zq-zippykid.netdna-ssl.com/wp-content/uploads/2017/09/growth_major_languages-1-1024x878.png"&gt;
&lt;em&gt;source:&lt;a href="https://stackoverflow.blog/2017/09/06/incredible-growth-python/"&gt;https://stackoverflow.blog/2017/09/06/incredible-growth-python/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Now, let me tell something about myself. I am a self taught Python programmer. I started learning Python in 2015 when I was a third semester student. I've not taken any formal course on programming in Python except that one time when our college conducted four classes on Python programming language with one class being of approximately 2-3 hours. But, I had already completed the Python basics before so, it wasn't fruitfull for me. But, I kept on taking the class because "ATTENDANCE" was a must.&lt;/p&gt;
&lt;p&gt;So, inorder to gain more knowledge in Python, I started learning from online resources. And over the course of time, I think I've gained enough (but, not enough) knowledge in Python. So, Here's the MOOC you can follow (which I followed) to be a self taught Python programmer.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Start with Python3. Because, Python2 is &lt;a href="http://pythonclock.org/"&gt;retiring&lt;/a&gt; and Python3 is the future. However, back in 2015 I started with Python 2.7 (Irony). Now, I code almost everything in Python 3.6.3.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn the basics. Some resources where you can start are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you want to learn interactively and online. You may want to try &lt;a href="https://www.codecademy.com/learn/learn-python"&gt;Codecademy Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are a learner through video tutorials, follow these online courses:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.udemy.com/python-for-absolute-beginners-u/"&gt;Udemy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/programming-foundations-with-python--ud036"&gt;Udacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/learn/python4"&gt;Coursera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pythonprogramming.net/"&gt;pythonprogramming.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Youtube is also also an enormous library of video tutorials. Here are some channels and playlist where you can learn Python from the basics.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HBxCHonP6Ro&amp;amp;list=PL6gx4Cwl9DGAcbMi1sH6oAMk4JHw91mC_"&gt;Python 3.4 Programming Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oVp1vrfL_w4&amp;amp;list=PLQVvvaa0QuDe8XSftW-RAxdo6OmaeL85M"&gt;Python 3 Basics Tutorial Series&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are learner by reading books, then are are few books that I recommend and are also free. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Here is the huge collection of online of books: &lt;a href="https://pythonbooks.revolunet.com/"&gt;https://pythonbooks.revolunet.com/&lt;/a&gt;. However, the ones I like are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://interactivepython.org/runestone/static/thinkcspy/index.html"&gt;Think Like a Computer Scientist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://automatetheboringstuff.com/"&gt;Automate the Boring Stuff&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Pro Tip: Follow just one book. Don't ramble.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Here is my &lt;a href="https://github.com/girisagar46/PythonTrainingClass"&gt;GitHub repository&lt;/a&gt; which I've prepared while teaching Python programming language in Deerwalk. This covers basic Python course if you are interested. Please give a star if you like this and contributers are welcome.&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Make a habit of reading and understanding the core python documentation. &lt;a href="https://docs.python.org/3/"&gt;Python3 Docs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you get stuck, do not hesitate to ask questions in &lt;a href="https://stackoverflow.com/"&gt;StackOverflow&lt;/a&gt; with tag &lt;strong&gt;#Python3&lt;/strong&gt;. But, be formal while asking questions in StackOverflow. Follow this guide &lt;a href="https://stackoverflow.com/help/how-to-ask"&gt;How do I ask a good question?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After completing basics, try learning advance stuffs. You can do this by following some of the python blogs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://talkpython.fm/"&gt;https://talkpython.fm/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://realpython.com/"&gt;https://realpython.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fullstackpython.com/blog.html"&gt;https://www.fullstackpython.com/blog.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More here: &lt;a href="https://pythontips.com/2013/07/31/10-python-blogs-worth-following/"&gt;https://pythontips.com/2013/07/31/10-python-blogs-worth-following/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;PS. This are some of the blogs that I follow. Or else, I simply do a Google search.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don't be afraid to do Google search if you get stuck while solving a problem or while trying to learn some concepts like decorators, generators, design patterns, etc. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Pro Tip: Try solving any problem by yourself first. That's the only way to learn it. If you can't, then ask questions.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;While writing code, always follow the protocols of good coding styles in Python. Learn about python coding ethics here: &lt;a href="http://pep8.org/"&gt;http://pep8.org/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make maximum use of code editors and IDE like: PyCharm, VsCode, SublimeText&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Projects, Projects, Projects (Obviously)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There's no need to do advance commercial projects, but make sure you implement the basic python core concepts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try to implememt core libraries that comes within the Python package like json, csv, urllib3, etc. And also try to use third package libraries.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are searching for project topics and ideas, here is a good resource to follow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://knightlab.northwestern.edu/2014/06/05/five-mini-programming-projects-for-the-python-beginner/"&gt;https://knightlab.northwestern.edu/2014/06/05/five-mini-programming-projects-for-the-python-beginner/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.practicepython.org/"&gt;http://www.practicepython.org/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create your &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt; account. Push the projects you've done to your GitHub repository. If you don't know how to use Git and GitHub learn it &lt;a href="http://try.github.io/"&gt;http://try.github.io/&lt;/a&gt;. And trust me, you won't regret of learning how to use Git and Github.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Trust me, GitHub is your new resume now a days&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Follow Python groups in Facebook. I am saying the real groups with huge number of members. You can find them just by searching. Why follow these groups? because there are some good fellow members that share awesome blog posts and projects that they've done.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Practice Practice Practice&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Follow, star the open source projects in Github. Here's the curated list of Open source python projects. &lt;a href="https://awesome-python.com/"&gt;https://awesome-python.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn about tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/"&gt;Virtual Environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pythonforbeginners.com/basics/python-pip-usage"&gt;PIP Package Manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now, you are confident in basics, try learning to use libraries and web frameworks like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Django&lt;/li&gt;
&lt;li&gt;Flask&lt;/li&gt;
&lt;li&gt;Data Science Libraries&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Links to each libraries can be found here: &lt;a href="https://awesome-python.com/"&gt;https://awesome-python.com/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Do small projects with the framework and libraries that you've learned and push your code to GitHub.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn new topic everyday. &lt;em&gt;P.S. I learned about Python enums today :)&lt;/em&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After this you can try applying for Python dev jobs. Here is an interesting &lt;a href="https://www.toptal.com/python#hiring-guide"&gt;Toptal article&lt;/a&gt; about what recruiters expect in Python dev. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="blog"></category><category term="python"></category><category term="mooc"></category><category term="resources"></category></entry><entry><title>Download Youtube Videos in Ubuntu for FREE!</title><link href="https://sagargiri.com/download-youtube-videos-in-ubuntu" rel="alternate"></link><published>2017-02-22T22:21:00+09:00</published><updated>2017-02-22T22:21:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2017-02-22:/download-youtube-videos-in-ubuntu</id><summary type="html">&lt;p&gt;There are some free as well as paid online tool for downloading Youtube videos but youtube-dl is free, opensource, geeky and awesome command line tool to download videos from Youtube.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://rg3.github.io/youtube-dl/"&gt;youtube-dl&lt;/a&gt; is a command-line program to download videos from YouTube.com and a few more sites like vimeo, 9gag, Dailymotion, &lt;a href="https://rg3.github.io/youtube-dl/supportedsites.html"&gt;etc&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;It is purely build in Python and requires the Python interpreter (2.6, 2.7, or 3.2+) to use it and it is not platform specific. There's also a &lt;a href="https://yt-dl.org/latest/youtube-dl.exe"&gt;Windows executable&lt;/a&gt; for Windows user. And the most cool thing about youtube-dl is that it's opensource and released to the public domain.&lt;/p&gt;
&lt;p&gt;This tutorial illustrates how to install and use it in Ubuntu. But to use this free software you need Python installed in your system.&lt;/p&gt;
&lt;h2&gt;Step 1: Install youtube-dl&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;youtube-dl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or, install via &lt;a href="https://girisagar46.github.io/install-python-pip-package-management-system-in-ubuntu"&gt;PIP&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;youtube-dl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Step 2 : Use it for free&lt;/h2&gt;
&lt;p&gt;Fire up your terminal. And type&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ youtube-dl [URL for video]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;eg. &lt;code&gt;$ youtube-dl https://www.youtube.com/watch?v=KWZGAExj-es&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Choosing the quality:&lt;/h3&gt;
&lt;p&gt;youtube-dl gives option to download videos of different quality. 
To download videos of high quality, type the commands provided below:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ youtube-dl -F https://www.youtube.com/watch?v=KWZGAExj-es&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This command gives the information of the video. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;linuxsagar@ubuntu:~&lt;span class="w"&gt; &lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;youtube-dl&lt;span class="w"&gt; &lt;/span&gt;-F&lt;span class="w"&gt; &lt;/span&gt;https://www.youtube.com/watch?v&lt;span class="o"&gt;=&lt;/span&gt;KWZGAExj-es
&lt;span class="o"&gt;[&lt;/span&gt;youtube&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;KWZGAExj-es:&lt;span class="w"&gt; &lt;/span&gt;Downloading&lt;span class="w"&gt; &lt;/span&gt;webpage
&lt;span class="o"&gt;[&lt;/span&gt;youtube&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;KWZGAExj-es:&lt;span class="w"&gt; &lt;/span&gt;Downloading&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;info&lt;span class="w"&gt; &lt;/span&gt;webpage
&lt;span class="o"&gt;[&lt;/span&gt;youtube&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;KWZGAExj-es:&lt;span class="w"&gt; &lt;/span&gt;Extracting&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;information
&lt;span class="o"&gt;[&lt;/span&gt;info&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Available&lt;span class="w"&gt; &lt;/span&gt;formats&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;KWZGAExj-es:
format&lt;span class="w"&gt; &lt;/span&gt;code&lt;span class="w"&gt;  &lt;/span&gt;extension&lt;span class="w"&gt;  &lt;/span&gt;resolution&lt;span class="w"&gt; &lt;/span&gt;note
&lt;span class="m"&gt;249&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;audio&lt;span class="w"&gt; &lt;/span&gt;only&lt;span class="w"&gt; &lt;/span&gt;DASH&lt;span class="w"&gt; &lt;/span&gt;audio&lt;span class="w"&gt;   &lt;/span&gt;53k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;opus&lt;span class="w"&gt; &lt;/span&gt;@&lt;span class="w"&gt; &lt;/span&gt;50k,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.81MiB
&lt;span class="m"&gt;250&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;audio&lt;span class="w"&gt; &lt;/span&gt;only&lt;span class="w"&gt; &lt;/span&gt;DASH&lt;span class="w"&gt; &lt;/span&gt;audio&lt;span class="w"&gt;   &lt;/span&gt;73k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;opus&lt;span class="w"&gt; &lt;/span&gt;@&lt;span class="w"&gt; &lt;/span&gt;70k,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.35MiB
&lt;span class="m"&gt;140&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;m4a&lt;span class="w"&gt;        &lt;/span&gt;audio&lt;span class="w"&gt; &lt;/span&gt;only&lt;span class="w"&gt; &lt;/span&gt;DASH&lt;span class="w"&gt; &lt;/span&gt;audio&lt;span class="w"&gt;  &lt;/span&gt;128k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;m4a_dash&lt;span class="w"&gt; &lt;/span&gt;container,&lt;span class="w"&gt; &lt;/span&gt;mp4a.40.2@128k,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;.65MiB
&lt;span class="m"&gt;171&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;audio&lt;span class="w"&gt; &lt;/span&gt;only&lt;span class="w"&gt; &lt;/span&gt;DASH&lt;span class="w"&gt; &lt;/span&gt;audio&lt;span class="w"&gt;  &lt;/span&gt;137k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;vorbis@128k,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;.44MiB
&lt;span class="m"&gt;251&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;audio&lt;span class="w"&gt; &lt;/span&gt;only&lt;span class="w"&gt; &lt;/span&gt;DASH&lt;span class="w"&gt; &lt;/span&gt;audio&lt;span class="w"&gt;  &lt;/span&gt;174k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;opus&lt;span class="w"&gt; &lt;/span&gt;@160k,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;.84MiB
&lt;span class="m"&gt;278&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;256x144&lt;span class="w"&gt;    &lt;/span&gt;144p&lt;span class="w"&gt;   &lt;/span&gt;92k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;webm&lt;span class="w"&gt; &lt;/span&gt;container,&lt;span class="w"&gt; &lt;/span&gt;vp9,&lt;span class="w"&gt; &lt;/span&gt;12fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.60MiB
&lt;span class="m"&gt;160&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;256x144&lt;span class="w"&gt;    &lt;/span&gt;144p&lt;span class="w"&gt;  &lt;/span&gt;111k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.4d400c,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.86MiB
&lt;span class="m"&gt;242&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;426x240&lt;span class="w"&gt;    &lt;/span&gt;240p&lt;span class="w"&gt;  &lt;/span&gt;223k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;vp9,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;.27MiB
&lt;span class="m"&gt;133&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;426x240&lt;span class="w"&gt;    &lt;/span&gt;240p&lt;span class="w"&gt;  &lt;/span&gt;243k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.4d4015,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;.57MiB
&lt;span class="m"&gt;243&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;640x360&lt;span class="w"&gt;    &lt;/span&gt;360p&lt;span class="w"&gt;  &lt;/span&gt;420k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;vp9,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;.11MiB
&lt;span class="m"&gt;134&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;640x360&lt;span class="w"&gt;    &lt;/span&gt;360p&lt;span class="w"&gt;  &lt;/span&gt;517k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.4d401e,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;.36MiB
&lt;span class="m"&gt;244&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;854x480&lt;span class="w"&gt;    &lt;/span&gt;480p&lt;span class="w"&gt;  &lt;/span&gt;715k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;vp9,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;17&lt;/span&gt;.63MiB
&lt;span class="m"&gt;135&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;854x480&lt;span class="w"&gt;    &lt;/span&gt;480p&lt;span class="w"&gt;  &lt;/span&gt;970k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.4d401e,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;.71MiB
&lt;span class="m"&gt;247&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;1280x720&lt;span class="w"&gt;   &lt;/span&gt;720p&lt;span class="w"&gt; &lt;/span&gt;1499k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;vp9,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;32&lt;/span&gt;.43MiB
&lt;span class="m"&gt;136&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;1280x720&lt;span class="w"&gt;   &lt;/span&gt;720p&lt;span class="w"&gt; &lt;/span&gt;1666k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.4d401f,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;39&lt;/span&gt;.95MiB
&lt;span class="m"&gt;248&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;1920x1080&lt;span class="w"&gt;  &lt;/span&gt;1080p&lt;span class="w"&gt; &lt;/span&gt;2744k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;vp9,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;55&lt;/span&gt;.46MiB
&lt;span class="m"&gt;137&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;1920x1080&lt;span class="w"&gt;  &lt;/span&gt;1080p&lt;span class="w"&gt; &lt;/span&gt;2752k&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.640028,&lt;span class="w"&gt; &lt;/span&gt;24fps,&lt;span class="w"&gt; &lt;/span&gt;video&lt;span class="w"&gt; &lt;/span&gt;only,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;71&lt;/span&gt;.87MiB
&lt;span class="m"&gt;17&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;3gp&lt;span class="w"&gt;        &lt;/span&gt;176x144&lt;span class="w"&gt;    &lt;/span&gt;small&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;mp4v.20.3,&lt;span class="w"&gt; &lt;/span&gt;mp4a.40.2@&lt;span class="w"&gt; &lt;/span&gt;24k
&lt;span class="m"&gt;36&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;3gp&lt;span class="w"&gt;        &lt;/span&gt;320x180&lt;span class="w"&gt;    &lt;/span&gt;small&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;mp4v.20.3,&lt;span class="w"&gt; &lt;/span&gt;mp4a.40.2
&lt;span class="m"&gt;43&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;webm&lt;span class="w"&gt;       &lt;/span&gt;640x360&lt;span class="w"&gt;    &lt;/span&gt;medium&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;vp8.0,&lt;span class="w"&gt; &lt;/span&gt;vorbis@128k
&lt;span class="m"&gt;18&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;640x360&lt;span class="w"&gt;    &lt;/span&gt;medium&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.42001E,&lt;span class="w"&gt; &lt;/span&gt;mp4a.40.2@&lt;span class="w"&gt; &lt;/span&gt;96k
&lt;span class="m"&gt;22&lt;/span&gt;&lt;span class="w"&gt;           &lt;/span&gt;mp4&lt;span class="w"&gt;        &lt;/span&gt;1280x720&lt;span class="w"&gt;   &lt;/span&gt;hd720&lt;span class="w"&gt; &lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;avc1.64001F,&lt;span class="w"&gt; &lt;/span&gt;mp4a.40.2@192k&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;best&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice the format column in the output above? Yes, that's what you need. Also, remember capital F in the above command (-F) gives the format information.&lt;/p&gt;
&lt;p&gt;Now, lets download a 720p mp4 file with format code &lt;em&gt;136&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ youtube-dl -f 136 https://www.youtube.com/watch?v=KWZGAExj-es&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;You only want the audio of a file? No problem, youtube-dl got your back&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;youtube-dl --extract-audio --audio-format mp3 https://www.youtube.com/watch?v=5dKGK81z4js&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;That's it. Similarly, you will be able to download videos/ audio from any site using youtube-dl tool from command line interface.&lt;/p&gt;
&lt;p&gt;This opensource project has been hosted in GitHub. You can checkout the source code from here: &lt;a href="https://github.com/rg3/youtube-dl"&gt;https://github.com/rg3/youtube-dl&lt;/a&gt;&lt;/p&gt;</content><category term="tutorial"></category><category term="tutorial"></category></entry><entry><title>UI Change For Stackoverflow and Github</title><link href="https://sagargiri.com/ui-change-for-stackoverflow-and-github" rel="alternate"></link><published>2017-02-14T19:25:00+09:00</published><updated>2017-02-14T19:25:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2017-02-14:/ui-change-for-stackoverflow-and-github</id><summary type="html">&lt;p&gt;GitHub and Stack Overflow are the most visited and popular website among aspiring and vetran developers/ programmers. Recently UI of both websites have been changed.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://github.com"&gt;GitHub&lt;/a&gt; and &lt;a href="http://stackoverflow.com/"&gt;Stack Overflow&lt;/a&gt; both of these websites have updated their UI. As far as I have seen, mainly the header part or the main navigation menu has been modified.&lt;/p&gt;
&lt;p&gt;GitHub has changed it's header color from old silverish background to full black background. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Github" src="images/GitHub.png"&gt;&lt;/p&gt;
&lt;p&gt;Similarly, &lt;a href="http://stackoverflow.com/"&gt;Stack Overflow&lt;/a&gt; also has updated it's navbar UI. I totally liked these new navbar interface and I'm totally digging it.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Stack Overflow" src="images/Stack_Overflow.png"&gt;&lt;/p&gt;
&lt;p&gt;Recently wired.com has also published a news about how Linkedin is changing it's interface and making it look like facebookish.
More at: &lt;a href="https://www.wired.com/2017/01/new-linkedin-looks-just-like-facebook-smart-move/"&gt;https://www.wired.com/2017/01/new-linkedin-looks-just-like-facebook-smart-move/&lt;/a&gt;&lt;/p&gt;</content><category term="tech, thoughts"></category><category term="news"></category><category term="writings"></category></entry><entry><title>Top Websites That Computer Science Students Must Visit.</title><link href="https://sagargiri.com/top-website-that-cs-student-should-visit" rel="alternate"></link><published>2017-02-13T21:34:00+09:00</published><updated>2017-02-13T21:34:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2017-02-13:/top-website-that-cs-student-should-visit</id><summary type="html">&lt;p&gt;Are you a computer science student? If yes, then this might be a right article for you.&lt;/p&gt;</summary><content type="html">&lt;script&gt;
    $(function() {
        $('a[href]').attr('target', '_blank');
    });
&lt;/script&gt;

&lt;blockquote&gt;
&lt;p&gt;Develop a passion for learning. If you do, you will never cease to grow. - Anthony J. D'Angelo&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I was going through Quora feeds and my eye caught one particular question, "What are the top websites computer science students must visit?" This question had more than 3k followers. I immediately opened the question link and bookmarked it. &lt;/p&gt;
&lt;p&gt;Different users had given many answers and some of the links that I really liked are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/"&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ocw.mit.edu/courses/#electrical-engineering-and-computer-science"&gt;MIT OpenCourseWare&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cs50.tv/2011/fall"&gt;Harvard Extension School/ Hardvard CS50&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.udacity.com/"&gt;Udacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.khanacademy.org/#computer-science"&gt;Khan Academy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/"&gt;Tutorials Point&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.quora.com/"&gt;Quora&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/"&gt;Coursera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackerrank.com/"&gt;HackerRank&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://academicearth.org/subjects/computerscience"&gt;Academic Earth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.open.edu/itunes"&gt;The Open University&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://programming-motherfucker.com/"&gt;Programming Motherfu***r&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.virtualhosting.com/blog/2008/50-killer-online-resources-for-computer-science-students/"&gt;50+ Killer Resources for Computer Science Students&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cs4fn.org/"&gt;Computer Science for Fun&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://code.tutsplus.com/"&gt;Code.tutsplus.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.smartscholar.com/computer-science-guide/"&gt;Computer Science Education Resource Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are some of the links I really liked. But, this isn't the limit. Go through this answer in Quora by yourself.
&lt;a href="https://www.quora.com/What-are-the-top-websites-computer-science-students-must-visit"&gt;https://www.quora.com/What-are-the-top-websites-computer-science-students-must-visit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And, now some of my personal favorites are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dataschool.io/"&gt;Data School&lt;/a&gt; - If you are intersted in data science. &lt;/li&gt;
&lt;li&gt;&lt;a href="http://bigdatauniversity.com/"&gt;Big Data University&lt;/a&gt; - If you are really into big data, machine learning, spark.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://machinelearningmastery.com"&gt;Machinelearning Mastery&lt;/a&gt; - Great place to start your machine learning career.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.datasciencecentral.com/"&gt;Data Science Central&lt;/a&gt; - Awesome blog about machine learning and data science.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ohshitgit.com/"&gt;Oh shit, git!&lt;/a&gt; - How to not screw up your git repo.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/"&gt;Edx&lt;/a&gt; - Quality education for everyone, everywhere for Free!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/girisagar46/how-to-contribute-to-open-source"&gt;How to contribute to Open Source&lt;/a&gt; - Get started to contribute to opensource projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://egghead.io/"&gt;Egghead.io&lt;/a&gt; - Bite-size video tutorials for badass web developers&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.javatpoint.com/"&gt;Javatpoint&lt;/a&gt; - Get started with any popular programming language you like.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.com/"&gt;Free Code Camp&lt;/a&gt; - Open source community that helps you learn to code. (Nepali version coming soon)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/tag/computer-science"&gt;Medium Blog for CS&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/algorithms/"&gt;Algorithms Subreddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.liveedu.tv/"&gt;Live Edu&lt;/a&gt; - Watch professionals code in real time. Visit website, meet coders and learn programming.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.idiotinside.com/topics/python/"&gt;Idiot Inside&lt;/a&gt; - Python and others&lt;/li&gt;
&lt;li&gt;&lt;a href="https://awesome-python.com/"&gt;Awesome Python&lt;/a&gt; - Info about different Python libraries.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://javascriptissexy.com/"&gt;javascriptissexy.com&lt;/a&gt; - Indeed JS is sexy. Awesome blog only and about JS.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Many of the links that are mentioned above are related to programming but, Computer Science is not only about coding/programming.
A competent computer science students should be able to design new algorithms, reduce complexity of the problem set and algorithms, or design a new programming language, implement a compiler or an interpreter, etc. But, without strong knowledge of programming, nothing is possible.&lt;/p&gt;
&lt;p&gt;If you have some cool links, do share it in the comment section below. :) &lt;/p&gt;</content><category term="computer science, tutorial, thoughts"></category><category term="computer science"></category><category term="bsc csit"></category><category term="tutorial"></category><category term="writings"></category></entry><entry><title>The One Stop CSIT Guide</title><link href="https://sagargiri.com/the-csit-guide" rel="alternate"></link><published>2017-02-06T18:44:00+09:00</published><updated>2017-02-06T18:44:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2017-02-06:/the-csit-guide</id><summary type="html">&lt;p&gt;The one-stop bundle for all the resources for 4 years B.Sc. CSIT study.&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;Warning: This is a challenging task. DMCA might take down some repo. Let's see.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The main problem I faced while studying CSIT was that I had to stumble upon networks of hyperlinks to find the exact resource or course material that I needed to do my assignments/reports. Whenever I find something interesting or something that I need, I immediately downloaded that. And that resulted a vast collection of the resource that might be helpful for the students who are studying B.Sc. CSIT.&lt;/p&gt;
&lt;p&gt;To distribute these resources, I tried zipping the folder and uploading to GitHub, but GitHub didn't accept files more than 100MiB. Hence, I had to upload each folder separately. In Order to do that I created a GitHub organization called &lt;a href="https://github.com/CSIT-GUIDE"&gt;CSIT-GUIDE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All these repositories inside &lt;a href="https://github.com/CSIT-GUIDE"&gt;CSIT-GUIDE&lt;/a&gt; has subject wise notes, books, guides, question papers, lab works and other resources. All these were collected by me on 4 years of studying B.Sc. CSIT. I'm just trying to help all other students who are studying CSIT course.&lt;/p&gt;
&lt;p&gt;The organization &lt;a href="https://github.com/CSIT-GUIDE"&gt;CSIT-GUIDE&lt;/a&gt; has eight repositories which are (semester wise) .&lt;/p&gt;
&lt;p&gt;** NOTE: These repositories has the subjects that I was taught. The elective courses I was taught might not be taught to you. **&lt;/p&gt;
&lt;p&gt;If you find anything missing, or you have some extra notes, you can always contribute.&lt;/p&gt;
&lt;p&gt;You can contribute by:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Forking the repo you want to contribute.&lt;/li&gt;
&lt;li&gt;Adding your resource and pushing to your forked repo.&lt;/li&gt;
&lt;li&gt;Sending a new pull request.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;DIRECT LINKS:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/CSIT-GUIDE/FIRST_SEMESTER"&gt;FIRST SEMESTER&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/CSIT-GUIDE/SECOND_SEMESTER"&gt;SECOND SEMESTER&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/CSIT-GUIDE/THIRD_SEMESTER"&gt;THIRD SEMESTER&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/CSIT-GUIDE/FOURTH_SEMESTER"&gt;FOURTH SEMESTER&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/CSIT-GUIDE/FIFTH_SEMESTER"&gt;FIFTH SEMESTER&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/CSIT-GUIDE/SIXTH_SEMESTER"&gt;SIXTH SEMESTER&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/CSIT-GUIDE/SEVENTH_SEMESTER"&gt;SEVENTH SEMESTER&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/CSIT-GUIDE/EIGHTH_SEMESTER"&gt;EIGHTH SEMESTER&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to be a part of &lt;a href="https://github.com/CSIT-GUIDE"&gt;CSIT-GUIDE&lt;/a&gt;, just email me your GitHub username at &lt;code&gt;author@sagargiri.com&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;P.S. The DMCA laws might block these repos. This is just an experiment. If it goes haywire, I'll be sharing these via Google Drive. :-)&lt;/p&gt;</content><category term="CSIT"></category><category term="csit"></category><category term="computer science"></category><category term="iost"></category><category term="bsc csit"></category></entry><entry><title>Installing Git Version Control System</title><link href="https://sagargiri.com/installing-git-version-control-system" rel="alternate"></link><published>2017-02-01T19:01:00+09:00</published><updated>2017-02-01T19:01:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2017-02-01:/installing-git-version-control-system</id><summary type="html">&lt;p&gt;Git is most widely used modern (VCS) version control system. Git is an open source project and originally developed to maintain code for Linux kernel and developed in 2005 by &lt;a href="https://en.wikipedia.org/wiki/Linus_Torvalds"&gt;Linus Torvalds&lt;/a&gt;.&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;"Software is like sex: it's better when it's free." - Linus Torvalds&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Git is available for all platforms Linux, Mac OS X and Windows.&lt;/p&gt;
&lt;h1&gt;Install Git on Mac OS X&lt;/h1&gt;
&lt;p&gt;There are different ways to install Git on a Mac. If you've installed XCode (or it's Command Line Tools), Git may already be installed. To find out, open a terminal and enter &lt;code&gt;git --version&lt;/code&gt;.
Inorder to install a newer version of Git, use one of these methods:&lt;/p&gt;
&lt;h2&gt;Git for Mac Installer&lt;/h2&gt;
&lt;p&gt;The easiest way to install Git on a Mac is via the stand-alone installer:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the latest &lt;a href="https://sourceforge.net/projects/git-osx-installer/files/"&gt;Git for Mac&lt;/a&gt; installer.&lt;/li&gt;
&lt;li&gt;Follow the prompts to install Git.&lt;/li&gt;
&lt;li&gt;Open a terminal and verify the installation was successful by typing &lt;code&gt;git --version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Configure your Git username and email using the following command&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;--global&lt;span class="w"&gt; &lt;/span&gt;user.name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Your Name&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;--global&lt;span class="w"&gt; &lt;/span&gt;user.email&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yourvalidemail@company.com&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Git for Windows stand-alone installer&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Download the latest Git for Windows &lt;a href="https://git-for-windows.github.io/"&gt;installer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Execute the installer, finish the Git Setup wizard screen with default options.&lt;/li&gt;
&lt;li&gt;Open a Command Prompt or Git Bash (search git in all programs).&lt;/li&gt;
&lt;li&gt;Run the following commands to configure your Git username and email using the following command. These details will be associated with any commits that you create:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;--global&lt;span class="w"&gt; &lt;/span&gt;user.name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Your Name&amp;quot;&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;--global&lt;span class="w"&gt; &lt;/span&gt;user.email&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yourvalidemail@company.com&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Git for Linux (Debian/ Ubuntu)&lt;/h2&gt;
&lt;p&gt;1 From your shell, install Git using apt-get (Ubuntu 14.04) or apt (Ubuntu 16.04 or later):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;update
$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Verify the installation was successful by typing git --version:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;--version
git&lt;span class="w"&gt; &lt;/span&gt;version&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.9.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Configure your Git username and email using the following command. These details will be associated with any commits that you create:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;--global&lt;span class="w"&gt; &lt;/span&gt;user.name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Your Name&amp;quot;&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;--global&lt;span class="w"&gt; &lt;/span&gt;user.email&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yourvalidemail@company.com&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;source: &lt;a href="https://www.atlassian.com/git/tutorials/install-git"&gt;https://www.atlassian.com/git/tutorials/install-git&lt;/a&gt;&lt;/p&gt;</content><category term="tutorial"></category><category term="tutorial"></category><category term="github"></category><category term="git"></category><category term="vcs"></category><category term="version control"></category></entry><entry><title>Install Python pip package management system in Ubuntu</title><link href="https://sagargiri.com/install-python-pip-package-management-system-in-ubuntu" rel="alternate"></link><published>2017-01-31T19:21:00+09:00</published><updated>2017-01-31T19:21:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2017-01-31:/install-python-pip-package-management-system-in-ubuntu</id><summary type="html">&lt;p&gt;pip is a package management system used to install and manage software packages written in Python.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;pip&lt;/code&gt; is the replacement for the &lt;code&gt;easy_install&lt;/code&gt; python package management tool. &lt;/p&gt;
&lt;p&gt;If you're running Python 2.7.9+ or Python 3.4+ pip is already installed in the bundle.&lt;/p&gt;
&lt;p&gt;If you are below Python 2.7.9 then these are the steps you need to follow to install PIP.&lt;/p&gt;
&lt;h1&gt;For Ubuntu&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;update
$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;-y&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;python-pip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But, even if you are running python 3.4+ version, and pip is not available in the sytem, you can install by:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;python3-pip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;For Mac OS&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;easy_install&lt;span class="w"&gt; &lt;/span&gt;pip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;For Windows&lt;/h1&gt;
&lt;p&gt;You can install pip via installer. &lt;/p&gt;
&lt;p&gt;Download, &lt;a href="http://download.sjsoft.com/opensource/pip-1.1.win32.exe"&gt;pip-1.1.win32.exe&lt;/a&gt; and run setup.&lt;/p&gt;
&lt;h1&gt;Verify the pip setup&lt;/h1&gt;
&lt;p&gt;Check version of the pip via from command line.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class="w"&gt; &lt;/span&gt;-V
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;pip usage&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;some-package-name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Users can also easily remove the package:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;uninstall&lt;span class="w"&gt; &lt;/span&gt;some-package-name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;pip has a feature to manage full lists of packages and corresponding version numbers, possible through a "requirements" file. And is mainly used for &lt;code&gt;virtual enviromnent&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Sources:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/17271319/how-to-install-pip-on-mac-os-x"&gt;http://stackoverflow.com/questions/17271319/how-to-install-pip-on-mac-os-x&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/4750806/how-do-i-install-pip-on-windows"&gt;http://stackoverflow.com/questions/4750806/how-do-i-install-pip-on-windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.liquidweb.com/kb/how-to-install-pip-on-ubuntu-14-04-lts/"&gt;https://www.liquidweb.com/kb/how-to-install-pip-on-ubuntu-14-04-lts/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Pip_(package_manager)"&gt;https://en.wikipedia.org/wiki/Pip_(package_manager)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><category term="tutorial, python, pip"></category><category term="tutorial"></category><category term="python"></category><category term="pip"></category></entry><entry><title>Integrating Disqus Comment Section In Pelican Blog</title><link href="https://sagargiri.com/integrate-disqus-in-a-post" rel="alternate"></link><published>2017-01-30T21:51:00+09:00</published><updated>2017-01-30T21:51:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2017-01-30:/integrate-disqus-in-a-post</id><summary type="html">&lt;p&gt;Disqus is a worldwide blog comment hosting service for web sites and online communities that uses a networked platform.&lt;sup&gt;[&lt;a href="https://en.wikipedia.org/wiki/Disqus"&gt;1&lt;/a&gt;]&lt;/sup&gt; And integrating Disqus comments in Pelican is straight forward and easy.&lt;/p&gt;</summary><content type="html">&lt;p&gt;After you write a blog post, you expect people to comment in your post. Commenting is necessary because it can increase reader engagement and help build relationship among author and reader. &lt;/p&gt;
&lt;p&gt;Many Pelican themes support Disqus commenting natively. All you need to have is a Disqus account. Go to &lt;a href="https://disqus.com/"&gt;disqus.com&lt;/a&gt; and quickly create an account for yourself.&lt;/p&gt;
&lt;p&gt;Now, lets integrate Disqus to our each and every blog posts.&lt;/p&gt;
&lt;h2&gt;Steps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;While logged in to your Disqus account, head over to &lt;a href="https://disqus.com/admin/create/"&gt;admin create panel&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;You'll see a form. Fill up that form&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Create Site&lt;/strong&gt; button.&lt;/li&gt;
&lt;li&gt;Now on the top left side of the page, you'll see your disqus site. Click on the link. &lt;em&gt;[refer picture below]&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Disqus preview" class="img-center" src="images/disqus1.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Now headover to &lt;em&gt;setting&lt;/em&gt; menu. &lt;em&gt;[refer picture below]&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Disqus setting" class="img-center" src="images/disqus2.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the setting page, you'll see the &lt;strong&gt;Shortname&lt;/strong&gt; of youtr site as shown below.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="shortname" class="img-center" src="images/disqus3.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Copy that &lt;strong&gt;shortname&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now open your &lt;code&gt;pelicanconf.py&lt;/code&gt; file. On that file, add the following lines:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;DISQUS_SITENAME = 'your-site-name'&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Reserve your page via &lt;code&gt;$ fab reserve&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Browse the page and you'll see Disqus has been integrated to your blog post.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="disqus implemented" src="images/disqus4.png"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;If you're confused, see how I configured Disqus comments in my blog from &lt;a href="https://github.com/girisagar46/girisagar46.github.io/blob/source/pelicanconf.py"&gt;here&lt;/a&gt;&lt;/p&gt;</content><category term="tutorial"></category><category term="tutorial"></category><category term="pelican"></category><category term="disqus"></category><category term="commenting"></category></entry><entry><title>Building a static site and hosting in Github (part 2)</title><link href="https://sagargiri.com/pelican-github-part2" rel="alternate"></link><published>2017-01-28T17:00:00+09:00</published><updated>2017-01-28T17:00:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2017-01-28:/pelican-github-part2</id><summary type="html">&lt;p&gt;In &lt;a href="https://girisagar46.github.io/pelican-github-part1"&gt;Part 1&lt;/a&gt;, we just got started with our Pelican blog. In this part, we'll be hacking our blog to make it awesome.&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;In &lt;a href="https://girisagar46.github.io/pelican-github-part1"&gt;Part 1&lt;/a&gt; we've setup our github.io website and kick started out [Pelican] blog. Now, in this second tutorial, we'll configure Fabric and Pelican configuration and when it's all done, we'll create a blog post. And push it to github &lt;code&gt;source&lt;/code&gt; branch and generated HTML to &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;First, let's setup our blog theme.&lt;/h1&gt;
&lt;p&gt;Pelican has tons of themes. All themes can be previewed at &lt;a href="http://www.pelicanthemes.com/"&gt;pelicanthemes.com&lt;/a&gt;. You can pick any themes you like. And, if you are not satisfied with the existing themes, you can also create your &lt;a href="http://docs.getpelican.com/en/3.1.1/themes.html"&gt;own theme&lt;/a&gt;. For this tutorial, we'll be using a theme called &lt;a href="https://github.com/alexandrevicenzi/flex"&gt;Flex&lt;/a&gt; by &lt;a href="https://www.alexandrevicenzi.com/"&gt;Alexandre Vicenzi&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;To setup a theme, create folder inside your &lt;code&gt;username.github.io&lt;/code&gt; directory and name it &lt;code&gt;themes&lt;/code&gt;. Now &lt;code&gt;cd&lt;/code&gt; into that directory and clone the &lt;a href="https://github.com/alexandrevicenzi/Flex.git"&gt;Flex&lt;/a&gt; repository.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://github.com/alexandrevicenzi/Flex.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can setup plugins in same way as the themes. The official repository for the plugins is &lt;a href="https://github.com/getpelican/pelican-plugins"&gt;pelican-plugins&lt;/a&gt;. We won't setup plugins in this tutorial. You can read the documentation by yourself to setup the plugins or I'll be posting a seperate tutorial post on how to setup plugins shortly*.&lt;/p&gt;
&lt;h1&gt;Configuration&lt;/h1&gt;
&lt;p&gt;We have our Flex theme inside our theme directory. Our theme needs a site logo. Site logo should be placed in a images directory. So, create an &lt;code&gt;images&lt;/code&gt; folder inside the &lt;code&gt;content&lt;/code&gt; folder. Paste an image in that folder. If you don't have any, default image will be rendered.&lt;/p&gt;
&lt;p&gt;For the configuration, we'll be working on &lt;code&gt;pelicanconf.py&lt;/code&gt;, &lt;code&gt;publishconf.py&lt;/code&gt; and &lt;code&gt;fabfile.py&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;First let's look at &lt;code&gt;pelicanconf.py&lt;/code&gt;. Open it in a text editor and update it as described in the snippet below. See the comments beginning with &lt;code&gt;#&lt;/code&gt; to know what's happening.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Your Name&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Your Blog Name&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://localhost:8000&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;#used for local build and preview&lt;/span&gt;
&lt;span class="n"&gt;SITETITLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AUTHOR&lt;/span&gt;
&lt;span class="n"&gt;SITESUBTITLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Your own text&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;#needed for theme&lt;/span&gt;
&lt;span class="n"&gt;SITEDESCRIPTION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;your site description&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;#used for meta tag for SEO purposes&lt;/span&gt;
&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;content&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# location to where your articles/posts are located&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Asia/Kathmandu&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# Your current time zone&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;en&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DATE_FORMATS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;en&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%B &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;, %Y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;USE_FOLDER_AS_CATEGORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;COPYRIGHT_YEAR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2017&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;

&lt;span class="c1"&gt;# Theme Settings&lt;/span&gt;
&lt;span class="n"&gt;SITELOGO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/images/Your picture&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;#your site logo&lt;/span&gt;
&lt;span class="n"&gt;FAVICON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/images/favicon.png&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;#your favicon&lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;themes/Flex&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;#path to your theme&lt;/span&gt;
&lt;span class="n"&gt;BROWSER_COLOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#333333&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;PYGMENTS_STYLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;default&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;#for code highlighting&lt;/span&gt;

&lt;span class="c1"&gt;# Blogroll&lt;/span&gt;
&lt;span class="c1"&gt;# if you want to link to external page&lt;/span&gt;
&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;link1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Your link&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c1"&gt;# Social widget&lt;/span&gt;
&lt;span class="c1"&gt;# You can add your own links for facebook, twitter&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Facebook&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Your facebook link&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Twitter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you want to know more details about the configuration, go &lt;a href="https://github.com/alexandrevicenzi/Flex/wiki/Configuration-example"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Next, open &lt;code&gt;publishconf.py&lt;/code&gt; file and modify these lines:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://your_username.github.io&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;RELATIVE_URLS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;Our first post&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;cd&lt;/code&gt; to your &lt;code&gt;content&lt;/code&gt; directory and create a folder called &lt;code&gt;articles&lt;/code&gt;. Inside that &lt;code&gt;articles&lt;/code&gt; folder create a new file called &lt;code&gt;FirstPost.md&lt;/code&gt;.
Open that &lt;code&gt;FirstPost.md&lt;/code&gt; file in a text editor and paste the lines as shown below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;My&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Modified&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;abc&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;abc&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xyz&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;
&lt;span class="n"&gt;Authors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Short&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;

&lt;span class="n"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To know more, read the official &lt;a href="http://docs.getpelican.com/en/stable/content.html"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Generate HTML&lt;/h1&gt;
&lt;p&gt;Go to the root directory of the project or simple do &lt;code&gt;$ cd ..&lt;/code&gt; in the terminal, and type &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;fab&lt;span class="w"&gt; &lt;/span&gt;clean&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;fab&lt;span class="w"&gt; &lt;/span&gt;build&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;fab&lt;span class="w"&gt; &lt;/span&gt;serve&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and browse to &lt;code&gt;http://localhost:8000&lt;/code&gt;. You'll see new shining blog with new design.&lt;/p&gt;
&lt;h1&gt;Commit and push to Github&lt;/h1&gt;
&lt;p&gt;** First, let's push our source code.**&lt;/p&gt;
&lt;p&gt;Type these commands one by one.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;.
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Configuration, themes and first post&amp;quot;&lt;/span&gt;
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;** Push the HTML contents in the &lt;code&gt;master&lt;/code&gt; branch.**&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;ghp-import&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;First push to github.io&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-b&lt;span class="w"&gt; &lt;/span&gt;master&lt;span class="w"&gt; &lt;/span&gt;output&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
$&lt;span class="s2"&gt; git push -u origin master&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, redirect your browser to 'https://your_username.github.io' to view your online blog.&lt;/p&gt;
&lt;p&gt;Upto this you have your blog hosted in github pages and is available to public viewing. Next, I'll be posting some small tutorials on how to add &lt;a href="https://disqus.com"&gt;disqus&lt;/a&gt; comments, google analytics, automate publish using Fabric API, adding and configuring plugins and many more.&lt;/p&gt;
&lt;p&gt;Keep visiting my &lt;a href="https://girisagar46.github.io"&gt;website&lt;/a&gt;.&lt;/p&gt;</content><category term="tutorial"></category><category term="tutorial"></category><category term="pelican"></category></entry><entry><title>Building a static site and hosting in Github (part 1)</title><link href="https://sagargiri.com/pelican-github-part1" rel="alternate"></link><published>2017-01-28T13:00:00+09:00</published><updated>2017-01-28T13:00:00+09:00</updated><author><name>Sagar Giri</name></author><id>tag:sagargiri.com,2017-01-28:/pelican-github-part1</id><summary type="html">&lt;p&gt;The contents that you are seeing right now is the static website built using Pelican. This tutorial series gives you every details on how to create a static blog using pelican and host it to the github server for FREE!&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;For this tutorial series, I'm assuming that you are working in a Linux environment. If not, you can use &lt;a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/"&gt;virtualenv&lt;/a&gt; for Windows or Mac.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;Getting started&lt;/h1&gt;
&lt;p&gt;First the big question, "What is &lt;a href="#"&gt;Pelican&lt;/a&gt;?"&lt;/p&gt;
&lt;p&gt;In short, Pelican is a static site generator that supports Markdown and reST syntax. Powered by Python. For more visit, &lt;a href="http://getpelican.com/"&gt;getpelican.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For this tutorial, you only need to understand basic Git push/pull and branching command and as well as some basic &lt;a href="https://guides.github.com/features/mastering-markdown/"&gt;Markdown&lt;/a&gt; syntax. If you are a noob, no worries I'll cover each and every topics in detail.&lt;/p&gt;
&lt;h2&gt;Prerequisits:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://girisagar46.github.io/installing-git-version-control-system"&gt;Install Git VCS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Install Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Install Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Setup Github account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pages.github.com/"&gt;Setup github.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;A code editor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Setup Github page&lt;/h2&gt;
&lt;p&gt;First you need to have a &lt;a href="https://pages.github.com/"&gt;github.io&lt;/a&gt; page. Noew, clone your github.io repository and &lt;code&gt;cd&lt;/code&gt; into it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://github.com/username/username.github.io
$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;username.github.io/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Create a new Git branch called &lt;code&gt;source&lt;/code&gt; or your any custom name. This new branch only holds your source code. The HTML generated by Pelican will be pushed to master branch which are then rendered in the website. We'll do Git push shortly. But, first let's create a new branch.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;-b&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Push the new branch on Github:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;push&lt;span class="w"&gt; &lt;/span&gt;origin&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You are now working on the &lt;code&gt;source&lt;/code&gt; branch.&lt;/p&gt;
&lt;h2&gt;Setup Pelican&lt;/h2&gt;
&lt;p&gt;Let's start with installing Pelican at the first place. Pelican, Pelican-Plugins and Pelican-Themes are dependent on different python modules and installing them one by one is a pain in the butt. Hence, for the simplicity, create a new file called &lt;code&gt;requirements.txt&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Open &lt;code&gt;requirements.txt&lt;/code&gt; file in a &lt;code&gt;notepad&lt;/code&gt; or &lt;code&gt;gedit&lt;/code&gt; and paste the lines given below and save it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;appdirs==1.4.0
beautifulsoup4==4.5.1
blinker==1.4
bs4==0.0.1
docutils==0.12
ecdsa==0.13
Fabric==1.12.0
feedgenerator==1.9
ghp-import==0.4.1
Jinja2==2.8
Markdown==2.6.7
MarkupSafe==0.23
packaging==16.8
paramiko==1.17.2
pelican==3.6.3
pycrypto==2.6.1
Pygments==2.1.3
pyparsing==2.1.10
python-dateutil==2.5.3
pytz==2016.7
six==1.10.0
Unidecode==0.4.19
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;These are the modules that we need to get started with the Pelican static website generation.&lt;/p&gt;
&lt;p&gt;To install the modules which are inside &lt;code&gt;requirements.txt&lt;/code&gt;, type the following command in the terminal.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you don't know what is pip and how to install it, go &lt;a href="https://girisagar46/install-python-pip-package-management-system-in-ubuntu"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Upto this step you've setup a github.io blog and installed Pelican and it's dependencies.&lt;/p&gt;
&lt;h2&gt;Pelican Quick Start&lt;/h2&gt;
&lt;p&gt;After installing pelican, you can leverage the command &lt;code&gt;$ pelican-quickstart&lt;/code&gt; from the command line.&lt;/p&gt;
&lt;h3&gt;Quick Setup&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd&lt;/code&gt; into your &lt;code&gt;username.github.io&lt;/code&gt; repository that you cloned earlier.
    &lt;code&gt;$ cd username.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Save this &lt;a href="https://raw.githubusercontent.com/girisagar46/girisagar46.github.io/source/.gitignore"&gt;.gitignore&lt;/a&gt; file in your directory. It's needed to make your Github repo clean.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;$ pelican-quickstart&lt;/code&gt; in the terminal&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The quickstart will ask you various questions, which you can answer in turn. Here are some specific answers you should give:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Where&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;.&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;What&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;My&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Awesome&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Blog&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Who&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Full&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;What&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;language&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;en&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;specify&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;prefix&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;.,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;What&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;prefix&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;see&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;above&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;example&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;no&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;trailing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;slash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;your_username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pagination&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;How&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;many&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;articles&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;per&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;10&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;What&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;zone&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Europe/Paris&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Asia&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Kathmandu&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;generate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Fabfile&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Makefile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;automate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;generation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;publishing&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;an&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;auto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;reload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;simpleHTTP&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;assist&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;theme&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;development&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FTP&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SSH&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Dropbox&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;S3&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Rackspace&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Cloud&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Files&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GitHub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Pages&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;personal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;
&lt;span class="n"&gt;Done&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;at&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;path&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;/&lt;/span&gt;&lt;span class="n"&gt;your_username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That's it. Now you have the basic structure of your Pelican blog. The tree structure of the pelican blog is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;.
├── content
├── develop_server.sh
├── fabfile.py
├── Makefile
├── output
├── pelicanconf.py
└── publishconf.py

2 directories, 5 files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here, each files and folder have a specefic meaning. I'll discuss more on it later. &lt;/p&gt;
&lt;h3&gt;Build and serve&lt;/h3&gt;
&lt;p&gt;Generate HTML. All HTML files are generated in the &lt;code&gt;output&lt;/code&gt; directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;fab&lt;span class="w"&gt; &lt;/span&gt;build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here &lt;code&gt;fab&lt;/code&gt; is a build tool that comes with &lt;code&gt;Fabric&lt;/code&gt; module. Now, serve the HTML.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;fab&lt;span class="w"&gt; &lt;/span&gt;serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And redirect your browser to &lt;code&gt;http://localhost:8000&lt;/code&gt;. You'll see the result.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Website preview" src="images/pelican_quickstart.png"&gt;&lt;/p&gt;
&lt;p&gt;** Note: The website generated is only visible in local environment. We haven't pushed anything to Github yet. It'll be done after all configurations have been setup correctly.**&lt;/p&gt;
&lt;p&gt;Now, just sitback, relax and observe every files inside the directory. If you understood nothing, maybe learn some &lt;a href="https://guides.github.com/features/mastering-markdown/"&gt;Markdown&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In &lt;a href="https://girisagar46.github.io/pelican-github-part2#pelican-github-part2"&gt;Part 2&lt;/a&gt; we'll write our first blog post, configure and fabricate pelican, and our first commit to the github.&lt;/p&gt;</content><category term="tutorial"></category><category term="tutorial"></category><category term="pelican"></category></entry></feed>